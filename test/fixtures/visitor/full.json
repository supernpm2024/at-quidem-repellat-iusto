{
  "options": {},
  "patterns": {
    "/foo/": [
      "enter:RegExpLiteral:/foo/",
      "enter:Pattern:foo",
      "enter:Alternative:foo",
      "enter:Character:f",
      "leave:Character:f",
      "enter:Character:o",
      "leave:Character:o",
      "enter:Character:o",
      "leave:Character:o",
      "leave:Alternative:foo",
      "leave:Pattern:foo",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/foo/"
    ],
    "/foo|bar/": [
      "enter:RegExpLiteral:/foo|bar/",
      "enter:Pattern:foo|bar",
      "enter:Alternative:foo",
      "enter:Character:f",
      "leave:Character:f",
      "enter:Character:o",
      "leave:Character:o",
      "enter:Character:o",
      "leave:Character:o",
      "leave:Alternative:foo",
      "enter:Alternative:bar",
      "enter:Character:b",
      "leave:Character:b",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:r",
      "leave:Character:r",
      "leave:Alternative:bar",
      "leave:Pattern:foo|bar",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/foo|bar/"
    ],
    "/||||/": [
      "enter:RegExpLiteral:/||||/",
      "enter:Pattern:||||",
      "enter:Alternative:",
      "leave:Alternative:",
      "enter:Alternative:",
      "leave:Alternative:",
      "enter:Alternative:",
      "leave:Alternative:",
      "enter:Alternative:",
      "leave:Alternative:",
      "enter:Alternative:",
      "leave:Alternative:",
      "leave:Pattern:||||",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/||||/"
    ],
    "/^|$|\\b|\\B/": [
      "enter:RegExpLiteral:/^|$|\\b|\\B/",
      "enter:Pattern:^|$|\\b|\\B",
      "enter:Alternative:^",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "leave:Alternative:^",
      "enter:Alternative:$",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:$",
      "enter:Alternative:\\b",
      "enter:Assertion:\\b",
      "leave:Assertion:\\b",
      "leave:Alternative:\\b",
      "enter:Alternative:\\B",
      "enter:Assertion:\\B",
      "leave:Assertion:\\B",
      "leave:Alternative:\\B",
      "leave:Pattern:^|$|\\b|\\B",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/^|$|\\b|\\B/"
    ],
    "/(?=)/": [
      "enter:RegExpLiteral:/(?=)/",
      "enter:Pattern:(?=)",
      "enter:Alternative:(?=)",
      "enter:Assertion:(?=)",
      "enter:Alternative:",
      "leave:Alternative:",
      "leave:Assertion:(?=)",
      "leave:Alternative:(?=)",
      "leave:Pattern:(?=)",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/(?=)/"
    ],
    "/(?=foo)/": [
      "enter:RegExpLiteral:/(?=foo)/",
      "enter:Pattern:(?=foo)",
      "enter:Alternative:(?=foo)",
      "enter:Assertion:(?=foo)",
      "enter:Alternative:foo",
      "enter:Character:f",
      "leave:Character:f",
      "enter:Character:o",
      "leave:Character:o",
      "enter:Character:o",
      "leave:Character:o",
      "leave:Alternative:foo",
      "leave:Assertion:(?=foo)",
      "leave:Alternative:(?=foo)",
      "leave:Pattern:(?=foo)",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/(?=foo)/"
    ],
    "/(?!)/": [
      "enter:RegExpLiteral:/(?!)/",
      "enter:Pattern:(?!)",
      "enter:Alternative:(?!)",
      "enter:Assertion:(?!)",
      "enter:Alternative:",
      "leave:Alternative:",
      "leave:Assertion:(?!)",
      "leave:Alternative:(?!)",
      "leave:Pattern:(?!)",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/(?!)/"
    ],
    "/(?!foo)/": [
      "enter:RegExpLiteral:/(?!foo)/",
      "enter:Pattern:(?!foo)",
      "enter:Alternative:(?!foo)",
      "enter:Assertion:(?!foo)",
      "enter:Alternative:foo",
      "enter:Character:f",
      "leave:Character:f",
      "enter:Character:o",
      "leave:Character:o",
      "enter:Character:o",
      "leave:Character:o",
      "leave:Alternative:foo",
      "leave:Assertion:(?!foo)",
      "leave:Alternative:(?!foo)",
      "leave:Pattern:(?!foo)",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/(?!foo)/"
    ],
    "/(?=a)*/": [
      "enter:RegExpLiteral:/(?=a)*/",
      "enter:Pattern:(?=a)*",
      "enter:Alternative:(?=a)*",
      "enter:Quantifier:(?=a)*",
      "enter:Assertion:(?=a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:Assertion:(?=a)",
      "leave:Quantifier:(?=a)*",
      "leave:Alternative:(?=a)*",
      "leave:Pattern:(?=a)*",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/(?=a)*/"
    ],
    "/(?=a)+/": [
      "enter:RegExpLiteral:/(?=a)+/",
      "enter:Pattern:(?=a)+",
      "enter:Alternative:(?=a)+",
      "enter:Quantifier:(?=a)+",
      "enter:Assertion:(?=a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:Assertion:(?=a)",
      "leave:Quantifier:(?=a)+",
      "leave:Alternative:(?=a)+",
      "leave:Pattern:(?=a)+",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/(?=a)+/"
    ],
    "/(?=a)?/": [
      "enter:RegExpLiteral:/(?=a)?/",
      "enter:Pattern:(?=a)?",
      "enter:Alternative:(?=a)?",
      "enter:Quantifier:(?=a)?",
      "enter:Assertion:(?=a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:Assertion:(?=a)",
      "leave:Quantifier:(?=a)?",
      "leave:Alternative:(?=a)?",
      "leave:Pattern:(?=a)?",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/(?=a)?/"
    ],
    "/(?=a){/": [
      "enter:RegExpLiteral:/(?=a){/",
      "enter:Pattern:(?=a){",
      "enter:Alternative:(?=a){",
      "enter:Assertion:(?=a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:Assertion:(?=a)",
      "enter:Character:{",
      "leave:Character:{",
      "leave:Alternative:(?=a){",
      "leave:Pattern:(?=a){",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/(?=a){/"
    ],
    "/(?=a){}/": [
      "enter:RegExpLiteral:/(?=a){}/",
      "enter:Pattern:(?=a){}",
      "enter:Alternative:(?=a){}",
      "enter:Assertion:(?=a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:Assertion:(?=a)",
      "enter:Character:{",
      "leave:Character:{",
      "enter:Character:}",
      "leave:Character:}",
      "leave:Alternative:(?=a){}",
      "leave:Pattern:(?=a){}",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/(?=a){}/"
    ],
    "/(?=a){a}/": [
      "enter:RegExpLiteral:/(?=a){a}/",
      "enter:Pattern:(?=a){a}",
      "enter:Alternative:(?=a){a}",
      "enter:Assertion:(?=a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:Assertion:(?=a)",
      "enter:Character:{",
      "leave:Character:{",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:}",
      "leave:Character:}",
      "leave:Alternative:(?=a){a}",
      "leave:Pattern:(?=a){a}",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/(?=a){a}/"
    ],
    "/(?=a){1}/": [
      "enter:RegExpLiteral:/(?=a){1}/",
      "enter:Pattern:(?=a){1}",
      "enter:Alternative:(?=a){1}",
      "enter:Quantifier:(?=a){1}",
      "enter:Assertion:(?=a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:Assertion:(?=a)",
      "leave:Quantifier:(?=a){1}",
      "leave:Alternative:(?=a){1}",
      "leave:Pattern:(?=a){1}",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/(?=a){1}/"
    ],
    "/(?=a){1,}/": [
      "enter:RegExpLiteral:/(?=a){1,}/",
      "enter:Pattern:(?=a){1,}",
      "enter:Alternative:(?=a){1,}",
      "enter:Quantifier:(?=a){1,}",
      "enter:Assertion:(?=a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:Assertion:(?=a)",
      "leave:Quantifier:(?=a){1,}",
      "leave:Alternative:(?=a){1,}",
      "leave:Pattern:(?=a){1,}",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/(?=a){1,}/"
    ],
    "/(?=a){1,2}/": [
      "enter:RegExpLiteral:/(?=a){1,2}/",
      "enter:Pattern:(?=a){1,2}",
      "enter:Alternative:(?=a){1,2}",
      "enter:Quantifier:(?=a){1,2}",
      "enter:Assertion:(?=a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:Assertion:(?=a)",
      "leave:Quantifier:(?=a){1,2}",
      "leave:Alternative:(?=a){1,2}",
      "leave:Pattern:(?=a){1,2}",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/(?=a){1,2}/"
    ],
    "/a*/": [
      "enter:RegExpLiteral:/a*/",
      "enter:Pattern:a*",
      "enter:Alternative:a*",
      "enter:Quantifier:a*",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Quantifier:a*",
      "leave:Alternative:a*",
      "leave:Pattern:a*",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/a*/"
    ],
    "/a+/": [
      "enter:RegExpLiteral:/a+/",
      "enter:Pattern:a+",
      "enter:Alternative:a+",
      "enter:Quantifier:a+",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Quantifier:a+",
      "leave:Alternative:a+",
      "leave:Pattern:a+",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/a+/"
    ],
    "/a?/": [
      "enter:RegExpLiteral:/a?/",
      "enter:Pattern:a?",
      "enter:Alternative:a?",
      "enter:Quantifier:a?",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Quantifier:a?",
      "leave:Alternative:a?",
      "leave:Pattern:a?",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/a?/"
    ],
    "/a{/": [
      "enter:RegExpLiteral:/a{/",
      "enter:Pattern:a{",
      "enter:Alternative:a{",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:{",
      "leave:Character:{",
      "leave:Alternative:a{",
      "leave:Pattern:a{",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/a{/"
    ],
    "/a{}/": [
      "enter:RegExpLiteral:/a{}/",
      "enter:Pattern:a{}",
      "enter:Alternative:a{}",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:{",
      "leave:Character:{",
      "enter:Character:}",
      "leave:Character:}",
      "leave:Alternative:a{}",
      "leave:Pattern:a{}",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/a{}/"
    ],
    "/a{a}/": [
      "enter:RegExpLiteral:/a{a}/",
      "enter:Pattern:a{a}",
      "enter:Alternative:a{a}",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:{",
      "leave:Character:{",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:}",
      "leave:Character:}",
      "leave:Alternative:a{a}",
      "leave:Pattern:a{a}",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/a{a}/"
    ],
    "/a{1}/": [
      "enter:RegExpLiteral:/a{1}/",
      "enter:Pattern:a{1}",
      "enter:Alternative:a{1}",
      "enter:Quantifier:a{1}",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Quantifier:a{1}",
      "leave:Alternative:a{1}",
      "leave:Pattern:a{1}",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/a{1}/"
    ],
    "/a{1/": [
      "enter:RegExpLiteral:/a{1/",
      "enter:Pattern:a{1",
      "enter:Alternative:a{1",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:{",
      "leave:Character:{",
      "enter:Character:1",
      "leave:Character:1",
      "leave:Alternative:a{1",
      "leave:Pattern:a{1",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/a{1/"
    ],
    "/a{1,}/": [
      "enter:RegExpLiteral:/a{1,}/",
      "enter:Pattern:a{1,}",
      "enter:Alternative:a{1,}",
      "enter:Quantifier:a{1,}",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Quantifier:a{1,}",
      "leave:Alternative:a{1,}",
      "leave:Pattern:a{1,}",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/a{1,}/"
    ],
    "/a{1,/": [
      "enter:RegExpLiteral:/a{1,/",
      "enter:Pattern:a{1,",
      "enter:Alternative:a{1,",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:{",
      "leave:Character:{",
      "enter:Character:1",
      "leave:Character:1",
      "enter:Character:,",
      "leave:Character:,",
      "leave:Alternative:a{1,",
      "leave:Pattern:a{1,",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/a{1,/"
    ],
    "/a{1,2}/": [
      "enter:RegExpLiteral:/a{1,2}/",
      "enter:Pattern:a{1,2}",
      "enter:Alternative:a{1,2}",
      "enter:Quantifier:a{1,2}",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Quantifier:a{1,2}",
      "leave:Alternative:a{1,2}",
      "leave:Pattern:a{1,2}",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/a{1,2}/"
    ],
    "/a{1,2/": [
      "enter:RegExpLiteral:/a{1,2/",
      "enter:Pattern:a{1,2",
      "enter:Alternative:a{1,2",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:{",
      "leave:Character:{",
      "enter:Character:1",
      "leave:Character:1",
      "enter:Character:,",
      "leave:Character:,",
      "enter:Character:2",
      "leave:Character:2",
      "leave:Alternative:a{1,2",
      "leave:Pattern:a{1,2",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/a{1,2/"
    ],
    "/a{2,1/": [
      "enter:RegExpLiteral:/a{2,1/",
      "enter:Pattern:a{2,1",
      "enter:Alternative:a{2,1",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:{",
      "leave:Character:{",
      "enter:Character:2",
      "leave:Character:2",
      "enter:Character:,",
      "leave:Character:,",
      "enter:Character:1",
      "leave:Character:1",
      "leave:Alternative:a{2,1",
      "leave:Pattern:a{2,1",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/a{2,1/"
    ],
    "/a*?/": [
      "enter:RegExpLiteral:/a*?/",
      "enter:Pattern:a*?",
      "enter:Alternative:a*?",
      "enter:Quantifier:a*?",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Quantifier:a*?",
      "leave:Alternative:a*?",
      "leave:Pattern:a*?",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/a*?/"
    ],
    "/a+?/": [
      "enter:RegExpLiteral:/a+?/",
      "enter:Pattern:a+?",
      "enter:Alternative:a+?",
      "enter:Quantifier:a+?",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Quantifier:a+?",
      "leave:Alternative:a+?",
      "leave:Pattern:a+?",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/a+?/"
    ],
    "/a??/": [
      "enter:RegExpLiteral:/a??/",
      "enter:Pattern:a??",
      "enter:Alternative:a??",
      "enter:Quantifier:a??",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Quantifier:a??",
      "leave:Alternative:a??",
      "leave:Pattern:a??",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/a??/"
    ],
    "/a{?/": [
      "enter:RegExpLiteral:/a{?/",
      "enter:Pattern:a{?",
      "enter:Alternative:a{?",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Quantifier:{?",
      "enter:Character:{",
      "leave:Character:{",
      "leave:Quantifier:{?",
      "leave:Alternative:a{?",
      "leave:Pattern:a{?",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/a{?/"
    ],
    "/a{}?/": [
      "enter:RegExpLiteral:/a{}?/",
      "enter:Pattern:a{}?",
      "enter:Alternative:a{}?",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:{",
      "leave:Character:{",
      "enter:Quantifier:}?",
      "enter:Character:}",
      "leave:Character:}",
      "leave:Quantifier:}?",
      "leave:Alternative:a{}?",
      "leave:Pattern:a{}?",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/a{}?/"
    ],
    "/a{a}?/": [
      "enter:RegExpLiteral:/a{a}?/",
      "enter:Pattern:a{a}?",
      "enter:Alternative:a{a}?",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:{",
      "leave:Character:{",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Quantifier:}?",
      "enter:Character:}",
      "leave:Character:}",
      "leave:Quantifier:}?",
      "leave:Alternative:a{a}?",
      "leave:Pattern:a{a}?",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/a{a}?/"
    ],
    "/a{1}?/": [
      "enter:RegExpLiteral:/a{1}?/",
      "enter:Pattern:a{1}?",
      "enter:Alternative:a{1}?",
      "enter:Quantifier:a{1}?",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Quantifier:a{1}?",
      "leave:Alternative:a{1}?",
      "leave:Pattern:a{1}?",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/a{1}?/"
    ],
    "/a{1?/": [
      "enter:RegExpLiteral:/a{1?/",
      "enter:Pattern:a{1?",
      "enter:Alternative:a{1?",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:{",
      "leave:Character:{",
      "enter:Quantifier:1?",
      "enter:Character:1",
      "leave:Character:1",
      "leave:Quantifier:1?",
      "leave:Alternative:a{1?",
      "leave:Pattern:a{1?",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/a{1?/"
    ],
    "/a{1,}?/": [
      "enter:RegExpLiteral:/a{1,}?/",
      "enter:Pattern:a{1,}?",
      "enter:Alternative:a{1,}?",
      "enter:Quantifier:a{1,}?",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Quantifier:a{1,}?",
      "leave:Alternative:a{1,}?",
      "leave:Pattern:a{1,}?",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/a{1,}?/"
    ],
    "/a{1,?/": [
      "enter:RegExpLiteral:/a{1,?/",
      "enter:Pattern:a{1,?",
      "enter:Alternative:a{1,?",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:{",
      "leave:Character:{",
      "enter:Character:1",
      "leave:Character:1",
      "enter:Quantifier:,?",
      "enter:Character:,",
      "leave:Character:,",
      "leave:Quantifier:,?",
      "leave:Alternative:a{1,?",
      "leave:Pattern:a{1,?",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/a{1,?/"
    ],
    "/a{1,2}?/": [
      "enter:RegExpLiteral:/a{1,2}?/",
      "enter:Pattern:a{1,2}?",
      "enter:Alternative:a{1,2}?",
      "enter:Quantifier:a{1,2}?",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Quantifier:a{1,2}?",
      "leave:Alternative:a{1,2}?",
      "leave:Pattern:a{1,2}?",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/a{1,2}?/"
    ],
    "/a{1,2?/": [
      "enter:RegExpLiteral:/a{1,2?/",
      "enter:Pattern:a{1,2?",
      "enter:Alternative:a{1,2?",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:{",
      "leave:Character:{",
      "enter:Character:1",
      "leave:Character:1",
      "enter:Character:,",
      "leave:Character:,",
      "enter:Quantifier:2?",
      "enter:Character:2",
      "leave:Character:2",
      "leave:Quantifier:2?",
      "leave:Alternative:a{1,2?",
      "leave:Pattern:a{1,2?",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/a{1,2?/"
    ],
    "/a{2,1?/": [
      "enter:RegExpLiteral:/a{2,1?/",
      "enter:Pattern:a{2,1?",
      "enter:Alternative:a{2,1?",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:{",
      "leave:Character:{",
      "enter:Character:2",
      "leave:Character:2",
      "enter:Character:,",
      "leave:Character:,",
      "enter:Quantifier:1?",
      "enter:Character:1",
      "leave:Character:1",
      "leave:Quantifier:1?",
      "leave:Alternative:a{2,1?",
      "leave:Pattern:a{2,1?",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/a{2,1?/"
    ],
    "/👍🚀❇️/": [
      "enter:RegExpLiteral:/👍🚀❇️/",
      "enter:Pattern:👍🚀❇️",
      "enter:Alternative:👍🚀❇️",
      "enter:Character:\ud83d",
      "leave:Character:\ud83d",
      "enter:Character:\udc4d",
      "leave:Character:\udc4d",
      "enter:Character:\ud83d",
      "leave:Character:\ud83d",
      "enter:Character:\ude80",
      "leave:Character:\ude80",
      "enter:Character:❇",
      "leave:Character:❇",
      "enter:Character:️",
      "leave:Character:️",
      "leave:Alternative:👍🚀❇️",
      "leave:Pattern:👍🚀❇️",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/👍🚀❇️/"
    ],
    "/^/": [
      "enter:RegExpLiteral:/^/",
      "enter:Pattern:^",
      "enter:Alternative:^",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "leave:Alternative:^",
      "leave:Pattern:^",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/^/"
    ],
    "/$/": [
      "enter:RegExpLiteral:/$/",
      "enter:Pattern:$",
      "enter:Alternative:$",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:$",
      "leave:Pattern:$",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/$/"
    ],
    "/./": [
      "enter:RegExpLiteral:/./",
      "enter:Pattern:.",
      "enter:Alternative:.",
      "enter:CharacterSet:.",
      "leave:CharacterSet:.",
      "leave:Alternative:.",
      "leave:Pattern:.",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/./"
    ],
    "/]/": [
      "enter:RegExpLiteral:/]/",
      "enter:Pattern:]",
      "enter:Alternative:]",
      "enter:Character:]",
      "leave:Character:]",
      "leave:Alternative:]",
      "leave:Pattern:]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/]/"
    ],
    "/{/": [
      "enter:RegExpLiteral:/{/",
      "enter:Pattern:{",
      "enter:Alternative:{",
      "enter:Character:{",
      "leave:Character:{",
      "leave:Alternative:{",
      "leave:Pattern:{",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/{/"
    ],
    "/}/": [
      "enter:RegExpLiteral:/}/",
      "enter:Pattern:}",
      "enter:Alternative:}",
      "enter:Character:}",
      "leave:Character:}",
      "leave:Alternative:}",
      "leave:Pattern:}",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/}/"
    ],
    "/|/": [
      "enter:RegExpLiteral:/|/",
      "enter:Pattern:|",
      "enter:Alternative:",
      "leave:Alternative:",
      "enter:Alternative:",
      "leave:Alternative:",
      "leave:Pattern:|",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/|/"
    ],
    "/${1,2/": [
      "enter:RegExpLiteral:/${1,2/",
      "enter:Pattern:${1,2",
      "enter:Alternative:${1,2",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "enter:Character:{",
      "leave:Character:{",
      "enter:Character:1",
      "leave:Character:1",
      "enter:Character:,",
      "leave:Character:,",
      "enter:Character:2",
      "leave:Character:2",
      "leave:Alternative:${1,2",
      "leave:Pattern:${1,2",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/${1,2/"
    ],
    "/\\1/": [
      "enter:RegExpLiteral:/\\1/",
      "enter:Pattern:\\1",
      "enter:Alternative:\\1",
      "enter:Character:\\1",
      "leave:Character:\\1",
      "leave:Alternative:\\1",
      "leave:Pattern:\\1",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\1/"
    ],
    "/(a)\\1/": [
      "enter:RegExpLiteral:/(a)\\1/",
      "enter:Pattern:(a)\\1",
      "enter:Alternative:(a)\\1",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:Backreference:\\1",
      "leave:Backreference:\\1",
      "leave:Alternative:(a)\\1",
      "leave:Pattern:(a)\\1",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/(a)\\1/"
    ],
    "/\\1(a)/": [
      "enter:RegExpLiteral:/\\1(a)/",
      "enter:Pattern:\\1(a)",
      "enter:Alternative:\\1(a)",
      "enter:Backreference:\\1",
      "leave:Backreference:\\1",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "leave:Alternative:\\1(a)",
      "leave:Pattern:\\1(a)",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\1(a)/"
    ],
    "/(?:a)\\1/": [
      "enter:RegExpLiteral:/(?:a)\\1/",
      "enter:Pattern:(?:a)\\1",
      "enter:Alternative:(?:a)\\1",
      "enter:Group:(?:a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:Group:(?:a)",
      "enter:Character:\\1",
      "leave:Character:\\1",
      "leave:Alternative:(?:a)\\1",
      "leave:Pattern:(?:a)\\1",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/(?:a)\\1/"
    ],
    "/(a)\\2/": [
      "enter:RegExpLiteral:/(a)\\2/",
      "enter:Pattern:(a)\\2",
      "enter:Alternative:(a)\\2",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:Character:\\2",
      "leave:Character:\\2",
      "leave:Alternative:(a)\\2",
      "leave:Pattern:(a)\\2",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/(a)\\2/"
    ],
    "/(?:a)\\2/": [
      "enter:RegExpLiteral:/(?:a)\\2/",
      "enter:Pattern:(?:a)\\2",
      "enter:Alternative:(?:a)\\2",
      "enter:Group:(?:a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:Group:(?:a)",
      "enter:Character:\\2",
      "leave:Character:\\2",
      "leave:Alternative:(?:a)\\2",
      "leave:Pattern:(?:a)\\2",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/(?:a)\\2/"
    ],
    "/(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\10/": [
      "enter:RegExpLiteral:/(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\10/",
      "enter:Pattern:(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\10",
      "enter:Alternative:(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\10",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:Backreference:\\10",
      "leave:Backreference:\\10",
      "leave:Alternative:(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\10",
      "leave:Pattern:(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\10",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\10/"
    ],
    "/(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\11/": [
      "enter:RegExpLiteral:/(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\11/",
      "enter:Pattern:(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\11",
      "enter:Alternative:(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\11",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:Character:\\11",
      "leave:Character:\\11",
      "leave:Alternative:(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\11",
      "leave:Pattern:(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\11",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\11/"
    ],
    "/(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\11/": [
      "enter:RegExpLiteral:/(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\11/",
      "enter:Pattern:(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\11",
      "enter:Alternative:(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\11",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:Backreference:\\11",
      "leave:Backreference:\\11",
      "leave:Alternative:(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\11",
      "leave:Pattern:(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\11",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\11/"
    ],
    "/(?:a)/": [
      "enter:RegExpLiteral:/(?:a)/",
      "enter:Pattern:(?:a)",
      "enter:Alternative:(?:a)",
      "enter:Group:(?:a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:Group:(?:a)",
      "leave:Alternative:(?:a)",
      "leave:Pattern:(?:a)",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/(?:a)/"
    ],
    "/\\d/": [
      "enter:RegExpLiteral:/\\d/",
      "enter:Pattern:\\d",
      "enter:Alternative:\\d",
      "enter:CharacterSet:\\d",
      "leave:CharacterSet:\\d",
      "leave:Alternative:\\d",
      "leave:Pattern:\\d",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\d/"
    ],
    "/\\D/": [
      "enter:RegExpLiteral:/\\D/",
      "enter:Pattern:\\D",
      "enter:Alternative:\\D",
      "enter:CharacterSet:\\D",
      "leave:CharacterSet:\\D",
      "leave:Alternative:\\D",
      "leave:Pattern:\\D",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\D/"
    ],
    "/\\s/": [
      "enter:RegExpLiteral:/\\s/",
      "enter:Pattern:\\s",
      "enter:Alternative:\\s",
      "enter:CharacterSet:\\s",
      "leave:CharacterSet:\\s",
      "leave:Alternative:\\s",
      "leave:Pattern:\\s",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\s/"
    ],
    "/\\S/": [
      "enter:RegExpLiteral:/\\S/",
      "enter:Pattern:\\S",
      "enter:Alternative:\\S",
      "enter:CharacterSet:\\S",
      "leave:CharacterSet:\\S",
      "leave:Alternative:\\S",
      "leave:Pattern:\\S",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\S/"
    ],
    "/\\w/": [
      "enter:RegExpLiteral:/\\w/",
      "enter:Pattern:\\w",
      "enter:Alternative:\\w",
      "enter:CharacterSet:\\w",
      "leave:CharacterSet:\\w",
      "leave:Alternative:\\w",
      "leave:Pattern:\\w",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\w/"
    ],
    "/\\W/": [
      "enter:RegExpLiteral:/\\W/",
      "enter:Pattern:\\W",
      "enter:Alternative:\\W",
      "enter:CharacterSet:\\W",
      "leave:CharacterSet:\\W",
      "leave:Alternative:\\W",
      "leave:Pattern:\\W",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\W/"
    ],
    "/\\f/": [
      "enter:RegExpLiteral:/\\f/",
      "enter:Pattern:\\f",
      "enter:Alternative:\\f",
      "enter:Character:\\f",
      "leave:Character:\\f",
      "leave:Alternative:\\f",
      "leave:Pattern:\\f",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\f/"
    ],
    "/\\n/": [
      "enter:RegExpLiteral:/\\n/",
      "enter:Pattern:\\n",
      "enter:Alternative:\\n",
      "enter:Character:\\n",
      "leave:Character:\\n",
      "leave:Alternative:\\n",
      "leave:Pattern:\\n",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\n/"
    ],
    "/\\r/": [
      "enter:RegExpLiteral:/\\r/",
      "enter:Pattern:\\r",
      "enter:Alternative:\\r",
      "enter:Character:\\r",
      "leave:Character:\\r",
      "leave:Alternative:\\r",
      "leave:Pattern:\\r",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\r/"
    ],
    "/\\t/": [
      "enter:RegExpLiteral:/\\t/",
      "enter:Pattern:\\t",
      "enter:Alternative:\\t",
      "enter:Character:\\t",
      "leave:Character:\\t",
      "leave:Alternative:\\t",
      "leave:Pattern:\\t",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\t/"
    ],
    "/\\v/": [
      "enter:RegExpLiteral:/\\v/",
      "enter:Pattern:\\v",
      "enter:Alternative:\\v",
      "enter:Character:\\v",
      "leave:Character:\\v",
      "leave:Alternative:\\v",
      "leave:Pattern:\\v",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\v/"
    ],
    "/\\cA/": [
      "enter:RegExpLiteral:/\\cA/",
      "enter:Pattern:\\cA",
      "enter:Alternative:\\cA",
      "enter:Character:\\cA",
      "leave:Character:\\cA",
      "leave:Alternative:\\cA",
      "leave:Pattern:\\cA",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\cA/"
    ],
    "/\\cz/": [
      "enter:RegExpLiteral:/\\cz/",
      "enter:Pattern:\\cz",
      "enter:Alternative:\\cz",
      "enter:Character:\\cz",
      "leave:Character:\\cz",
      "leave:Alternative:\\cz",
      "leave:Pattern:\\cz",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\cz/"
    ],
    "/\\c1/": [
      "enter:RegExpLiteral:/\\c1/",
      "enter:Pattern:\\c1",
      "enter:Alternative:\\c1",
      "enter:Character:\\",
      "leave:Character:\\",
      "enter:Character:c",
      "leave:Character:c",
      "enter:Character:1",
      "leave:Character:1",
      "leave:Alternative:\\c1",
      "leave:Pattern:\\c1",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\c1/"
    ],
    "/\\c/": [
      "enter:RegExpLiteral:/\\c/",
      "enter:Pattern:\\c",
      "enter:Alternative:\\c",
      "enter:Character:\\",
      "leave:Character:\\",
      "enter:Character:c",
      "leave:Character:c",
      "leave:Alternative:\\c",
      "leave:Pattern:\\c",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\c/"
    ],
    "/\\0/": [
      "enter:RegExpLiteral:/\\0/",
      "enter:Pattern:\\0",
      "enter:Alternative:\\0",
      "enter:Character:\\0",
      "leave:Character:\\0",
      "leave:Alternative:\\0",
      "leave:Pattern:\\0",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\0/"
    ],
    "/\\u/": [
      "enter:RegExpLiteral:/\\u/",
      "enter:Pattern:\\u",
      "enter:Alternative:\\u",
      "enter:Character:\\u",
      "leave:Character:\\u",
      "leave:Alternative:\\u",
      "leave:Pattern:\\u",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\u/"
    ],
    "/\\u1/": [
      "enter:RegExpLiteral:/\\u1/",
      "enter:Pattern:\\u1",
      "enter:Alternative:\\u1",
      "enter:Character:\\u",
      "leave:Character:\\u",
      "enter:Character:1",
      "leave:Character:1",
      "leave:Alternative:\\u1",
      "leave:Pattern:\\u1",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\u1/"
    ],
    "/\\u12/": [
      "enter:RegExpLiteral:/\\u12/",
      "enter:Pattern:\\u12",
      "enter:Alternative:\\u12",
      "enter:Character:\\u",
      "leave:Character:\\u",
      "enter:Character:1",
      "leave:Character:1",
      "enter:Character:2",
      "leave:Character:2",
      "leave:Alternative:\\u12",
      "leave:Pattern:\\u12",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\u12/"
    ],
    "/\\u123/": [
      "enter:RegExpLiteral:/\\u123/",
      "enter:Pattern:\\u123",
      "enter:Alternative:\\u123",
      "enter:Character:\\u",
      "leave:Character:\\u",
      "enter:Character:1",
      "leave:Character:1",
      "enter:Character:2",
      "leave:Character:2",
      "enter:Character:3",
      "leave:Character:3",
      "leave:Alternative:\\u123",
      "leave:Pattern:\\u123",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\u123/"
    ],
    "/\\u1234/": [
      "enter:RegExpLiteral:/\\u1234/",
      "enter:Pattern:\\u1234",
      "enter:Alternative:\\u1234",
      "enter:Character:\\u1234",
      "leave:Character:\\u1234",
      "leave:Alternative:\\u1234",
      "leave:Pattern:\\u1234",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\u1234/"
    ],
    "/\\u12345/": [
      "enter:RegExpLiteral:/\\u12345/",
      "enter:Pattern:\\u12345",
      "enter:Alternative:\\u12345",
      "enter:Character:\\u1234",
      "leave:Character:\\u1234",
      "enter:Character:5",
      "leave:Character:5",
      "leave:Alternative:\\u12345",
      "leave:Pattern:\\u12345",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\u12345/"
    ],
    "/\\u{/": [
      "enter:RegExpLiteral:/\\u{/",
      "enter:Pattern:\\u{",
      "enter:Alternative:\\u{",
      "enter:Character:\\u",
      "leave:Character:\\u",
      "enter:Character:{",
      "leave:Character:{",
      "leave:Alternative:\\u{",
      "leave:Pattern:\\u{",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\u{/"
    ],
    "/\\u{z/": [
      "enter:RegExpLiteral:/\\u{z/",
      "enter:Pattern:\\u{z",
      "enter:Alternative:\\u{z",
      "enter:Character:\\u",
      "leave:Character:\\u",
      "enter:Character:{",
      "leave:Character:{",
      "enter:Character:z",
      "leave:Character:z",
      "leave:Alternative:\\u{z",
      "leave:Pattern:\\u{z",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\u{z/"
    ],
    "/\\u{a}/": [
      "enter:RegExpLiteral:/\\u{a}/",
      "enter:Pattern:\\u{a}",
      "enter:Alternative:\\u{a}",
      "enter:Character:\\u",
      "leave:Character:\\u",
      "enter:Character:{",
      "leave:Character:{",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:}",
      "leave:Character:}",
      "leave:Alternative:\\u{a}",
      "leave:Pattern:\\u{a}",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\u{a}/"
    ],
    "/\\u{20/": [
      "enter:RegExpLiteral:/\\u{20/",
      "enter:Pattern:\\u{20",
      "enter:Alternative:\\u{20",
      "enter:Character:\\u",
      "leave:Character:\\u",
      "enter:Character:{",
      "leave:Character:{",
      "enter:Character:2",
      "leave:Character:2",
      "enter:Character:0",
      "leave:Character:0",
      "leave:Alternative:\\u{20",
      "leave:Pattern:\\u{20",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\u{20/"
    ],
    "/\\u{20}/": [
      "enter:RegExpLiteral:/\\u{20}/",
      "enter:Pattern:\\u{20}",
      "enter:Alternative:\\u{20}",
      "enter:Quantifier:\\u{20}",
      "enter:Character:\\u",
      "leave:Character:\\u",
      "leave:Quantifier:\\u{20}",
      "leave:Alternative:\\u{20}",
      "leave:Pattern:\\u{20}",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\u{20}/"
    ],
    "/\\u{10FFFF}/": [
      "enter:RegExpLiteral:/\\u{10FFFF}/",
      "enter:Pattern:\\u{10FFFF}",
      "enter:Alternative:\\u{10FFFF}",
      "enter:Character:\\u",
      "leave:Character:\\u",
      "enter:Character:{",
      "leave:Character:{",
      "enter:Character:1",
      "leave:Character:1",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:F",
      "leave:Character:F",
      "enter:Character:F",
      "leave:Character:F",
      "enter:Character:F",
      "leave:Character:F",
      "enter:Character:F",
      "leave:Character:F",
      "enter:Character:}",
      "leave:Character:}",
      "leave:Alternative:\\u{10FFFF}",
      "leave:Pattern:\\u{10FFFF}",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\u{10FFFF}/"
    ],
    "/\\u{110000}/": [
      "enter:RegExpLiteral:/\\u{110000}/",
      "enter:Pattern:\\u{110000}",
      "enter:Alternative:\\u{110000}",
      "enter:Quantifier:\\u{110000}",
      "enter:Character:\\u",
      "leave:Character:\\u",
      "leave:Quantifier:\\u{110000}",
      "leave:Alternative:\\u{110000}",
      "leave:Pattern:\\u{110000}",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\u{110000}/"
    ],
    "/\\u{00000001}/": [
      "enter:RegExpLiteral:/\\u{00000001}/",
      "enter:Pattern:\\u{00000001}",
      "enter:Alternative:\\u{00000001}",
      "enter:Quantifier:\\u{00000001}",
      "enter:Character:\\u",
      "leave:Character:\\u",
      "leave:Quantifier:\\u{00000001}",
      "leave:Alternative:\\u{00000001}",
      "leave:Pattern:\\u{00000001}",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\u{00000001}/"
    ],
    "/\\377/": [
      "enter:RegExpLiteral:/\\377/",
      "enter:Pattern:\\377",
      "enter:Alternative:\\377",
      "enter:Character:\\377",
      "leave:Character:\\377",
      "leave:Alternative:\\377",
      "leave:Pattern:\\377",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\377/"
    ],
    "/\\400/": [
      "enter:RegExpLiteral:/\\400/",
      "enter:Pattern:\\400",
      "enter:Alternative:\\400",
      "enter:Character:\\40",
      "leave:Character:\\40",
      "enter:Character:0",
      "leave:Character:0",
      "leave:Alternative:\\400",
      "leave:Pattern:\\400",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\400/"
    ],
    "/\\^/": [
      "enter:RegExpLiteral:/\\^/",
      "enter:Pattern:\\^",
      "enter:Alternative:\\^",
      "enter:Character:\\^",
      "leave:Character:\\^",
      "leave:Alternative:\\^",
      "leave:Pattern:\\^",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\^/"
    ],
    "/\\$/": [
      "enter:RegExpLiteral:/\\$/",
      "enter:Pattern:\\$",
      "enter:Alternative:\\$",
      "enter:Character:\\$",
      "leave:Character:\\$",
      "leave:Alternative:\\$",
      "leave:Pattern:\\$",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\$/"
    ],
    "/\\./": [
      "enter:RegExpLiteral:/\\./",
      "enter:Pattern:\\.",
      "enter:Alternative:\\.",
      "enter:Character:\\.",
      "leave:Character:\\.",
      "leave:Alternative:\\.",
      "leave:Pattern:\\.",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\./"
    ],
    "/\\+/": [
      "enter:RegExpLiteral:/\\+/",
      "enter:Pattern:\\+",
      "enter:Alternative:\\+",
      "enter:Character:\\+",
      "leave:Character:\\+",
      "leave:Alternative:\\+",
      "leave:Pattern:\\+",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\+/"
    ],
    "/\\?/": [
      "enter:RegExpLiteral:/\\?/",
      "enter:Pattern:\\?",
      "enter:Alternative:\\?",
      "enter:Character:\\?",
      "leave:Character:\\?",
      "leave:Alternative:\\?",
      "leave:Pattern:\\?",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\?/"
    ],
    "/\\(/": [
      "enter:RegExpLiteral:/\\(/",
      "enter:Pattern:\\(",
      "enter:Alternative:\\(",
      "enter:Character:\\(",
      "leave:Character:\\(",
      "leave:Alternative:\\(",
      "leave:Pattern:\\(",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\(/"
    ],
    "/\\)/": [
      "enter:RegExpLiteral:/\\)/",
      "enter:Pattern:\\)",
      "enter:Alternative:\\)",
      "enter:Character:\\)",
      "leave:Character:\\)",
      "leave:Alternative:\\)",
      "leave:Pattern:\\)",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\)/"
    ],
    "/\\[/": [
      "enter:RegExpLiteral:/\\[/",
      "enter:Pattern:\\[",
      "enter:Alternative:\\[",
      "enter:Character:\\[",
      "leave:Character:\\[",
      "leave:Alternative:\\[",
      "leave:Pattern:\\[",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\[/"
    ],
    "/\\]/": [
      "enter:RegExpLiteral:/\\]/",
      "enter:Pattern:\\]",
      "enter:Alternative:\\]",
      "enter:Character:\\]",
      "leave:Character:\\]",
      "leave:Alternative:\\]",
      "leave:Pattern:\\]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\]/"
    ],
    "/\\{/": [
      "enter:RegExpLiteral:/\\{/",
      "enter:Pattern:\\{",
      "enter:Alternative:\\{",
      "enter:Character:\\{",
      "leave:Character:\\{",
      "leave:Alternative:\\{",
      "leave:Pattern:\\{",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\{/"
    ],
    "/\\}/": [
      "enter:RegExpLiteral:/\\}/",
      "enter:Pattern:\\}",
      "enter:Alternative:\\}",
      "enter:Character:\\}",
      "leave:Character:\\}",
      "leave:Alternative:\\}",
      "leave:Pattern:\\}",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\}/"
    ],
    "/\\|/": [
      "enter:RegExpLiteral:/\\|/",
      "enter:Pattern:\\|",
      "enter:Alternative:\\|",
      "enter:Character:\\|",
      "leave:Character:\\|",
      "leave:Alternative:\\|",
      "leave:Pattern:\\|",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\|/"
    ],
    "/\\//": [
      "enter:RegExpLiteral:/\\//",
      "enter:Pattern:\\/",
      "enter:Alternative:\\/",
      "enter:Character:\\/",
      "leave:Character:\\/",
      "leave:Alternative:\\/",
      "leave:Pattern:\\/",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\//"
    ],
    "/\\a/": [
      "enter:RegExpLiteral:/\\a/",
      "enter:Pattern:\\a",
      "enter:Alternative:\\a",
      "enter:Character:\\a",
      "leave:Character:\\a",
      "leave:Alternative:\\a",
      "leave:Pattern:\\a",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\a/"
    ],
    "/[]/": [
      "enter:RegExpLiteral:/[]/",
      "enter:Pattern:[]",
      "enter:Alternative:[]",
      "enter:CharacterClass:[]",
      "leave:CharacterClass:[]",
      "leave:Alternative:[]",
      "leave:Pattern:[]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[]/"
    ],
    "/[^-a-b-]/": [
      "enter:RegExpLiteral:/[^-a-b-]/",
      "enter:Pattern:[^-a-b-]",
      "enter:Alternative:[^-a-b-]",
      "enter:CharacterClass:[^-a-b-]",
      "enter:Character:-",
      "leave:Character:-",
      "enter:CharacterClassRange:a-b",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:b",
      "leave:Character:b",
      "leave:CharacterClassRange:a-b",
      "enter:Character:-",
      "leave:Character:-",
      "leave:CharacterClass:[^-a-b-]",
      "leave:Alternative:[^-a-b-]",
      "leave:Pattern:[^-a-b-]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[^-a-b-]/"
    ],
    "/[-]/": [
      "enter:RegExpLiteral:/[-]/",
      "enter:Pattern:[-]",
      "enter:Alternative:[-]",
      "enter:CharacterClass:[-]",
      "enter:Character:-",
      "leave:Character:-",
      "leave:CharacterClass:[-]",
      "leave:Alternative:[-]",
      "leave:Pattern:[-]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[-]/"
    ],
    "/[a]/": [
      "enter:RegExpLiteral:/[a]/",
      "enter:Pattern:[a]",
      "enter:Alternative:[a]",
      "enter:CharacterClass:[a]",
      "enter:Character:a",
      "leave:Character:a",
      "leave:CharacterClass:[a]",
      "leave:Alternative:[a]",
      "leave:Pattern:[a]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[a]/"
    ],
    "/[--]/": [
      "enter:RegExpLiteral:/[--]/",
      "enter:Pattern:[--]",
      "enter:Alternative:[--]",
      "enter:CharacterClass:[--]",
      "enter:Character:-",
      "leave:Character:-",
      "enter:Character:-",
      "leave:Character:-",
      "leave:CharacterClass:[--]",
      "leave:Alternative:[--]",
      "leave:Pattern:[--]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[--]/"
    ],
    "/[-a]/": [
      "enter:RegExpLiteral:/[-a]/",
      "enter:Pattern:[-a]",
      "enter:Alternative:[-a]",
      "enter:CharacterClass:[-a]",
      "enter:Character:-",
      "leave:Character:-",
      "enter:Character:a",
      "leave:Character:a",
      "leave:CharacterClass:[-a]",
      "leave:Alternative:[-a]",
      "leave:Pattern:[-a]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[-a]/"
    ],
    "/[-a-]/": [
      "enter:RegExpLiteral:/[-a-]/",
      "enter:Pattern:[-a-]",
      "enter:Alternative:[-a-]",
      "enter:CharacterClass:[-a-]",
      "enter:Character:-",
      "leave:Character:-",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:-",
      "leave:Character:-",
      "leave:CharacterClass:[-a-]",
      "leave:Alternative:[-a-]",
      "leave:Pattern:[-a-]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[-a-]/"
    ],
    "/[a-]/": [
      "enter:RegExpLiteral:/[a-]/",
      "enter:Pattern:[a-]",
      "enter:Alternative:[a-]",
      "enter:CharacterClass:[a-]",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:-",
      "leave:Character:-",
      "leave:CharacterClass:[a-]",
      "leave:Alternative:[a-]",
      "leave:Pattern:[a-]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[a-]/"
    ],
    "/[a-b]/": [
      "enter:RegExpLiteral:/[a-b]/",
      "enter:Pattern:[a-b]",
      "enter:Alternative:[a-b]",
      "enter:CharacterClass:[a-b]",
      "enter:CharacterClassRange:a-b",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:b",
      "leave:Character:b",
      "leave:CharacterClassRange:a-b",
      "leave:CharacterClass:[a-b]",
      "leave:Alternative:[a-b]",
      "leave:Pattern:[a-b]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[a-b]/"
    ],
    "/[-a-b-]/": [
      "enter:RegExpLiteral:/[-a-b-]/",
      "enter:Pattern:[-a-b-]",
      "enter:Alternative:[-a-b-]",
      "enter:CharacterClass:[-a-b-]",
      "enter:Character:-",
      "leave:Character:-",
      "enter:CharacterClassRange:a-b",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:b",
      "leave:Character:b",
      "leave:CharacterClassRange:a-b",
      "enter:Character:-",
      "leave:Character:-",
      "leave:CharacterClass:[-a-b-]",
      "leave:Alternative:[-a-b-]",
      "leave:Pattern:[-a-b-]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[-a-b-]/"
    ],
    "/[---]/": [
      "enter:RegExpLiteral:/[---]/",
      "enter:Pattern:[---]",
      "enter:Alternative:[---]",
      "enter:CharacterClass:[---]",
      "enter:CharacterClassRange:---",
      "enter:Character:-",
      "leave:Character:-",
      "enter:Character:-",
      "leave:Character:-",
      "leave:CharacterClassRange:---",
      "leave:CharacterClass:[---]",
      "leave:Alternative:[---]",
      "leave:Pattern:[---]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[---]/"
    ],
    "/[a-b--/]/": [
      "enter:RegExpLiteral:/[a-b--/]/",
      "enter:Pattern:[a-b--/]",
      "enter:Alternative:[a-b--/]",
      "enter:CharacterClass:[a-b--/]",
      "enter:CharacterClassRange:a-b",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:b",
      "leave:Character:b",
      "leave:CharacterClassRange:a-b",
      "enter:CharacterClassRange:--/",
      "enter:Character:-",
      "leave:Character:-",
      "enter:Character:/",
      "leave:Character:/",
      "leave:CharacterClassRange:--/",
      "leave:CharacterClass:[a-b--/]",
      "leave:Alternative:[a-b--/]",
      "leave:Pattern:[a-b--/]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[a-b--/]/"
    ],
    "/[\\b-\\n]/": [
      "enter:RegExpLiteral:/[\\b-\\n]/",
      "enter:Pattern:[\\b-\\n]",
      "enter:Alternative:[\\b-\\n]",
      "enter:CharacterClass:[\\b-\\n]",
      "enter:CharacterClassRange:\\b-\\n",
      "enter:Character:\\b",
      "leave:Character:\\b",
      "enter:Character:\\n",
      "leave:Character:\\n",
      "leave:CharacterClassRange:\\b-\\n",
      "leave:CharacterClass:[\\b-\\n]",
      "leave:Alternative:[\\b-\\n]",
      "leave:Pattern:[\\b-\\n]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\b-\\n]/"
    ],
    "/[b\\-a]/": [
      "enter:RegExpLiteral:/[b\\-a]/",
      "enter:Pattern:[b\\-a]",
      "enter:Alternative:[b\\-a]",
      "enter:CharacterClass:[b\\-a]",
      "enter:Character:b",
      "leave:Character:b",
      "enter:Character:\\-",
      "leave:Character:\\-",
      "enter:Character:a",
      "leave:Character:a",
      "leave:CharacterClass:[b\\-a]",
      "leave:Alternative:[b\\-a]",
      "leave:Pattern:[b\\-a]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[b\\-a]/"
    ],
    "/[\\d]/": [
      "enter:RegExpLiteral:/[\\d]/",
      "enter:Pattern:[\\d]",
      "enter:Alternative:[\\d]",
      "enter:CharacterClass:[\\d]",
      "enter:CharacterSet:\\d",
      "leave:CharacterSet:\\d",
      "leave:CharacterClass:[\\d]",
      "leave:Alternative:[\\d]",
      "leave:Pattern:[\\d]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\d]/"
    ],
    "/[\\D]/": [
      "enter:RegExpLiteral:/[\\D]/",
      "enter:Pattern:[\\D]",
      "enter:Alternative:[\\D]",
      "enter:CharacterClass:[\\D]",
      "enter:CharacterSet:\\D",
      "leave:CharacterSet:\\D",
      "leave:CharacterClass:[\\D]",
      "leave:Alternative:[\\D]",
      "leave:Pattern:[\\D]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\D]/"
    ],
    "/[\\s]/": [
      "enter:RegExpLiteral:/[\\s]/",
      "enter:Pattern:[\\s]",
      "enter:Alternative:[\\s]",
      "enter:CharacterClass:[\\s]",
      "enter:CharacterSet:\\s",
      "leave:CharacterSet:\\s",
      "leave:CharacterClass:[\\s]",
      "leave:Alternative:[\\s]",
      "leave:Pattern:[\\s]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\s]/"
    ],
    "/[\\S]/": [
      "enter:RegExpLiteral:/[\\S]/",
      "enter:Pattern:[\\S]",
      "enter:Alternative:[\\S]",
      "enter:CharacterClass:[\\S]",
      "enter:CharacterSet:\\S",
      "leave:CharacterSet:\\S",
      "leave:CharacterClass:[\\S]",
      "leave:Alternative:[\\S]",
      "leave:Pattern:[\\S]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\S]/"
    ],
    "/[\\w]/": [
      "enter:RegExpLiteral:/[\\w]/",
      "enter:Pattern:[\\w]",
      "enter:Alternative:[\\w]",
      "enter:CharacterClass:[\\w]",
      "enter:CharacterSet:\\w",
      "leave:CharacterSet:\\w",
      "leave:CharacterClass:[\\w]",
      "leave:Alternative:[\\w]",
      "leave:Pattern:[\\w]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\w]/"
    ],
    "/[\\W]/": [
      "enter:RegExpLiteral:/[\\W]/",
      "enter:Pattern:[\\W]",
      "enter:Alternative:[\\W]",
      "enter:CharacterClass:[\\W]",
      "enter:CharacterSet:\\W",
      "leave:CharacterSet:\\W",
      "leave:CharacterClass:[\\W]",
      "leave:Alternative:[\\W]",
      "leave:Pattern:[\\W]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\W]/"
    ],
    "/[\\f]/": [
      "enter:RegExpLiteral:/[\\f]/",
      "enter:Pattern:[\\f]",
      "enter:Alternative:[\\f]",
      "enter:CharacterClass:[\\f]",
      "enter:Character:\\f",
      "leave:Character:\\f",
      "leave:CharacterClass:[\\f]",
      "leave:Alternative:[\\f]",
      "leave:Pattern:[\\f]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\f]/"
    ],
    "/[\\n]/": [
      "enter:RegExpLiteral:/[\\n]/",
      "enter:Pattern:[\\n]",
      "enter:Alternative:[\\n]",
      "enter:CharacterClass:[\\n]",
      "enter:Character:\\n",
      "leave:Character:\\n",
      "leave:CharacterClass:[\\n]",
      "leave:Alternative:[\\n]",
      "leave:Pattern:[\\n]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\n]/"
    ],
    "/[\\r]/": [
      "enter:RegExpLiteral:/[\\r]/",
      "enter:Pattern:[\\r]",
      "enter:Alternative:[\\r]",
      "enter:CharacterClass:[\\r]",
      "enter:Character:\\r",
      "leave:Character:\\r",
      "leave:CharacterClass:[\\r]",
      "leave:Alternative:[\\r]",
      "leave:Pattern:[\\r]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\r]/"
    ],
    "/[\\t]/": [
      "enter:RegExpLiteral:/[\\t]/",
      "enter:Pattern:[\\t]",
      "enter:Alternative:[\\t]",
      "enter:CharacterClass:[\\t]",
      "enter:Character:\\t",
      "leave:Character:\\t",
      "leave:CharacterClass:[\\t]",
      "leave:Alternative:[\\t]",
      "leave:Pattern:[\\t]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\t]/"
    ],
    "/[\\v]/": [
      "enter:RegExpLiteral:/[\\v]/",
      "enter:Pattern:[\\v]",
      "enter:Alternative:[\\v]",
      "enter:CharacterClass:[\\v]",
      "enter:Character:\\v",
      "leave:Character:\\v",
      "leave:CharacterClass:[\\v]",
      "leave:Alternative:[\\v]",
      "leave:Pattern:[\\v]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\v]/"
    ],
    "/[\\cA]/": [
      "enter:RegExpLiteral:/[\\cA]/",
      "enter:Pattern:[\\cA]",
      "enter:Alternative:[\\cA]",
      "enter:CharacterClass:[\\cA]",
      "enter:Character:\\cA",
      "leave:Character:\\cA",
      "leave:CharacterClass:[\\cA]",
      "leave:Alternative:[\\cA]",
      "leave:Pattern:[\\cA]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\cA]/"
    ],
    "/[\\cz]/": [
      "enter:RegExpLiteral:/[\\cz]/",
      "enter:Pattern:[\\cz]",
      "enter:Alternative:[\\cz]",
      "enter:CharacterClass:[\\cz]",
      "enter:Character:\\cz",
      "leave:Character:\\cz",
      "leave:CharacterClass:[\\cz]",
      "leave:Alternative:[\\cz]",
      "leave:Pattern:[\\cz]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\cz]/"
    ],
    "/[\\c1]/": [
      "enter:RegExpLiteral:/[\\c1]/",
      "enter:Pattern:[\\c1]",
      "enter:Alternative:[\\c1]",
      "enter:CharacterClass:[\\c1]",
      "enter:Character:\\c1",
      "leave:Character:\\c1",
      "leave:CharacterClass:[\\c1]",
      "leave:Alternative:[\\c1]",
      "leave:Pattern:[\\c1]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\c1]/"
    ],
    "/[\\c]/": [
      "enter:RegExpLiteral:/[\\c]/",
      "enter:Pattern:[\\c]",
      "enter:Alternative:[\\c]",
      "enter:CharacterClass:[\\c]",
      "enter:Character:\\",
      "leave:Character:\\",
      "enter:Character:c",
      "leave:Character:c",
      "leave:CharacterClass:[\\c]",
      "leave:Alternative:[\\c]",
      "leave:Pattern:[\\c]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\c]/"
    ],
    "/[\\0]/": [
      "enter:RegExpLiteral:/[\\0]/",
      "enter:Pattern:[\\0]",
      "enter:Alternative:[\\0]",
      "enter:CharacterClass:[\\0]",
      "enter:Character:\\0",
      "leave:Character:\\0",
      "leave:CharacterClass:[\\0]",
      "leave:Alternative:[\\0]",
      "leave:Pattern:[\\0]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\0]/"
    ],
    "/[\\x]/": [
      "enter:RegExpLiteral:/[\\x]/",
      "enter:Pattern:[\\x]",
      "enter:Alternative:[\\x]",
      "enter:CharacterClass:[\\x]",
      "enter:Character:\\x",
      "leave:Character:\\x",
      "leave:CharacterClass:[\\x]",
      "leave:Alternative:[\\x]",
      "leave:Pattern:[\\x]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\x]/"
    ],
    "/[\\xz]/": [
      "enter:RegExpLiteral:/[\\xz]/",
      "enter:Pattern:[\\xz]",
      "enter:Alternative:[\\xz]",
      "enter:CharacterClass:[\\xz]",
      "enter:Character:\\x",
      "leave:Character:\\x",
      "enter:Character:z",
      "leave:Character:z",
      "leave:CharacterClass:[\\xz]",
      "leave:Alternative:[\\xz]",
      "leave:Pattern:[\\xz]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\xz]/"
    ],
    "/[\\x1]/": [
      "enter:RegExpLiteral:/[\\x1]/",
      "enter:Pattern:[\\x1]",
      "enter:Alternative:[\\x1]",
      "enter:CharacterClass:[\\x1]",
      "enter:Character:\\x",
      "leave:Character:\\x",
      "enter:Character:1",
      "leave:Character:1",
      "leave:CharacterClass:[\\x1]",
      "leave:Alternative:[\\x1]",
      "leave:Pattern:[\\x1]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\x1]/"
    ],
    "/[\\x12]/": [
      "enter:RegExpLiteral:/[\\x12]/",
      "enter:Pattern:[\\x12]",
      "enter:Alternative:[\\x12]",
      "enter:CharacterClass:[\\x12]",
      "enter:Character:\\x12",
      "leave:Character:\\x12",
      "leave:CharacterClass:[\\x12]",
      "leave:Alternative:[\\x12]",
      "leave:Pattern:[\\x12]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\x12]/"
    ],
    "/[\\x123]/": [
      "enter:RegExpLiteral:/[\\x123]/",
      "enter:Pattern:[\\x123]",
      "enter:Alternative:[\\x123]",
      "enter:CharacterClass:[\\x123]",
      "enter:Character:\\x12",
      "leave:Character:\\x12",
      "enter:Character:3",
      "leave:Character:3",
      "leave:CharacterClass:[\\x123]",
      "leave:Alternative:[\\x123]",
      "leave:Pattern:[\\x123]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\x123]/"
    ],
    "/[\\u]/": [
      "enter:RegExpLiteral:/[\\u]/",
      "enter:Pattern:[\\u]",
      "enter:Alternative:[\\u]",
      "enter:CharacterClass:[\\u]",
      "enter:Character:\\u",
      "leave:Character:\\u",
      "leave:CharacterClass:[\\u]",
      "leave:Alternative:[\\u]",
      "leave:Pattern:[\\u]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\u]/"
    ],
    "/[\\u1]/": [
      "enter:RegExpLiteral:/[\\u1]/",
      "enter:Pattern:[\\u1]",
      "enter:Alternative:[\\u1]",
      "enter:CharacterClass:[\\u1]",
      "enter:Character:\\u",
      "leave:Character:\\u",
      "enter:Character:1",
      "leave:Character:1",
      "leave:CharacterClass:[\\u1]",
      "leave:Alternative:[\\u1]",
      "leave:Pattern:[\\u1]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\u1]/"
    ],
    "/[\\u12]/": [
      "enter:RegExpLiteral:/[\\u12]/",
      "enter:Pattern:[\\u12]",
      "enter:Alternative:[\\u12]",
      "enter:CharacterClass:[\\u12]",
      "enter:Character:\\u",
      "leave:Character:\\u",
      "enter:Character:1",
      "leave:Character:1",
      "enter:Character:2",
      "leave:Character:2",
      "leave:CharacterClass:[\\u12]",
      "leave:Alternative:[\\u12]",
      "leave:Pattern:[\\u12]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\u12]/"
    ],
    "/[\\u123]/": [
      "enter:RegExpLiteral:/[\\u123]/",
      "enter:Pattern:[\\u123]",
      "enter:Alternative:[\\u123]",
      "enter:CharacterClass:[\\u123]",
      "enter:Character:\\u",
      "leave:Character:\\u",
      "enter:Character:1",
      "leave:Character:1",
      "enter:Character:2",
      "leave:Character:2",
      "enter:Character:3",
      "leave:Character:3",
      "leave:CharacterClass:[\\u123]",
      "leave:Alternative:[\\u123]",
      "leave:Pattern:[\\u123]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\u123]/"
    ],
    "/[\\u1234]/": [
      "enter:RegExpLiteral:/[\\u1234]/",
      "enter:Pattern:[\\u1234]",
      "enter:Alternative:[\\u1234]",
      "enter:CharacterClass:[\\u1234]",
      "enter:Character:\\u1234",
      "leave:Character:\\u1234",
      "leave:CharacterClass:[\\u1234]",
      "leave:Alternative:[\\u1234]",
      "leave:Pattern:[\\u1234]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\u1234]/"
    ],
    "/[\\u12345]/": [
      "enter:RegExpLiteral:/[\\u12345]/",
      "enter:Pattern:[\\u12345]",
      "enter:Alternative:[\\u12345]",
      "enter:CharacterClass:[\\u12345]",
      "enter:Character:\\u1234",
      "leave:Character:\\u1234",
      "enter:Character:5",
      "leave:Character:5",
      "leave:CharacterClass:[\\u12345]",
      "leave:Alternative:[\\u12345]",
      "leave:Pattern:[\\u12345]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\u12345]/"
    ],
    "/[\\u{]/": [
      "enter:RegExpLiteral:/[\\u{]/",
      "enter:Pattern:[\\u{]",
      "enter:Alternative:[\\u{]",
      "enter:CharacterClass:[\\u{]",
      "enter:Character:\\u",
      "leave:Character:\\u",
      "enter:Character:{",
      "leave:Character:{",
      "leave:CharacterClass:[\\u{]",
      "leave:Alternative:[\\u{]",
      "leave:Pattern:[\\u{]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\u{]/"
    ],
    "/[\\u{z]/": [
      "enter:RegExpLiteral:/[\\u{z]/",
      "enter:Pattern:[\\u{z]",
      "enter:Alternative:[\\u{z]",
      "enter:CharacterClass:[\\u{z]",
      "enter:Character:\\u",
      "leave:Character:\\u",
      "enter:Character:{",
      "leave:Character:{",
      "enter:Character:z",
      "leave:Character:z",
      "leave:CharacterClass:[\\u{z]",
      "leave:Alternative:[\\u{z]",
      "leave:Pattern:[\\u{z]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\u{z]/"
    ],
    "/[\\u{a}]/": [
      "enter:RegExpLiteral:/[\\u{a}]/",
      "enter:Pattern:[\\u{a}]",
      "enter:Alternative:[\\u{a}]",
      "enter:CharacterClass:[\\u{a}]",
      "enter:Character:\\u",
      "leave:Character:\\u",
      "enter:Character:{",
      "leave:Character:{",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:}",
      "leave:Character:}",
      "leave:CharacterClass:[\\u{a}]",
      "leave:Alternative:[\\u{a}]",
      "leave:Pattern:[\\u{a}]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\u{a}]/"
    ],
    "/[\\u{20]/": [
      "enter:RegExpLiteral:/[\\u{20]/",
      "enter:Pattern:[\\u{20]",
      "enter:Alternative:[\\u{20]",
      "enter:CharacterClass:[\\u{20]",
      "enter:Character:\\u",
      "leave:Character:\\u",
      "enter:Character:{",
      "leave:Character:{",
      "enter:Character:2",
      "leave:Character:2",
      "enter:Character:0",
      "leave:Character:0",
      "leave:CharacterClass:[\\u{20]",
      "leave:Alternative:[\\u{20]",
      "leave:Pattern:[\\u{20]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\u{20]/"
    ],
    "/[\\u{20}]/": [
      "enter:RegExpLiteral:/[\\u{20}]/",
      "enter:Pattern:[\\u{20}]",
      "enter:Alternative:[\\u{20}]",
      "enter:CharacterClass:[\\u{20}]",
      "enter:Character:\\u",
      "leave:Character:\\u",
      "enter:Character:{",
      "leave:Character:{",
      "enter:Character:2",
      "leave:Character:2",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:}",
      "leave:Character:}",
      "leave:CharacterClass:[\\u{20}]",
      "leave:Alternative:[\\u{20}]",
      "leave:Pattern:[\\u{20}]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\u{20}]/"
    ],
    "/[\\u{10FFFF}]/": [
      "enter:RegExpLiteral:/[\\u{10FFFF}]/",
      "enter:Pattern:[\\u{10FFFF}]",
      "enter:Alternative:[\\u{10FFFF}]",
      "enter:CharacterClass:[\\u{10FFFF}]",
      "enter:Character:\\u",
      "leave:Character:\\u",
      "enter:Character:{",
      "leave:Character:{",
      "enter:Character:1",
      "leave:Character:1",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:F",
      "leave:Character:F",
      "enter:Character:F",
      "leave:Character:F",
      "enter:Character:F",
      "leave:Character:F",
      "enter:Character:F",
      "leave:Character:F",
      "enter:Character:}",
      "leave:Character:}",
      "leave:CharacterClass:[\\u{10FFFF}]",
      "leave:Alternative:[\\u{10FFFF}]",
      "leave:Pattern:[\\u{10FFFF}]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\u{10FFFF}]/"
    ],
    "/[\\u{110000}]/": [
      "enter:RegExpLiteral:/[\\u{110000}]/",
      "enter:Pattern:[\\u{110000}]",
      "enter:Alternative:[\\u{110000}]",
      "enter:CharacterClass:[\\u{110000}]",
      "enter:Character:\\u",
      "leave:Character:\\u",
      "enter:Character:{",
      "leave:Character:{",
      "enter:Character:1",
      "leave:Character:1",
      "enter:Character:1",
      "leave:Character:1",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:}",
      "leave:Character:}",
      "leave:CharacterClass:[\\u{110000}]",
      "leave:Alternative:[\\u{110000}]",
      "leave:Pattern:[\\u{110000}]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\u{110000}]/"
    ],
    "/[\\u{00000001}]/": [
      "enter:RegExpLiteral:/[\\u{00000001}]/",
      "enter:Pattern:[\\u{00000001}]",
      "enter:Alternative:[\\u{00000001}]",
      "enter:CharacterClass:[\\u{00000001}]",
      "enter:Character:\\u",
      "leave:Character:\\u",
      "enter:Character:{",
      "leave:Character:{",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:1",
      "leave:Character:1",
      "enter:Character:}",
      "leave:Character:}",
      "leave:CharacterClass:[\\u{00000001}]",
      "leave:Alternative:[\\u{00000001}]",
      "leave:Pattern:[\\u{00000001}]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\u{00000001}]/"
    ],
    "/[\\77]/": [
      "enter:RegExpLiteral:/[\\77]/",
      "enter:Pattern:[\\77]",
      "enter:Alternative:[\\77]",
      "enter:CharacterClass:[\\77]",
      "enter:Character:\\77",
      "leave:Character:\\77",
      "leave:CharacterClass:[\\77]",
      "leave:Alternative:[\\77]",
      "leave:Pattern:[\\77]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\77]/"
    ],
    "/[\\377]/": [
      "enter:RegExpLiteral:/[\\377]/",
      "enter:Pattern:[\\377]",
      "enter:Alternative:[\\377]",
      "enter:CharacterClass:[\\377]",
      "enter:Character:\\377",
      "leave:Character:\\377",
      "leave:CharacterClass:[\\377]",
      "leave:Alternative:[\\377]",
      "leave:Pattern:[\\377]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\377]/"
    ],
    "/[\\400]/": [
      "enter:RegExpLiteral:/[\\400]/",
      "enter:Pattern:[\\400]",
      "enter:Alternative:[\\400]",
      "enter:CharacterClass:[\\400]",
      "enter:Character:\\40",
      "leave:Character:\\40",
      "enter:Character:0",
      "leave:Character:0",
      "leave:CharacterClass:[\\400]",
      "leave:Alternative:[\\400]",
      "leave:Pattern:[\\400]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\400]/"
    ],
    "/[\\^]/": [
      "enter:RegExpLiteral:/[\\^]/",
      "enter:Pattern:[\\^]",
      "enter:Alternative:[\\^]",
      "enter:CharacterClass:[\\^]",
      "enter:Character:\\^",
      "leave:Character:\\^",
      "leave:CharacterClass:[\\^]",
      "leave:Alternative:[\\^]",
      "leave:Pattern:[\\^]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\^]/"
    ],
    "/[\\$]/": [
      "enter:RegExpLiteral:/[\\$]/",
      "enter:Pattern:[\\$]",
      "enter:Alternative:[\\$]",
      "enter:CharacterClass:[\\$]",
      "enter:Character:\\$",
      "leave:Character:\\$",
      "leave:CharacterClass:[\\$]",
      "leave:Alternative:[\\$]",
      "leave:Pattern:[\\$]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\$]/"
    ],
    "/[\\.]/": [
      "enter:RegExpLiteral:/[\\.]/",
      "enter:Pattern:[\\.]",
      "enter:Alternative:[\\.]",
      "enter:CharacterClass:[\\.]",
      "enter:Character:\\.",
      "leave:Character:\\.",
      "leave:CharacterClass:[\\.]",
      "leave:Alternative:[\\.]",
      "leave:Pattern:[\\.]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\.]/"
    ],
    "/[\\+]/": [
      "enter:RegExpLiteral:/[\\+]/",
      "enter:Pattern:[\\+]",
      "enter:Alternative:[\\+]",
      "enter:CharacterClass:[\\+]",
      "enter:Character:\\+",
      "leave:Character:\\+",
      "leave:CharacterClass:[\\+]",
      "leave:Alternative:[\\+]",
      "leave:Pattern:[\\+]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\+]/"
    ],
    "/[\\?]/": [
      "enter:RegExpLiteral:/[\\?]/",
      "enter:Pattern:[\\?]",
      "enter:Alternative:[\\?]",
      "enter:CharacterClass:[\\?]",
      "enter:Character:\\?",
      "leave:Character:\\?",
      "leave:CharacterClass:[\\?]",
      "leave:Alternative:[\\?]",
      "leave:Pattern:[\\?]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\?]/"
    ],
    "/[\\(]/": [
      "enter:RegExpLiteral:/[\\(]/",
      "enter:Pattern:[\\(]",
      "enter:Alternative:[\\(]",
      "enter:CharacterClass:[\\(]",
      "enter:Character:\\(",
      "leave:Character:\\(",
      "leave:CharacterClass:[\\(]",
      "leave:Alternative:[\\(]",
      "leave:Pattern:[\\(]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\(]/"
    ],
    "/[\\)]/": [
      "enter:RegExpLiteral:/[\\)]/",
      "enter:Pattern:[\\)]",
      "enter:Alternative:[\\)]",
      "enter:CharacterClass:[\\)]",
      "enter:Character:\\)",
      "leave:Character:\\)",
      "leave:CharacterClass:[\\)]",
      "leave:Alternative:[\\)]",
      "leave:Pattern:[\\)]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\)]/"
    ],
    "/[\\[]/": [
      "enter:RegExpLiteral:/[\\[]/",
      "enter:Pattern:[\\[]",
      "enter:Alternative:[\\[]",
      "enter:CharacterClass:[\\[]",
      "enter:Character:\\[",
      "leave:Character:\\[",
      "leave:CharacterClass:[\\[]",
      "leave:Alternative:[\\[]",
      "leave:Pattern:[\\[]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\[]/"
    ],
    "/[\\]]/": [
      "enter:RegExpLiteral:/[\\]]/",
      "enter:Pattern:[\\]]",
      "enter:Alternative:[\\]]",
      "enter:CharacterClass:[\\]]",
      "enter:Character:\\]",
      "leave:Character:\\]",
      "leave:CharacterClass:[\\]]",
      "leave:Alternative:[\\]]",
      "leave:Pattern:[\\]]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\]]/"
    ],
    "/[\\{]/": [
      "enter:RegExpLiteral:/[\\{]/",
      "enter:Pattern:[\\{]",
      "enter:Alternative:[\\{]",
      "enter:CharacterClass:[\\{]",
      "enter:Character:\\{",
      "leave:Character:\\{",
      "leave:CharacterClass:[\\{]",
      "leave:Alternative:[\\{]",
      "leave:Pattern:[\\{]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\{]/"
    ],
    "/[\\}]/": [
      "enter:RegExpLiteral:/[\\}]/",
      "enter:Pattern:[\\}]",
      "enter:Alternative:[\\}]",
      "enter:CharacterClass:[\\}]",
      "enter:Character:\\}",
      "leave:Character:\\}",
      "leave:CharacterClass:[\\}]",
      "leave:Alternative:[\\}]",
      "leave:Pattern:[\\}]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\}]/"
    ],
    "/[\\|]/": [
      "enter:RegExpLiteral:/[\\|]/",
      "enter:Pattern:[\\|]",
      "enter:Alternative:[\\|]",
      "enter:CharacterClass:[\\|]",
      "enter:Character:\\|",
      "leave:Character:\\|",
      "leave:CharacterClass:[\\|]",
      "leave:Alternative:[\\|]",
      "leave:Pattern:[\\|]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\|]/"
    ],
    "/[\\/]/": [
      "enter:RegExpLiteral:/[\\/]/",
      "enter:Pattern:[\\/]",
      "enter:Alternative:[\\/]",
      "enter:CharacterClass:[\\/]",
      "enter:Character:\\/",
      "leave:Character:\\/",
      "leave:CharacterClass:[\\/]",
      "leave:Alternative:[\\/]",
      "leave:Pattern:[\\/]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\/]/"
    ],
    "/[\\a]/": [
      "enter:RegExpLiteral:/[\\a]/",
      "enter:Pattern:[\\a]",
      "enter:Alternative:[\\a]",
      "enter:CharacterClass:[\\a]",
      "enter:Character:\\a",
      "leave:Character:\\a",
      "leave:CharacterClass:[\\a]",
      "leave:Alternative:[\\a]",
      "leave:Pattern:[\\a]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\a]/"
    ],
    "/[\\d-\\uFFFF]/": [
      "enter:RegExpLiteral:/[\\d-\\uFFFF]/",
      "enter:Pattern:[\\d-\\uFFFF]",
      "enter:Alternative:[\\d-\\uFFFF]",
      "enter:CharacterClass:[\\d-\\uFFFF]",
      "enter:CharacterSet:\\d",
      "leave:CharacterSet:\\d",
      "enter:Character:-",
      "leave:Character:-",
      "enter:Character:\\uFFFF",
      "leave:Character:\\uFFFF",
      "leave:CharacterClass:[\\d-\\uFFFF]",
      "leave:Alternative:[\\d-\\uFFFF]",
      "leave:Pattern:[\\d-\\uFFFF]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\d-\\uFFFF]/"
    ],
    "/[\\D-\\uFFFF]/": [
      "enter:RegExpLiteral:/[\\D-\\uFFFF]/",
      "enter:Pattern:[\\D-\\uFFFF]",
      "enter:Alternative:[\\D-\\uFFFF]",
      "enter:CharacterClass:[\\D-\\uFFFF]",
      "enter:CharacterSet:\\D",
      "leave:CharacterSet:\\D",
      "enter:Character:-",
      "leave:Character:-",
      "enter:Character:\\uFFFF",
      "leave:Character:\\uFFFF",
      "leave:CharacterClass:[\\D-\\uFFFF]",
      "leave:Alternative:[\\D-\\uFFFF]",
      "leave:Pattern:[\\D-\\uFFFF]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\D-\\uFFFF]/"
    ],
    "/[\\s-\\uFFFF]/": [
      "enter:RegExpLiteral:/[\\s-\\uFFFF]/",
      "enter:Pattern:[\\s-\\uFFFF]",
      "enter:Alternative:[\\s-\\uFFFF]",
      "enter:CharacterClass:[\\s-\\uFFFF]",
      "enter:CharacterSet:\\s",
      "leave:CharacterSet:\\s",
      "enter:Character:-",
      "leave:Character:-",
      "enter:Character:\\uFFFF",
      "leave:Character:\\uFFFF",
      "leave:CharacterClass:[\\s-\\uFFFF]",
      "leave:Alternative:[\\s-\\uFFFF]",
      "leave:Pattern:[\\s-\\uFFFF]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\s-\\uFFFF]/"
    ],
    "/[\\S-\\uFFFF]/": [
      "enter:RegExpLiteral:/[\\S-\\uFFFF]/",
      "enter:Pattern:[\\S-\\uFFFF]",
      "enter:Alternative:[\\S-\\uFFFF]",
      "enter:CharacterClass:[\\S-\\uFFFF]",
      "enter:CharacterSet:\\S",
      "leave:CharacterSet:\\S",
      "enter:Character:-",
      "leave:Character:-",
      "enter:Character:\\uFFFF",
      "leave:Character:\\uFFFF",
      "leave:CharacterClass:[\\S-\\uFFFF]",
      "leave:Alternative:[\\S-\\uFFFF]",
      "leave:Pattern:[\\S-\\uFFFF]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\S-\\uFFFF]/"
    ],
    "/[\\w-\\uFFFF]/": [
      "enter:RegExpLiteral:/[\\w-\\uFFFF]/",
      "enter:Pattern:[\\w-\\uFFFF]",
      "enter:Alternative:[\\w-\\uFFFF]",
      "enter:CharacterClass:[\\w-\\uFFFF]",
      "enter:CharacterSet:\\w",
      "leave:CharacterSet:\\w",
      "enter:Character:-",
      "leave:Character:-",
      "enter:Character:\\uFFFF",
      "leave:Character:\\uFFFF",
      "leave:CharacterClass:[\\w-\\uFFFF]",
      "leave:Alternative:[\\w-\\uFFFF]",
      "leave:Pattern:[\\w-\\uFFFF]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\w-\\uFFFF]/"
    ],
    "/[\\W-\\uFFFF]/": [
      "enter:RegExpLiteral:/[\\W-\\uFFFF]/",
      "enter:Pattern:[\\W-\\uFFFF]",
      "enter:Alternative:[\\W-\\uFFFF]",
      "enter:CharacterClass:[\\W-\\uFFFF]",
      "enter:CharacterSet:\\W",
      "leave:CharacterSet:\\W",
      "enter:Character:-",
      "leave:Character:-",
      "enter:Character:\\uFFFF",
      "leave:Character:\\uFFFF",
      "leave:CharacterClass:[\\W-\\uFFFF]",
      "leave:Alternative:[\\W-\\uFFFF]",
      "leave:Pattern:[\\W-\\uFFFF]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\W-\\uFFFF]/"
    ],
    "/[\\u0000-\\d]/": [
      "enter:RegExpLiteral:/[\\u0000-\\d]/",
      "enter:Pattern:[\\u0000-\\d]",
      "enter:Alternative:[\\u0000-\\d]",
      "enter:CharacterClass:[\\u0000-\\d]",
      "enter:Character:\\u0000",
      "leave:Character:\\u0000",
      "enter:Character:-",
      "leave:Character:-",
      "enter:CharacterSet:\\d",
      "leave:CharacterSet:\\d",
      "leave:CharacterClass:[\\u0000-\\d]",
      "leave:Alternative:[\\u0000-\\d]",
      "leave:Pattern:[\\u0000-\\d]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\u0000-\\d]/"
    ],
    "/[\\u0000-\\D]/": [
      "enter:RegExpLiteral:/[\\u0000-\\D]/",
      "enter:Pattern:[\\u0000-\\D]",
      "enter:Alternative:[\\u0000-\\D]",
      "enter:CharacterClass:[\\u0000-\\D]",
      "enter:Character:\\u0000",
      "leave:Character:\\u0000",
      "enter:Character:-",
      "leave:Character:-",
      "enter:CharacterSet:\\D",
      "leave:CharacterSet:\\D",
      "leave:CharacterClass:[\\u0000-\\D]",
      "leave:Alternative:[\\u0000-\\D]",
      "leave:Pattern:[\\u0000-\\D]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\u0000-\\D]/"
    ],
    "/[\\u0000-\\s]/": [
      "enter:RegExpLiteral:/[\\u0000-\\s]/",
      "enter:Pattern:[\\u0000-\\s]",
      "enter:Alternative:[\\u0000-\\s]",
      "enter:CharacterClass:[\\u0000-\\s]",
      "enter:Character:\\u0000",
      "leave:Character:\\u0000",
      "enter:Character:-",
      "leave:Character:-",
      "enter:CharacterSet:\\s",
      "leave:CharacterSet:\\s",
      "leave:CharacterClass:[\\u0000-\\s]",
      "leave:Alternative:[\\u0000-\\s]",
      "leave:Pattern:[\\u0000-\\s]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\u0000-\\s]/"
    ],
    "/[\\u0000-\\S]/": [
      "enter:RegExpLiteral:/[\\u0000-\\S]/",
      "enter:Pattern:[\\u0000-\\S]",
      "enter:Alternative:[\\u0000-\\S]",
      "enter:CharacterClass:[\\u0000-\\S]",
      "enter:Character:\\u0000",
      "leave:Character:\\u0000",
      "enter:Character:-",
      "leave:Character:-",
      "enter:CharacterSet:\\S",
      "leave:CharacterSet:\\S",
      "leave:CharacterClass:[\\u0000-\\S]",
      "leave:Alternative:[\\u0000-\\S]",
      "leave:Pattern:[\\u0000-\\S]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\u0000-\\S]/"
    ],
    "/[\\u0000-\\w]/": [
      "enter:RegExpLiteral:/[\\u0000-\\w]/",
      "enter:Pattern:[\\u0000-\\w]",
      "enter:Alternative:[\\u0000-\\w]",
      "enter:CharacterClass:[\\u0000-\\w]",
      "enter:Character:\\u0000",
      "leave:Character:\\u0000",
      "enter:Character:-",
      "leave:Character:-",
      "enter:CharacterSet:\\w",
      "leave:CharacterSet:\\w",
      "leave:CharacterClass:[\\u0000-\\w]",
      "leave:Alternative:[\\u0000-\\w]",
      "leave:Pattern:[\\u0000-\\w]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\u0000-\\w]/"
    ],
    "/[\\u0000-\\W]/": [
      "enter:RegExpLiteral:/[\\u0000-\\W]/",
      "enter:Pattern:[\\u0000-\\W]",
      "enter:Alternative:[\\u0000-\\W]",
      "enter:CharacterClass:[\\u0000-\\W]",
      "enter:Character:\\u0000",
      "leave:Character:\\u0000",
      "enter:Character:-",
      "leave:Character:-",
      "enter:CharacterSet:\\W",
      "leave:CharacterSet:\\W",
      "leave:CharacterClass:[\\u0000-\\W]",
      "leave:Alternative:[\\u0000-\\W]",
      "leave:Pattern:[\\u0000-\\W]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\u0000-\\W]/"
    ],
    "/[\\u0000-\\u0001]/": [
      "enter:RegExpLiteral:/[\\u0000-\\u0001]/",
      "enter:Pattern:[\\u0000-\\u0001]",
      "enter:Alternative:[\\u0000-\\u0001]",
      "enter:CharacterClass:[\\u0000-\\u0001]",
      "enter:CharacterClassRange:\\u0000-\\u0001",
      "enter:Character:\\u0000",
      "leave:Character:\\u0000",
      "enter:Character:\\u0001",
      "leave:Character:\\u0001",
      "leave:CharacterClassRange:\\u0000-\\u0001",
      "leave:CharacterClass:[\\u0000-\\u0001]",
      "leave:Alternative:[\\u0000-\\u0001]",
      "leave:Pattern:[\\u0000-\\u0001]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\u0000-\\u0001]/"
    ],
    "/[\\u{2-\\u{1}]/": [
      "enter:RegExpLiteral:/[\\u{2-\\u{1}]/",
      "enter:Pattern:[\\u{2-\\u{1}]",
      "enter:Alternative:[\\u{2-\\u{1}]",
      "enter:CharacterClass:[\\u{2-\\u{1}]",
      "enter:Character:\\u",
      "leave:Character:\\u",
      "enter:Character:{",
      "leave:Character:{",
      "enter:CharacterClassRange:2-\\u",
      "enter:Character:2",
      "leave:Character:2",
      "enter:Character:\\u",
      "leave:Character:\\u",
      "leave:CharacterClassRange:2-\\u",
      "enter:Character:{",
      "leave:Character:{",
      "enter:Character:1",
      "leave:Character:1",
      "enter:Character:}",
      "leave:Character:}",
      "leave:CharacterClass:[\\u{2-\\u{1}]",
      "leave:Alternative:[\\u{2-\\u{1}]",
      "leave:Pattern:[\\u{2-\\u{1}]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\u{2-\\u{1}]/"
    ],
    "/[\\a-\\z]/": [
      "enter:RegExpLiteral:/[\\a-\\z]/",
      "enter:Pattern:[\\a-\\z]",
      "enter:Alternative:[\\a-\\z]",
      "enter:CharacterClass:[\\a-\\z]",
      "enter:CharacterClassRange:\\a-\\z",
      "enter:Character:\\a",
      "leave:Character:\\a",
      "enter:Character:\\z",
      "leave:Character:\\z",
      "leave:CharacterClassRange:\\a-\\z",
      "leave:CharacterClass:[\\a-\\z]",
      "leave:Alternative:[\\a-\\z]",
      "leave:Pattern:[\\a-\\z]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\a-\\z]/"
    ],
    "/[0-9--/]/": [
      "enter:RegExpLiteral:/[0-9--/]/",
      "enter:Pattern:[0-9--/]",
      "enter:Alternative:[0-9--/]",
      "enter:CharacterClass:[0-9--/]",
      "enter:CharacterClassRange:0-9",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:0-9",
      "enter:CharacterClassRange:--/",
      "enter:Character:-",
      "leave:Character:-",
      "enter:Character:/",
      "leave:Character:/",
      "leave:CharacterClassRange:--/",
      "leave:CharacterClass:[0-9--/]",
      "leave:Alternative:[0-9--/]",
      "leave:Pattern:[0-9--/]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[0-9--/]/"
    ],
    "/[\\c0-\u001f]/": [
      "enter:RegExpLiteral:/[\\c0-\u001f]/",
      "enter:Pattern:[\\c0-\u001f]",
      "enter:Alternative:[\\c0-\u001f]",
      "enter:CharacterClass:[\\c0-\u001f]",
      "enter:CharacterClassRange:\\c0-\u001f",
      "enter:Character:\\c0",
      "leave:Character:\\c0",
      "enter:Character:\u001f",
      "leave:Character:\u001f",
      "leave:CharacterClassRange:\\c0-\u001f",
      "leave:CharacterClass:[\\c0-\u001f]",
      "leave:Alternative:[\\c0-\u001f]",
      "leave:Pattern:[\\c0-\u001f]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\c0-\u001f]/"
    ],
    "/[\\c_]/": [
      "enter:RegExpLiteral:/[\\c_]/",
      "enter:Pattern:[\\c_]",
      "enter:Alternative:[\\c_]",
      "enter:CharacterClass:[\\c_]",
      "enter:Character:\\c_",
      "leave:Character:\\c_",
      "leave:CharacterClass:[\\c_]",
      "leave:Alternative:[\\c_]",
      "leave:Pattern:[\\c_]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\c_]/"
    ],
    "/^[0-9]*$/": [
      "enter:RegExpLiteral:/^[0-9]*$/",
      "enter:Pattern:^[0-9]*$",
      "enter:Alternative:^[0-9]*$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:Quantifier:[0-9]*",
      "enter:CharacterClass:[0-9]",
      "enter:CharacterClassRange:0-9",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:0-9",
      "leave:CharacterClass:[0-9]",
      "leave:Quantifier:[0-9]*",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^[0-9]*$",
      "leave:Pattern:^[0-9]*$",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/^[0-9]*$/"
    ],
    "/^[0-9]+$/": [
      "enter:RegExpLiteral:/^[0-9]+$/",
      "enter:Pattern:^[0-9]+$",
      "enter:Alternative:^[0-9]+$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:Quantifier:[0-9]+",
      "enter:CharacterClass:[0-9]",
      "enter:CharacterClassRange:0-9",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:0-9",
      "leave:CharacterClass:[0-9]",
      "leave:Quantifier:[0-9]+",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^[0-9]+$",
      "leave:Pattern:^[0-9]+$",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/^[0-9]+$/"
    ],
    "/^[a-zA-Z]*$/": [
      "enter:RegExpLiteral:/^[a-zA-Z]*$/",
      "enter:Pattern:^[a-zA-Z]*$",
      "enter:Alternative:^[a-zA-Z]*$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:Quantifier:[a-zA-Z]*",
      "enter:CharacterClass:[a-zA-Z]",
      "enter:CharacterClassRange:a-z",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:z",
      "leave:Character:z",
      "leave:CharacterClassRange:a-z",
      "enter:CharacterClassRange:A-Z",
      "enter:Character:A",
      "leave:Character:A",
      "enter:Character:Z",
      "leave:Character:Z",
      "leave:CharacterClassRange:A-Z",
      "leave:CharacterClass:[a-zA-Z]",
      "leave:Quantifier:[a-zA-Z]*",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^[a-zA-Z]*$",
      "leave:Pattern:^[a-zA-Z]*$",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/^[a-zA-Z]*$/"
    ],
    "/^[a-zA-Z]+$/": [
      "enter:RegExpLiteral:/^[a-zA-Z]+$/",
      "enter:Pattern:^[a-zA-Z]+$",
      "enter:Alternative:^[a-zA-Z]+$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:Quantifier:[a-zA-Z]+",
      "enter:CharacterClass:[a-zA-Z]",
      "enter:CharacterClassRange:a-z",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:z",
      "leave:Character:z",
      "leave:CharacterClassRange:a-z",
      "enter:CharacterClassRange:A-Z",
      "enter:Character:A",
      "leave:Character:A",
      "enter:Character:Z",
      "leave:Character:Z",
      "leave:CharacterClassRange:A-Z",
      "leave:CharacterClass:[a-zA-Z]",
      "leave:Quantifier:[a-zA-Z]+",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^[a-zA-Z]+$",
      "leave:Pattern:^[a-zA-Z]+$",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/^[a-zA-Z]+$/"
    ],
    "/^[0-9a-zA-Z]*$/": [
      "enter:RegExpLiteral:/^[0-9a-zA-Z]*$/",
      "enter:Pattern:^[0-9a-zA-Z]*$",
      "enter:Alternative:^[0-9a-zA-Z]*$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:Quantifier:[0-9a-zA-Z]*",
      "enter:CharacterClass:[0-9a-zA-Z]",
      "enter:CharacterClassRange:0-9",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:0-9",
      "enter:CharacterClassRange:a-z",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:z",
      "leave:Character:z",
      "leave:CharacterClassRange:a-z",
      "enter:CharacterClassRange:A-Z",
      "enter:Character:A",
      "leave:Character:A",
      "enter:Character:Z",
      "leave:Character:Z",
      "leave:CharacterClassRange:A-Z",
      "leave:CharacterClass:[0-9a-zA-Z]",
      "leave:Quantifier:[0-9a-zA-Z]*",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^[0-9a-zA-Z]*$",
      "leave:Pattern:^[0-9a-zA-Z]*$",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/^[0-9a-zA-Z]*$/"
    ],
    "/^[a-zA-Z0-9!-/:-@\\[-`{-~]*$/": [
      "enter:RegExpLiteral:/^[a-zA-Z0-9!-/:-@\\[-`{-~]*$/",
      "enter:Pattern:^[a-zA-Z0-9!-/:-@\\[-`{-~]*$",
      "enter:Alternative:^[a-zA-Z0-9!-/:-@\\[-`{-~]*$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:Quantifier:[a-zA-Z0-9!-/:-@\\[-`{-~]*",
      "enter:CharacterClass:[a-zA-Z0-9!-/:-@\\[-`{-~]",
      "enter:CharacterClassRange:a-z",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:z",
      "leave:Character:z",
      "leave:CharacterClassRange:a-z",
      "enter:CharacterClassRange:A-Z",
      "enter:Character:A",
      "leave:Character:A",
      "enter:Character:Z",
      "leave:Character:Z",
      "leave:CharacterClassRange:A-Z",
      "enter:CharacterClassRange:0-9",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:0-9",
      "enter:CharacterClassRange:!-/",
      "enter:Character:!",
      "leave:Character:!",
      "enter:Character:/",
      "leave:Character:/",
      "leave:CharacterClassRange:!-/",
      "enter:CharacterClassRange::-@",
      "enter:Character::",
      "leave:Character::",
      "enter:Character:@",
      "leave:Character:@",
      "leave:CharacterClassRange::-@",
      "enter:CharacterClassRange:\\[-`",
      "enter:Character:\\[",
      "leave:Character:\\[",
      "enter:Character:`",
      "leave:Character:`",
      "leave:CharacterClassRange:\\[-`",
      "enter:CharacterClassRange:{-~",
      "enter:Character:{",
      "leave:Character:{",
      "enter:Character:~",
      "leave:Character:~",
      "leave:CharacterClassRange:{-~",
      "leave:CharacterClass:[a-zA-Z0-9!-/:-@\\[-`{-~]",
      "leave:Quantifier:[a-zA-Z0-9!-/:-@\\[-`{-~]*",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^[a-zA-Z0-9!-/:-@\\[-`{-~]*$",
      "leave:Pattern:^[a-zA-Z0-9!-/:-@\\[-`{-~]*$",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/^[a-zA-Z0-9!-/:-@\\[-`{-~]*$/"
    ],
    "/^([a-zA-Z0-9]{8,})$/": [
      "enter:RegExpLiteral:/^([a-zA-Z0-9]{8,})$/",
      "enter:Pattern:^([a-zA-Z0-9]{8,})$",
      "enter:Alternative:^([a-zA-Z0-9]{8,})$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:CapturingGroup:([a-zA-Z0-9]{8,})",
      "enter:Alternative:[a-zA-Z0-9]{8,}",
      "enter:Quantifier:[a-zA-Z0-9]{8,}",
      "enter:CharacterClass:[a-zA-Z0-9]",
      "enter:CharacterClassRange:a-z",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:z",
      "leave:Character:z",
      "leave:CharacterClassRange:a-z",
      "enter:CharacterClassRange:A-Z",
      "enter:Character:A",
      "leave:Character:A",
      "enter:Character:Z",
      "leave:Character:Z",
      "leave:CharacterClassRange:A-Z",
      "enter:CharacterClassRange:0-9",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:0-9",
      "leave:CharacterClass:[a-zA-Z0-9]",
      "leave:Quantifier:[a-zA-Z0-9]{8,}",
      "leave:Alternative:[a-zA-Z0-9]{8,}",
      "leave:CapturingGroup:([a-zA-Z0-9]{8,})",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^([a-zA-Z0-9]{8,})$",
      "leave:Pattern:^([a-zA-Z0-9]{8,})$",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/^([a-zA-Z0-9]{8,})$/"
    ],
    "/^([a-zA-Z0-9]{6,8})$/": [
      "enter:RegExpLiteral:/^([a-zA-Z0-9]{6,8})$/",
      "enter:Pattern:^([a-zA-Z0-9]{6,8})$",
      "enter:Alternative:^([a-zA-Z0-9]{6,8})$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:CapturingGroup:([a-zA-Z0-9]{6,8})",
      "enter:Alternative:[a-zA-Z0-9]{6,8}",
      "enter:Quantifier:[a-zA-Z0-9]{6,8}",
      "enter:CharacterClass:[a-zA-Z0-9]",
      "enter:CharacterClassRange:a-z",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:z",
      "leave:Character:z",
      "leave:CharacterClassRange:a-z",
      "enter:CharacterClassRange:A-Z",
      "enter:Character:A",
      "leave:Character:A",
      "enter:Character:Z",
      "leave:Character:Z",
      "leave:CharacterClassRange:A-Z",
      "enter:CharacterClassRange:0-9",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:0-9",
      "leave:CharacterClass:[a-zA-Z0-9]",
      "leave:Quantifier:[a-zA-Z0-9]{6,8}",
      "leave:Alternative:[a-zA-Z0-9]{6,8}",
      "leave:CapturingGroup:([a-zA-Z0-9]{6,8})",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^([a-zA-Z0-9]{6,8})$",
      "leave:Pattern:^([a-zA-Z0-9]{6,8})$",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/^([a-zA-Z0-9]{6,8})$/"
    ],
    "/^([0-9]{0,8})$/": [
      "enter:RegExpLiteral:/^([0-9]{0,8})$/",
      "enter:Pattern:^([0-9]{0,8})$",
      "enter:Alternative:^([0-9]{0,8})$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:CapturingGroup:([0-9]{0,8})",
      "enter:Alternative:[0-9]{0,8}",
      "enter:Quantifier:[0-9]{0,8}",
      "enter:CharacterClass:[0-9]",
      "enter:CharacterClassRange:0-9",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:0-9",
      "leave:CharacterClass:[0-9]",
      "leave:Quantifier:[0-9]{0,8}",
      "leave:Alternative:[0-9]{0,8}",
      "leave:CapturingGroup:([0-9]{0,8})",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^([0-9]{0,8})$",
      "leave:Pattern:^([0-9]{0,8})$",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/^([0-9]{0,8})$/"
    ],
    "/^[0-9]{8}$/": [
      "enter:RegExpLiteral:/^[0-9]{8}$/",
      "enter:Pattern:^[0-9]{8}$",
      "enter:Alternative:^[0-9]{8}$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:Quantifier:[0-9]{8}",
      "enter:CharacterClass:[0-9]",
      "enter:CharacterClassRange:0-9",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:0-9",
      "leave:CharacterClass:[0-9]",
      "leave:Quantifier:[0-9]{8}",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^[0-9]{8}$",
      "leave:Pattern:^[0-9]{8}$",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/^[0-9]{8}$/"
    ],
    "/^https?:\\/\\//": [
      "enter:RegExpLiteral:/^https?:\\/\\//",
      "enter:Pattern:^https?:\\/\\/",
      "enter:Alternative:^https?:\\/\\/",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:Character:h",
      "leave:Character:h",
      "enter:Character:t",
      "leave:Character:t",
      "enter:Character:t",
      "leave:Character:t",
      "enter:Character:p",
      "leave:Character:p",
      "enter:Quantifier:s?",
      "enter:Character:s",
      "leave:Character:s",
      "leave:Quantifier:s?",
      "enter:Character::",
      "leave:Character::",
      "enter:Character:\\/",
      "leave:Character:\\/",
      "enter:Character:\\/",
      "leave:Character:\\/",
      "leave:Alternative:^https?:\\/\\/",
      "leave:Pattern:^https?:\\/\\/",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/^https?:\\/\\//"
    ],
    "/^\\d{3}-\\d{4}$/": [
      "enter:RegExpLiteral:/^\\d{3}-\\d{4}$/",
      "enter:Pattern:^\\d{3}-\\d{4}$",
      "enter:Alternative:^\\d{3}-\\d{4}$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:Quantifier:\\d{3}",
      "enter:CharacterSet:\\d",
      "leave:CharacterSet:\\d",
      "leave:Quantifier:\\d{3}",
      "enter:Character:-",
      "leave:Character:-",
      "enter:Quantifier:\\d{4}",
      "enter:CharacterSet:\\d",
      "leave:CharacterSet:\\d",
      "leave:Quantifier:\\d{4}",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^\\d{3}-\\d{4}$",
      "leave:Pattern:^\\d{3}-\\d{4}$",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/^\\d{3}-\\d{4}$/"
    ],
    "/^\\d{1,3}(.\\d{1,3}){3}$/": [
      "enter:RegExpLiteral:/^\\d{1,3}(.\\d{1,3}){3}$/",
      "enter:Pattern:^\\d{1,3}(.\\d{1,3}){3}$",
      "enter:Alternative:^\\d{1,3}(.\\d{1,3}){3}$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:Quantifier:\\d{1,3}",
      "enter:CharacterSet:\\d",
      "leave:CharacterSet:\\d",
      "leave:Quantifier:\\d{1,3}",
      "enter:Quantifier:(.\\d{1,3}){3}",
      "enter:CapturingGroup:(.\\d{1,3})",
      "enter:Alternative:.\\d{1,3}",
      "enter:CharacterSet:.",
      "leave:CharacterSet:.",
      "enter:Quantifier:\\d{1,3}",
      "enter:CharacterSet:\\d",
      "leave:CharacterSet:\\d",
      "leave:Quantifier:\\d{1,3}",
      "leave:Alternative:.\\d{1,3}",
      "leave:CapturingGroup:(.\\d{1,3})",
      "leave:Quantifier:(.\\d{1,3}){3}",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^\\d{1,3}(.\\d{1,3}){3}$",
      "leave:Pattern:^\\d{1,3}(.\\d{1,3}){3}$",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/^\\d{1,3}(.\\d{1,3}){3}$/"
    ],
    "/^([1-9][0-9]*|0)(\\.[0-9]+)?$/": [
      "enter:RegExpLiteral:/^([1-9][0-9]*|0)(\\.[0-9]+)?$/",
      "enter:Pattern:^([1-9][0-9]*|0)(\\.[0-9]+)?$",
      "enter:Alternative:^([1-9][0-9]*|0)(\\.[0-9]+)?$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:CapturingGroup:([1-9][0-9]*|0)",
      "enter:Alternative:[1-9][0-9]*",
      "enter:CharacterClass:[1-9]",
      "enter:CharacterClassRange:1-9",
      "enter:Character:1",
      "leave:Character:1",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:1-9",
      "leave:CharacterClass:[1-9]",
      "enter:Quantifier:[0-9]*",
      "enter:CharacterClass:[0-9]",
      "enter:CharacterClassRange:0-9",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:0-9",
      "leave:CharacterClass:[0-9]",
      "leave:Quantifier:[0-9]*",
      "leave:Alternative:[1-9][0-9]*",
      "enter:Alternative:0",
      "enter:Character:0",
      "leave:Character:0",
      "leave:Alternative:0",
      "leave:CapturingGroup:([1-9][0-9]*|0)",
      "enter:Quantifier:(\\.[0-9]+)?",
      "enter:CapturingGroup:(\\.[0-9]+)",
      "enter:Alternative:\\.[0-9]+",
      "enter:Character:\\.",
      "leave:Character:\\.",
      "enter:Quantifier:[0-9]+",
      "enter:CharacterClass:[0-9]",
      "enter:CharacterClassRange:0-9",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:0-9",
      "leave:CharacterClass:[0-9]",
      "leave:Quantifier:[0-9]+",
      "leave:Alternative:\\.[0-9]+",
      "leave:CapturingGroup:(\\.[0-9]+)",
      "leave:Quantifier:(\\.[0-9]+)?",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^([1-9][0-9]*|0)(\\.[0-9]+)?$",
      "leave:Pattern:^([1-9][0-9]*|0)(\\.[0-9]+)?$",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/^([1-9][0-9]*|0)(\\.[0-9]+)?$/"
    ],
    "/^-?([1-9][0-9]*|0)(\\.[0-9]+)?$/": [
      "enter:RegExpLiteral:/^-?([1-9][0-9]*|0)(\\.[0-9]+)?$/",
      "enter:Pattern:^-?([1-9][0-9]*|0)(\\.[0-9]+)?$",
      "enter:Alternative:^-?([1-9][0-9]*|0)(\\.[0-9]+)?$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:Quantifier:-?",
      "enter:Character:-",
      "leave:Character:-",
      "leave:Quantifier:-?",
      "enter:CapturingGroup:([1-9][0-9]*|0)",
      "enter:Alternative:[1-9][0-9]*",
      "enter:CharacterClass:[1-9]",
      "enter:CharacterClassRange:1-9",
      "enter:Character:1",
      "leave:Character:1",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:1-9",
      "leave:CharacterClass:[1-9]",
      "enter:Quantifier:[0-9]*",
      "enter:CharacterClass:[0-9]",
      "enter:CharacterClassRange:0-9",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:0-9",
      "leave:CharacterClass:[0-9]",
      "leave:Quantifier:[0-9]*",
      "leave:Alternative:[1-9][0-9]*",
      "enter:Alternative:0",
      "enter:Character:0",
      "leave:Character:0",
      "leave:Alternative:0",
      "leave:CapturingGroup:([1-9][0-9]*|0)",
      "enter:Quantifier:(\\.[0-9]+)?",
      "enter:CapturingGroup:(\\.[0-9]+)",
      "enter:Alternative:\\.[0-9]+",
      "enter:Character:\\.",
      "leave:Character:\\.",
      "enter:Quantifier:[0-9]+",
      "enter:CharacterClass:[0-9]",
      "enter:CharacterClassRange:0-9",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:0-9",
      "leave:CharacterClass:[0-9]",
      "leave:Quantifier:[0-9]+",
      "leave:Alternative:\\.[0-9]+",
      "leave:CapturingGroup:(\\.[0-9]+)",
      "leave:Quantifier:(\\.[0-9]+)?",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^-?([1-9][0-9]*|0)(\\.[0-9]+)?$",
      "leave:Pattern:^-?([1-9][0-9]*|0)(\\.[0-9]+)?$",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/^-?([1-9][0-9]*|0)(\\.[0-9]+)?$/"
    ],
    "/^[ぁ-んー]*$/": [
      "enter:RegExpLiteral:/^[ぁ-んー]*$/",
      "enter:Pattern:^[ぁ-んー]*$",
      "enter:Alternative:^[ぁ-んー]*$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:Quantifier:[ぁ-んー]*",
      "enter:CharacterClass:[ぁ-んー]",
      "enter:CharacterClassRange:ぁ-ん",
      "enter:Character:ぁ",
      "leave:Character:ぁ",
      "enter:Character:ん",
      "leave:Character:ん",
      "leave:CharacterClassRange:ぁ-ん",
      "enter:Character:ー",
      "leave:Character:ー",
      "leave:CharacterClass:[ぁ-んー]",
      "leave:Quantifier:[ぁ-んー]*",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^[ぁ-んー]*$",
      "leave:Pattern:^[ぁ-んー]*$",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/^[ぁ-んー]*$/"
    ],
    "/^[ァ-ンヴー]*$/": [
      "enter:RegExpLiteral:/^[ァ-ンヴー]*$/",
      "enter:Pattern:^[ァ-ンヴー]*$",
      "enter:Alternative:^[ァ-ンヴー]*$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:Quantifier:[ァ-ンヴー]*",
      "enter:CharacterClass:[ァ-ンヴー]",
      "enter:CharacterClassRange:ァ-ン",
      "enter:Character:ァ",
      "leave:Character:ァ",
      "enter:Character:ン",
      "leave:Character:ン",
      "leave:CharacterClassRange:ァ-ン",
      "enter:Character:ヴ",
      "leave:Character:ヴ",
      "enter:Character:ー",
      "leave:Character:ー",
      "leave:CharacterClass:[ァ-ンヴー]",
      "leave:Quantifier:[ァ-ンヴー]*",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^[ァ-ンヴー]*$",
      "leave:Pattern:^[ァ-ンヴー]*$",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/^[ァ-ンヴー]*$/"
    ],
    "/^[ｧ-ﾝﾞﾟ\\-]*$/": [
      "enter:RegExpLiteral:/^[ｧ-ﾝﾞﾟ\\-]*$/",
      "enter:Pattern:^[ｧ-ﾝﾞﾟ\\-]*$",
      "enter:Alternative:^[ｧ-ﾝﾞﾟ\\-]*$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:Quantifier:[ｧ-ﾝﾞﾟ\\-]*",
      "enter:CharacterClass:[ｧ-ﾝﾞﾟ\\-]",
      "enter:CharacterClassRange:ｧ-ﾝ",
      "enter:Character:ｧ",
      "leave:Character:ｧ",
      "enter:Character:ﾝ",
      "leave:Character:ﾝ",
      "leave:CharacterClassRange:ｧ-ﾝ",
      "enter:Character:ﾞ",
      "leave:Character:ﾞ",
      "enter:Character:ﾟ",
      "leave:Character:ﾟ",
      "enter:Character:\\-",
      "leave:Character:\\-",
      "leave:CharacterClass:[ｧ-ﾝﾞﾟ\\-]",
      "leave:Quantifier:[ｧ-ﾝﾞﾟ\\-]*",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^[ｧ-ﾝﾞﾟ\\-]*$",
      "leave:Pattern:^[ｧ-ﾝﾞﾟ\\-]*$",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/^[ｧ-ﾝﾞﾟ\\-]*$/"
    ],
    "/^[^\\x20-\\x7e]*$/": [
      "enter:RegExpLiteral:/^[^\\x20-\\x7e]*$/",
      "enter:Pattern:^[^\\x20-\\x7e]*$",
      "enter:Alternative:^[^\\x20-\\x7e]*$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:Quantifier:[^\\x20-\\x7e]*",
      "enter:CharacterClass:[^\\x20-\\x7e]",
      "enter:CharacterClassRange:\\x20-\\x7e",
      "enter:Character:\\x20",
      "leave:Character:\\x20",
      "enter:Character:\\x7e",
      "leave:Character:\\x7e",
      "leave:CharacterClassRange:\\x20-\\x7e",
      "leave:CharacterClass:[^\\x20-\\x7e]",
      "leave:Quantifier:[^\\x20-\\x7e]*",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^[^\\x20-\\x7e]*$",
      "leave:Pattern:^[^\\x20-\\x7e]*$",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/^[^\\x20-\\x7e]*$/"
    ],
    "/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/": [
      "enter:RegExpLiteral:/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/",
      "enter:Pattern:^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$",
      "enter:Alternative:^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:Quantifier:[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+",
      "enter:CharacterClass:[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]",
      "enter:CharacterClassRange:a-z",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:z",
      "leave:Character:z",
      "leave:CharacterClassRange:a-z",
      "enter:CharacterClassRange:A-Z",
      "enter:Character:A",
      "leave:Character:A",
      "enter:Character:Z",
      "leave:Character:Z",
      "leave:CharacterClassRange:A-Z",
      "enter:CharacterClassRange:0-9",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:0-9",
      "enter:Character:.",
      "leave:Character:.",
      "enter:Character:!",
      "leave:Character:!",
      "enter:Character:#",
      "leave:Character:#",
      "enter:Character:$",
      "leave:Character:$",
      "enter:Character:%",
      "leave:Character:%",
      "enter:Character:&",
      "leave:Character:&",
      "enter:Character:'",
      "leave:Character:'",
      "enter:Character:*",
      "leave:Character:*",
      "enter:Character:+",
      "leave:Character:+",
      "enter:Character:/",
      "leave:Character:/",
      "enter:Character:=",
      "leave:Character:=",
      "enter:Character:?",
      "leave:Character:?",
      "enter:Character:^",
      "leave:Character:^",
      "enter:Character:_",
      "leave:Character:_",
      "enter:Character:`",
      "leave:Character:`",
      "enter:Character:{",
      "leave:Character:{",
      "enter:Character:|",
      "leave:Character:|",
      "enter:Character:}",
      "leave:Character:}",
      "enter:Character:~",
      "leave:Character:~",
      "enter:Character:-",
      "leave:Character:-",
      "leave:CharacterClass:[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]",
      "leave:Quantifier:[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+",
      "enter:Character:@",
      "leave:Character:@",
      "enter:Quantifier:[a-zA-Z0-9-]+",
      "enter:CharacterClass:[a-zA-Z0-9-]",
      "enter:CharacterClassRange:a-z",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:z",
      "leave:Character:z",
      "leave:CharacterClassRange:a-z",
      "enter:CharacterClassRange:A-Z",
      "enter:Character:A",
      "leave:Character:A",
      "enter:Character:Z",
      "leave:Character:Z",
      "leave:CharacterClassRange:A-Z",
      "enter:CharacterClassRange:0-9",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:0-9",
      "enter:Character:-",
      "leave:Character:-",
      "leave:CharacterClass:[a-zA-Z0-9-]",
      "leave:Quantifier:[a-zA-Z0-9-]+",
      "enter:Quantifier:(?:\\.[a-zA-Z0-9-]+)*",
      "enter:Group:(?:\\.[a-zA-Z0-9-]+)",
      "enter:Alternative:\\.[a-zA-Z0-9-]+",
      "enter:Character:\\.",
      "leave:Character:\\.",
      "enter:Quantifier:[a-zA-Z0-9-]+",
      "enter:CharacterClass:[a-zA-Z0-9-]",
      "enter:CharacterClassRange:a-z",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:z",
      "leave:Character:z",
      "leave:CharacterClassRange:a-z",
      "enter:CharacterClassRange:A-Z",
      "enter:Character:A",
      "leave:Character:A",
      "enter:Character:Z",
      "leave:Character:Z",
      "leave:CharacterClassRange:A-Z",
      "enter:CharacterClassRange:0-9",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:0-9",
      "enter:Character:-",
      "leave:Character:-",
      "leave:CharacterClass:[a-zA-Z0-9-]",
      "leave:Quantifier:[a-zA-Z0-9-]+",
      "leave:Alternative:\\.[a-zA-Z0-9-]+",
      "leave:Group:(?:\\.[a-zA-Z0-9-]+)",
      "leave:Quantifier:(?:\\.[a-zA-Z0-9-]+)*",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$",
      "leave:Pattern:^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/"
    ],
    "/^((4\\d{3})|(5[1-5]\\d{2})|(6011))([- ])?\\d{4}([- ])?\\d{4}([- ])?\\d{4}|3[4,7]\\d{13}$/": [
      "enter:RegExpLiteral:/^((4\\d{3})|(5[1-5]\\d{2})|(6011))([- ])?\\d{4}([- ])?\\d{4}([- ])?\\d{4}|3[4,7]\\d{13}$/",
      "enter:Pattern:^((4\\d{3})|(5[1-5]\\d{2})|(6011))([- ])?\\d{4}([- ])?\\d{4}([- ])?\\d{4}|3[4,7]\\d{13}$",
      "enter:Alternative:^((4\\d{3})|(5[1-5]\\d{2})|(6011))([- ])?\\d{4}([- ])?\\d{4}([- ])?\\d{4}",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:CapturingGroup:((4\\d{3})|(5[1-5]\\d{2})|(6011))",
      "enter:Alternative:(4\\d{3})",
      "enter:CapturingGroup:(4\\d{3})",
      "enter:Alternative:4\\d{3}",
      "enter:Character:4",
      "leave:Character:4",
      "enter:Quantifier:\\d{3}",
      "enter:CharacterSet:\\d",
      "leave:CharacterSet:\\d",
      "leave:Quantifier:\\d{3}",
      "leave:Alternative:4\\d{3}",
      "leave:CapturingGroup:(4\\d{3})",
      "leave:Alternative:(4\\d{3})",
      "enter:Alternative:(5[1-5]\\d{2})",
      "enter:CapturingGroup:(5[1-5]\\d{2})",
      "enter:Alternative:5[1-5]\\d{2}",
      "enter:Character:5",
      "leave:Character:5",
      "enter:CharacterClass:[1-5]",
      "enter:CharacterClassRange:1-5",
      "enter:Character:1",
      "leave:Character:1",
      "enter:Character:5",
      "leave:Character:5",
      "leave:CharacterClassRange:1-5",
      "leave:CharacterClass:[1-5]",
      "enter:Quantifier:\\d{2}",
      "enter:CharacterSet:\\d",
      "leave:CharacterSet:\\d",
      "leave:Quantifier:\\d{2}",
      "leave:Alternative:5[1-5]\\d{2}",
      "leave:CapturingGroup:(5[1-5]\\d{2})",
      "leave:Alternative:(5[1-5]\\d{2})",
      "enter:Alternative:(6011)",
      "enter:CapturingGroup:(6011)",
      "enter:Alternative:6011",
      "enter:Character:6",
      "leave:Character:6",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:1",
      "leave:Character:1",
      "enter:Character:1",
      "leave:Character:1",
      "leave:Alternative:6011",
      "leave:CapturingGroup:(6011)",
      "leave:Alternative:(6011)",
      "leave:CapturingGroup:((4\\d{3})|(5[1-5]\\d{2})|(6011))",
      "enter:Quantifier:([- ])?",
      "enter:CapturingGroup:([- ])",
      "enter:Alternative:[- ]",
      "enter:CharacterClass:[- ]",
      "enter:Character:-",
      "leave:Character:-",
      "enter:Character: ",
      "leave:Character: ",
      "leave:CharacterClass:[- ]",
      "leave:Alternative:[- ]",
      "leave:CapturingGroup:([- ])",
      "leave:Quantifier:([- ])?",
      "enter:Quantifier:\\d{4}",
      "enter:CharacterSet:\\d",
      "leave:CharacterSet:\\d",
      "leave:Quantifier:\\d{4}",
      "enter:Quantifier:([- ])?",
      "enter:CapturingGroup:([- ])",
      "enter:Alternative:[- ]",
      "enter:CharacterClass:[- ]",
      "enter:Character:-",
      "leave:Character:-",
      "enter:Character: ",
      "leave:Character: ",
      "leave:CharacterClass:[- ]",
      "leave:Alternative:[- ]",
      "leave:CapturingGroup:([- ])",
      "leave:Quantifier:([- ])?",
      "enter:Quantifier:\\d{4}",
      "enter:CharacterSet:\\d",
      "leave:CharacterSet:\\d",
      "leave:Quantifier:\\d{4}",
      "enter:Quantifier:([- ])?",
      "enter:CapturingGroup:([- ])",
      "enter:Alternative:[- ]",
      "enter:CharacterClass:[- ]",
      "enter:Character:-",
      "leave:Character:-",
      "enter:Character: ",
      "leave:Character: ",
      "leave:CharacterClass:[- ]",
      "leave:Alternative:[- ]",
      "leave:CapturingGroup:([- ])",
      "leave:Quantifier:([- ])?",
      "enter:Quantifier:\\d{4}",
      "enter:CharacterSet:\\d",
      "leave:CharacterSet:\\d",
      "leave:Quantifier:\\d{4}",
      "leave:Alternative:^((4\\d{3})|(5[1-5]\\d{2})|(6011))([- ])?\\d{4}([- ])?\\d{4}([- ])?\\d{4}",
      "enter:Alternative:3[4,7]\\d{13}$",
      "enter:Character:3",
      "leave:Character:3",
      "enter:CharacterClass:[4,7]",
      "enter:Character:4",
      "leave:Character:4",
      "enter:Character:,",
      "leave:Character:,",
      "enter:Character:7",
      "leave:Character:7",
      "leave:CharacterClass:[4,7]",
      "enter:Quantifier:\\d{13}",
      "enter:CharacterSet:\\d",
      "leave:CharacterSet:\\d",
      "leave:Quantifier:\\d{13}",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:3[4,7]\\d{13}$",
      "leave:Pattern:^((4\\d{3})|(5[1-5]\\d{2})|(6011))([- ])?\\d{4}([- ])?\\d{4}([- ])?\\d{4}|3[4,7]\\d{13}$",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/^((4\\d{3})|(5[1-5]\\d{2})|(6011))([- ])?\\d{4}([- ])?\\d{4}([- ])?\\d{4}|3[4,7]\\d{13}$/"
    ],
    "/^\\s*|\\s*$/": [
      "enter:RegExpLiteral:/^\\s*|\\s*$/",
      "enter:Pattern:^\\s*|\\s*$",
      "enter:Alternative:^\\s*",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:Quantifier:\\s*",
      "enter:CharacterSet:\\s",
      "leave:CharacterSet:\\s",
      "leave:Quantifier:\\s*",
      "leave:Alternative:^\\s*",
      "enter:Alternative:\\s*$",
      "enter:Quantifier:\\s*",
      "enter:CharacterSet:\\s",
      "leave:CharacterSet:\\s",
      "leave:Quantifier:\\s*",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:\\s*$",
      "leave:Pattern:^\\s*|\\s*$",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/^\\s*|\\s*$/"
    ],
    "/[\\d][\\12-\\14]{1,}[^\\d]/": [
      "enter:RegExpLiteral:/[\\d][\\12-\\14]{1,}[^\\d]/",
      "enter:Pattern:[\\d][\\12-\\14]{1,}[^\\d]",
      "enter:Alternative:[\\d][\\12-\\14]{1,}[^\\d]",
      "enter:CharacterClass:[\\d]",
      "enter:CharacterSet:\\d",
      "leave:CharacterSet:\\d",
      "leave:CharacterClass:[\\d]",
      "enter:Quantifier:[\\12-\\14]{1,}",
      "enter:CharacterClass:[\\12-\\14]",
      "enter:CharacterClassRange:\\12-\\14",
      "enter:Character:\\12",
      "leave:Character:\\12",
      "enter:Character:\\14",
      "leave:Character:\\14",
      "leave:CharacterClassRange:\\12-\\14",
      "leave:CharacterClass:[\\12-\\14]",
      "leave:Quantifier:[\\12-\\14]{1,}",
      "enter:CharacterClass:[^\\d]",
      "enter:CharacterSet:\\d",
      "leave:CharacterSet:\\d",
      "leave:CharacterClass:[^\\d]",
      "leave:Alternative:[\\d][\\12-\\14]{1,}[^\\d]",
      "leave:Pattern:[\\d][\\12-\\14]{1,}[^\\d]",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/[\\d][\\12-\\14]{1,}[^\\d]/"
    ],
    "/([a ]\\b)*\\b/": [
      "enter:RegExpLiteral:/([a ]\\b)*\\b/",
      "enter:Pattern:([a ]\\b)*\\b",
      "enter:Alternative:([a ]\\b)*\\b",
      "enter:Quantifier:([a ]\\b)*",
      "enter:CapturingGroup:([a ]\\b)",
      "enter:Alternative:[a ]\\b",
      "enter:CharacterClass:[a ]",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character: ",
      "leave:Character: ",
      "leave:CharacterClass:[a ]",
      "enter:Assertion:\\b",
      "leave:Assertion:\\b",
      "leave:Alternative:[a ]\\b",
      "leave:CapturingGroup:([a ]\\b)",
      "leave:Quantifier:([a ]\\b)*",
      "enter:Assertion:\\b",
      "leave:Assertion:\\b",
      "leave:Alternative:([a ]\\b)*\\b",
      "leave:Pattern:([a ]\\b)*\\b",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/([a ]\\b)*\\b/"
    ],
    "/foo/u": [
      "enter:RegExpLiteral:/foo/u",
      "enter:Pattern:foo",
      "enter:Alternative:foo",
      "enter:Character:f",
      "leave:Character:f",
      "enter:Character:o",
      "leave:Character:o",
      "enter:Character:o",
      "leave:Character:o",
      "leave:Alternative:foo",
      "leave:Pattern:foo",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/foo/u"
    ],
    "/foo|bar/u": [
      "enter:RegExpLiteral:/foo|bar/u",
      "enter:Pattern:foo|bar",
      "enter:Alternative:foo",
      "enter:Character:f",
      "leave:Character:f",
      "enter:Character:o",
      "leave:Character:o",
      "enter:Character:o",
      "leave:Character:o",
      "leave:Alternative:foo",
      "enter:Alternative:bar",
      "enter:Character:b",
      "leave:Character:b",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:r",
      "leave:Character:r",
      "leave:Alternative:bar",
      "leave:Pattern:foo|bar",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/foo|bar/u"
    ],
    "/||||/u": [
      "enter:RegExpLiteral:/||||/u",
      "enter:Pattern:||||",
      "enter:Alternative:",
      "leave:Alternative:",
      "enter:Alternative:",
      "leave:Alternative:",
      "enter:Alternative:",
      "leave:Alternative:",
      "enter:Alternative:",
      "leave:Alternative:",
      "enter:Alternative:",
      "leave:Alternative:",
      "leave:Pattern:||||",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/||||/u"
    ],
    "/^|$|\\b|\\B/u": [
      "enter:RegExpLiteral:/^|$|\\b|\\B/u",
      "enter:Pattern:^|$|\\b|\\B",
      "enter:Alternative:^",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "leave:Alternative:^",
      "enter:Alternative:$",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:$",
      "enter:Alternative:\\b",
      "enter:Assertion:\\b",
      "leave:Assertion:\\b",
      "leave:Alternative:\\b",
      "enter:Alternative:\\B",
      "enter:Assertion:\\B",
      "leave:Assertion:\\B",
      "leave:Alternative:\\B",
      "leave:Pattern:^|$|\\b|\\B",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/^|$|\\b|\\B/u"
    ],
    "/(?=)/u": [
      "enter:RegExpLiteral:/(?=)/u",
      "enter:Pattern:(?=)",
      "enter:Alternative:(?=)",
      "enter:Assertion:(?=)",
      "enter:Alternative:",
      "leave:Alternative:",
      "leave:Assertion:(?=)",
      "leave:Alternative:(?=)",
      "leave:Pattern:(?=)",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/(?=)/u"
    ],
    "/(?=foo)/u": [
      "enter:RegExpLiteral:/(?=foo)/u",
      "enter:Pattern:(?=foo)",
      "enter:Alternative:(?=foo)",
      "enter:Assertion:(?=foo)",
      "enter:Alternative:foo",
      "enter:Character:f",
      "leave:Character:f",
      "enter:Character:o",
      "leave:Character:o",
      "enter:Character:o",
      "leave:Character:o",
      "leave:Alternative:foo",
      "leave:Assertion:(?=foo)",
      "leave:Alternative:(?=foo)",
      "leave:Pattern:(?=foo)",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/(?=foo)/u"
    ],
    "/(?!)/u": [
      "enter:RegExpLiteral:/(?!)/u",
      "enter:Pattern:(?!)",
      "enter:Alternative:(?!)",
      "enter:Assertion:(?!)",
      "enter:Alternative:",
      "leave:Alternative:",
      "leave:Assertion:(?!)",
      "leave:Alternative:(?!)",
      "leave:Pattern:(?!)",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/(?!)/u"
    ],
    "/(?!foo)/u": [
      "enter:RegExpLiteral:/(?!foo)/u",
      "enter:Pattern:(?!foo)",
      "enter:Alternative:(?!foo)",
      "enter:Assertion:(?!foo)",
      "enter:Alternative:foo",
      "enter:Character:f",
      "leave:Character:f",
      "enter:Character:o",
      "leave:Character:o",
      "enter:Character:o",
      "leave:Character:o",
      "leave:Alternative:foo",
      "leave:Assertion:(?!foo)",
      "leave:Alternative:(?!foo)",
      "leave:Pattern:(?!foo)",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/(?!foo)/u"
    ],
    "/a*/u": [
      "enter:RegExpLiteral:/a*/u",
      "enter:Pattern:a*",
      "enter:Alternative:a*",
      "enter:Quantifier:a*",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Quantifier:a*",
      "leave:Alternative:a*",
      "leave:Pattern:a*",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/a*/u"
    ],
    "/a+/u": [
      "enter:RegExpLiteral:/a+/u",
      "enter:Pattern:a+",
      "enter:Alternative:a+",
      "enter:Quantifier:a+",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Quantifier:a+",
      "leave:Alternative:a+",
      "leave:Pattern:a+",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/a+/u"
    ],
    "/a?/u": [
      "enter:RegExpLiteral:/a?/u",
      "enter:Pattern:a?",
      "enter:Alternative:a?",
      "enter:Quantifier:a?",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Quantifier:a?",
      "leave:Alternative:a?",
      "leave:Pattern:a?",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/a?/u"
    ],
    "/a{1}/u": [
      "enter:RegExpLiteral:/a{1}/u",
      "enter:Pattern:a{1}",
      "enter:Alternative:a{1}",
      "enter:Quantifier:a{1}",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Quantifier:a{1}",
      "leave:Alternative:a{1}",
      "leave:Pattern:a{1}",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/a{1}/u"
    ],
    "/a{1,}/u": [
      "enter:RegExpLiteral:/a{1,}/u",
      "enter:Pattern:a{1,}",
      "enter:Alternative:a{1,}",
      "enter:Quantifier:a{1,}",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Quantifier:a{1,}",
      "leave:Alternative:a{1,}",
      "leave:Pattern:a{1,}",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/a{1,}/u"
    ],
    "/a{1,2}/u": [
      "enter:RegExpLiteral:/a{1,2}/u",
      "enter:Pattern:a{1,2}",
      "enter:Alternative:a{1,2}",
      "enter:Quantifier:a{1,2}",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Quantifier:a{1,2}",
      "leave:Alternative:a{1,2}",
      "leave:Pattern:a{1,2}",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/a{1,2}/u"
    ],
    "/a*?/u": [
      "enter:RegExpLiteral:/a*?/u",
      "enter:Pattern:a*?",
      "enter:Alternative:a*?",
      "enter:Quantifier:a*?",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Quantifier:a*?",
      "leave:Alternative:a*?",
      "leave:Pattern:a*?",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/a*?/u"
    ],
    "/a+?/u": [
      "enter:RegExpLiteral:/a+?/u",
      "enter:Pattern:a+?",
      "enter:Alternative:a+?",
      "enter:Quantifier:a+?",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Quantifier:a+?",
      "leave:Alternative:a+?",
      "leave:Pattern:a+?",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/a+?/u"
    ],
    "/a??/u": [
      "enter:RegExpLiteral:/a??/u",
      "enter:Pattern:a??",
      "enter:Alternative:a??",
      "enter:Quantifier:a??",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Quantifier:a??",
      "leave:Alternative:a??",
      "leave:Pattern:a??",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/a??/u"
    ],
    "/a{1}?/u": [
      "enter:RegExpLiteral:/a{1}?/u",
      "enter:Pattern:a{1}?",
      "enter:Alternative:a{1}?",
      "enter:Quantifier:a{1}?",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Quantifier:a{1}?",
      "leave:Alternative:a{1}?",
      "leave:Pattern:a{1}?",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/a{1}?/u"
    ],
    "/a{1,}?/u": [
      "enter:RegExpLiteral:/a{1,}?/u",
      "enter:Pattern:a{1,}?",
      "enter:Alternative:a{1,}?",
      "enter:Quantifier:a{1,}?",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Quantifier:a{1,}?",
      "leave:Alternative:a{1,}?",
      "leave:Pattern:a{1,}?",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/a{1,}?/u"
    ],
    "/a{1,2}?/u": [
      "enter:RegExpLiteral:/a{1,2}?/u",
      "enter:Pattern:a{1,2}?",
      "enter:Alternative:a{1,2}?",
      "enter:Quantifier:a{1,2}?",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Quantifier:a{1,2}?",
      "leave:Alternative:a{1,2}?",
      "leave:Pattern:a{1,2}?",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/a{1,2}?/u"
    ],
    "/👍🚀❇️/u": [
      "enter:RegExpLiteral:/👍🚀❇️/u",
      "enter:Pattern:👍🚀❇️",
      "enter:Alternative:👍🚀❇️",
      "enter:Character:👍",
      "leave:Character:👍",
      "enter:Character:🚀",
      "leave:Character:🚀",
      "enter:Character:❇",
      "leave:Character:❇",
      "enter:Character:️",
      "leave:Character:️",
      "leave:Alternative:👍🚀❇️",
      "leave:Pattern:👍🚀❇️",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/👍🚀❇️/u"
    ],
    "/^/u": [
      "enter:RegExpLiteral:/^/u",
      "enter:Pattern:^",
      "enter:Alternative:^",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "leave:Alternative:^",
      "leave:Pattern:^",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/^/u"
    ],
    "/$/u": [
      "enter:RegExpLiteral:/$/u",
      "enter:Pattern:$",
      "enter:Alternative:$",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:$",
      "leave:Pattern:$",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/$/u"
    ],
    "/./u": [
      "enter:RegExpLiteral:/./u",
      "enter:Pattern:.",
      "enter:Alternative:.",
      "enter:CharacterSet:.",
      "leave:CharacterSet:.",
      "leave:Alternative:.",
      "leave:Pattern:.",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/./u"
    ],
    "/|/u": [
      "enter:RegExpLiteral:/|/u",
      "enter:Pattern:|",
      "enter:Alternative:",
      "leave:Alternative:",
      "enter:Alternative:",
      "leave:Alternative:",
      "leave:Pattern:|",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/|/u"
    ],
    "/(a)\\1/u": [
      "enter:RegExpLiteral:/(a)\\1/u",
      "enter:Pattern:(a)\\1",
      "enter:Alternative:(a)\\1",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:Backreference:\\1",
      "leave:Backreference:\\1",
      "leave:Alternative:(a)\\1",
      "leave:Pattern:(a)\\1",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/(a)\\1/u"
    ],
    "/\\1(a)/u": [
      "enter:RegExpLiteral:/\\1(a)/u",
      "enter:Pattern:\\1(a)",
      "enter:Alternative:\\1(a)",
      "enter:Backreference:\\1",
      "leave:Backreference:\\1",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "leave:Alternative:\\1(a)",
      "leave:Pattern:\\1(a)",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\1(a)/u"
    ],
    "/(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\10/u": [
      "enter:RegExpLiteral:/(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\10/u",
      "enter:Pattern:(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\10",
      "enter:Alternative:(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\10",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:Backreference:\\10",
      "leave:Backreference:\\10",
      "leave:Alternative:(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\10",
      "leave:Pattern:(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\10",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\10/u"
    ],
    "/(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\11/u": [
      "enter:RegExpLiteral:/(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\11/u",
      "enter:Pattern:(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\11",
      "enter:Alternative:(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\11",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "enter:Backreference:\\11",
      "leave:Backreference:\\11",
      "leave:Alternative:(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\11",
      "leave:Pattern:(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\11",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)(a)\\11/u"
    ],
    "/(?:a)/u": [
      "enter:RegExpLiteral:/(?:a)/u",
      "enter:Pattern:(?:a)",
      "enter:Alternative:(?:a)",
      "enter:Group:(?:a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:Group:(?:a)",
      "leave:Alternative:(?:a)",
      "leave:Pattern:(?:a)",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/(?:a)/u"
    ],
    "/\\d/u": [
      "enter:RegExpLiteral:/\\d/u",
      "enter:Pattern:\\d",
      "enter:Alternative:\\d",
      "enter:CharacterSet:\\d",
      "leave:CharacterSet:\\d",
      "leave:Alternative:\\d",
      "leave:Pattern:\\d",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\d/u"
    ],
    "/\\D/u": [
      "enter:RegExpLiteral:/\\D/u",
      "enter:Pattern:\\D",
      "enter:Alternative:\\D",
      "enter:CharacterSet:\\D",
      "leave:CharacterSet:\\D",
      "leave:Alternative:\\D",
      "leave:Pattern:\\D",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\D/u"
    ],
    "/\\s/u": [
      "enter:RegExpLiteral:/\\s/u",
      "enter:Pattern:\\s",
      "enter:Alternative:\\s",
      "enter:CharacterSet:\\s",
      "leave:CharacterSet:\\s",
      "leave:Alternative:\\s",
      "leave:Pattern:\\s",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\s/u"
    ],
    "/\\S/u": [
      "enter:RegExpLiteral:/\\S/u",
      "enter:Pattern:\\S",
      "enter:Alternative:\\S",
      "enter:CharacterSet:\\S",
      "leave:CharacterSet:\\S",
      "leave:Alternative:\\S",
      "leave:Pattern:\\S",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\S/u"
    ],
    "/\\w/u": [
      "enter:RegExpLiteral:/\\w/u",
      "enter:Pattern:\\w",
      "enter:Alternative:\\w",
      "enter:CharacterSet:\\w",
      "leave:CharacterSet:\\w",
      "leave:Alternative:\\w",
      "leave:Pattern:\\w",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\w/u"
    ],
    "/\\W/u": [
      "enter:RegExpLiteral:/\\W/u",
      "enter:Pattern:\\W",
      "enter:Alternative:\\W",
      "enter:CharacterSet:\\W",
      "leave:CharacterSet:\\W",
      "leave:Alternative:\\W",
      "leave:Pattern:\\W",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\W/u"
    ],
    "/\\f/u": [
      "enter:RegExpLiteral:/\\f/u",
      "enter:Pattern:\\f",
      "enter:Alternative:\\f",
      "enter:Character:\\f",
      "leave:Character:\\f",
      "leave:Alternative:\\f",
      "leave:Pattern:\\f",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\f/u"
    ],
    "/\\n/u": [
      "enter:RegExpLiteral:/\\n/u",
      "enter:Pattern:\\n",
      "enter:Alternative:\\n",
      "enter:Character:\\n",
      "leave:Character:\\n",
      "leave:Alternative:\\n",
      "leave:Pattern:\\n",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\n/u"
    ],
    "/\\r/u": [
      "enter:RegExpLiteral:/\\r/u",
      "enter:Pattern:\\r",
      "enter:Alternative:\\r",
      "enter:Character:\\r",
      "leave:Character:\\r",
      "leave:Alternative:\\r",
      "leave:Pattern:\\r",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\r/u"
    ],
    "/\\t/u": [
      "enter:RegExpLiteral:/\\t/u",
      "enter:Pattern:\\t",
      "enter:Alternative:\\t",
      "enter:Character:\\t",
      "leave:Character:\\t",
      "leave:Alternative:\\t",
      "leave:Pattern:\\t",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\t/u"
    ],
    "/\\v/u": [
      "enter:RegExpLiteral:/\\v/u",
      "enter:Pattern:\\v",
      "enter:Alternative:\\v",
      "enter:Character:\\v",
      "leave:Character:\\v",
      "leave:Alternative:\\v",
      "leave:Pattern:\\v",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\v/u"
    ],
    "/\\cA/u": [
      "enter:RegExpLiteral:/\\cA/u",
      "enter:Pattern:\\cA",
      "enter:Alternative:\\cA",
      "enter:Character:\\cA",
      "leave:Character:\\cA",
      "leave:Alternative:\\cA",
      "leave:Pattern:\\cA",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\cA/u"
    ],
    "/\\cz/u": [
      "enter:RegExpLiteral:/\\cz/u",
      "enter:Pattern:\\cz",
      "enter:Alternative:\\cz",
      "enter:Character:\\cz",
      "leave:Character:\\cz",
      "leave:Alternative:\\cz",
      "leave:Pattern:\\cz",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\cz/u"
    ],
    "/\\0/u": [
      "enter:RegExpLiteral:/\\0/u",
      "enter:Pattern:\\0",
      "enter:Alternative:\\0",
      "enter:Character:\\0",
      "leave:Character:\\0",
      "leave:Alternative:\\0",
      "leave:Pattern:\\0",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\0/u"
    ],
    "/\\u1234/u": [
      "enter:RegExpLiteral:/\\u1234/u",
      "enter:Pattern:\\u1234",
      "enter:Alternative:\\u1234",
      "enter:Character:\\u1234",
      "leave:Character:\\u1234",
      "leave:Alternative:\\u1234",
      "leave:Pattern:\\u1234",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\u1234/u"
    ],
    "/\\u12345/u": [
      "enter:RegExpLiteral:/\\u12345/u",
      "enter:Pattern:\\u12345",
      "enter:Alternative:\\u12345",
      "enter:Character:\\u1234",
      "leave:Character:\\u1234",
      "enter:Character:5",
      "leave:Character:5",
      "leave:Alternative:\\u12345",
      "leave:Pattern:\\u12345",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\u12345/u"
    ],
    "/\\u{a}/u": [
      "enter:RegExpLiteral:/\\u{a}/u",
      "enter:Pattern:\\u{a}",
      "enter:Alternative:\\u{a}",
      "enter:Character:\\u{a}",
      "leave:Character:\\u{a}",
      "leave:Alternative:\\u{a}",
      "leave:Pattern:\\u{a}",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\u{a}/u"
    ],
    "/\\u{20}/u": [
      "enter:RegExpLiteral:/\\u{20}/u",
      "enter:Pattern:\\u{20}",
      "enter:Alternative:\\u{20}",
      "enter:Character:\\u{20}",
      "leave:Character:\\u{20}",
      "leave:Alternative:\\u{20}",
      "leave:Pattern:\\u{20}",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\u{20}/u"
    ],
    "/\\u{10FFFF}/u": [
      "enter:RegExpLiteral:/\\u{10FFFF}/u",
      "enter:Pattern:\\u{10FFFF}",
      "enter:Alternative:\\u{10FFFF}",
      "enter:Character:\\u{10FFFF}",
      "leave:Character:\\u{10FFFF}",
      "leave:Alternative:\\u{10FFFF}",
      "leave:Pattern:\\u{10FFFF}",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\u{10FFFF}/u"
    ],
    "/\\u{00000001}/u": [
      "enter:RegExpLiteral:/\\u{00000001}/u",
      "enter:Pattern:\\u{00000001}",
      "enter:Alternative:\\u{00000001}",
      "enter:Character:\\u{00000001}",
      "leave:Character:\\u{00000001}",
      "leave:Alternative:\\u{00000001}",
      "leave:Pattern:\\u{00000001}",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\u{00000001}/u"
    ],
    "/\\^/u": [
      "enter:RegExpLiteral:/\\^/u",
      "enter:Pattern:\\^",
      "enter:Alternative:\\^",
      "enter:Character:\\^",
      "leave:Character:\\^",
      "leave:Alternative:\\^",
      "leave:Pattern:\\^",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\^/u"
    ],
    "/\\$/u": [
      "enter:RegExpLiteral:/\\$/u",
      "enter:Pattern:\\$",
      "enter:Alternative:\\$",
      "enter:Character:\\$",
      "leave:Character:\\$",
      "leave:Alternative:\\$",
      "leave:Pattern:\\$",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\$/u"
    ],
    "/\\./u": [
      "enter:RegExpLiteral:/\\./u",
      "enter:Pattern:\\.",
      "enter:Alternative:\\.",
      "enter:Character:\\.",
      "leave:Character:\\.",
      "leave:Alternative:\\.",
      "leave:Pattern:\\.",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\./u"
    ],
    "/\\+/u": [
      "enter:RegExpLiteral:/\\+/u",
      "enter:Pattern:\\+",
      "enter:Alternative:\\+",
      "enter:Character:\\+",
      "leave:Character:\\+",
      "leave:Alternative:\\+",
      "leave:Pattern:\\+",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\+/u"
    ],
    "/\\?/u": [
      "enter:RegExpLiteral:/\\?/u",
      "enter:Pattern:\\?",
      "enter:Alternative:\\?",
      "enter:Character:\\?",
      "leave:Character:\\?",
      "leave:Alternative:\\?",
      "leave:Pattern:\\?",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\?/u"
    ],
    "/\\(/u": [
      "enter:RegExpLiteral:/\\(/u",
      "enter:Pattern:\\(",
      "enter:Alternative:\\(",
      "enter:Character:\\(",
      "leave:Character:\\(",
      "leave:Alternative:\\(",
      "leave:Pattern:\\(",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\(/u"
    ],
    "/\\)/u": [
      "enter:RegExpLiteral:/\\)/u",
      "enter:Pattern:\\)",
      "enter:Alternative:\\)",
      "enter:Character:\\)",
      "leave:Character:\\)",
      "leave:Alternative:\\)",
      "leave:Pattern:\\)",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\)/u"
    ],
    "/\\[/u": [
      "enter:RegExpLiteral:/\\[/u",
      "enter:Pattern:\\[",
      "enter:Alternative:\\[",
      "enter:Character:\\[",
      "leave:Character:\\[",
      "leave:Alternative:\\[",
      "leave:Pattern:\\[",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\[/u"
    ],
    "/\\]/u": [
      "enter:RegExpLiteral:/\\]/u",
      "enter:Pattern:\\]",
      "enter:Alternative:\\]",
      "enter:Character:\\]",
      "leave:Character:\\]",
      "leave:Alternative:\\]",
      "leave:Pattern:\\]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\]/u"
    ],
    "/\\{/u": [
      "enter:RegExpLiteral:/\\{/u",
      "enter:Pattern:\\{",
      "enter:Alternative:\\{",
      "enter:Character:\\{",
      "leave:Character:\\{",
      "leave:Alternative:\\{",
      "leave:Pattern:\\{",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\{/u"
    ],
    "/\\}/u": [
      "enter:RegExpLiteral:/\\}/u",
      "enter:Pattern:\\}",
      "enter:Alternative:\\}",
      "enter:Character:\\}",
      "leave:Character:\\}",
      "leave:Alternative:\\}",
      "leave:Pattern:\\}",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\}/u"
    ],
    "/\\|/u": [
      "enter:RegExpLiteral:/\\|/u",
      "enter:Pattern:\\|",
      "enter:Alternative:\\|",
      "enter:Character:\\|",
      "leave:Character:\\|",
      "leave:Alternative:\\|",
      "leave:Pattern:\\|",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\|/u"
    ],
    "/\\//u": [
      "enter:RegExpLiteral:/\\//u",
      "enter:Pattern:\\/",
      "enter:Alternative:\\/",
      "enter:Character:\\/",
      "leave:Character:\\/",
      "leave:Alternative:\\/",
      "leave:Pattern:\\/",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\//u"
    ],
    "/[]/u": [
      "enter:RegExpLiteral:/[]/u",
      "enter:Pattern:[]",
      "enter:Alternative:[]",
      "enter:CharacterClass:[]",
      "leave:CharacterClass:[]",
      "leave:Alternative:[]",
      "leave:Pattern:[]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[]/u"
    ],
    "/[^-a-b-]/u": [
      "enter:RegExpLiteral:/[^-a-b-]/u",
      "enter:Pattern:[^-a-b-]",
      "enter:Alternative:[^-a-b-]",
      "enter:CharacterClass:[^-a-b-]",
      "enter:Character:-",
      "leave:Character:-",
      "enter:CharacterClassRange:a-b",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:b",
      "leave:Character:b",
      "leave:CharacterClassRange:a-b",
      "enter:Character:-",
      "leave:Character:-",
      "leave:CharacterClass:[^-a-b-]",
      "leave:Alternative:[^-a-b-]",
      "leave:Pattern:[^-a-b-]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[^-a-b-]/u"
    ],
    "/[-]/u": [
      "enter:RegExpLiteral:/[-]/u",
      "enter:Pattern:[-]",
      "enter:Alternative:[-]",
      "enter:CharacterClass:[-]",
      "enter:Character:-",
      "leave:Character:-",
      "leave:CharacterClass:[-]",
      "leave:Alternative:[-]",
      "leave:Pattern:[-]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[-]/u"
    ],
    "/[a]/u": [
      "enter:RegExpLiteral:/[a]/u",
      "enter:Pattern:[a]",
      "enter:Alternative:[a]",
      "enter:CharacterClass:[a]",
      "enter:Character:a",
      "leave:Character:a",
      "leave:CharacterClass:[a]",
      "leave:Alternative:[a]",
      "leave:Pattern:[a]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[a]/u"
    ],
    "/[--]/u": [
      "enter:RegExpLiteral:/[--]/u",
      "enter:Pattern:[--]",
      "enter:Alternative:[--]",
      "enter:CharacterClass:[--]",
      "enter:Character:-",
      "leave:Character:-",
      "enter:Character:-",
      "leave:Character:-",
      "leave:CharacterClass:[--]",
      "leave:Alternative:[--]",
      "leave:Pattern:[--]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[--]/u"
    ],
    "/[-a]/u": [
      "enter:RegExpLiteral:/[-a]/u",
      "enter:Pattern:[-a]",
      "enter:Alternative:[-a]",
      "enter:CharacterClass:[-a]",
      "enter:Character:-",
      "leave:Character:-",
      "enter:Character:a",
      "leave:Character:a",
      "leave:CharacterClass:[-a]",
      "leave:Alternative:[-a]",
      "leave:Pattern:[-a]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[-a]/u"
    ],
    "/[-a-]/u": [
      "enter:RegExpLiteral:/[-a-]/u",
      "enter:Pattern:[-a-]",
      "enter:Alternative:[-a-]",
      "enter:CharacterClass:[-a-]",
      "enter:Character:-",
      "leave:Character:-",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:-",
      "leave:Character:-",
      "leave:CharacterClass:[-a-]",
      "leave:Alternative:[-a-]",
      "leave:Pattern:[-a-]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[-a-]/u"
    ],
    "/[a-]/u": [
      "enter:RegExpLiteral:/[a-]/u",
      "enter:Pattern:[a-]",
      "enter:Alternative:[a-]",
      "enter:CharacterClass:[a-]",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:-",
      "leave:Character:-",
      "leave:CharacterClass:[a-]",
      "leave:Alternative:[a-]",
      "leave:Pattern:[a-]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[a-]/u"
    ],
    "/[a-b]/u": [
      "enter:RegExpLiteral:/[a-b]/u",
      "enter:Pattern:[a-b]",
      "enter:Alternative:[a-b]",
      "enter:CharacterClass:[a-b]",
      "enter:CharacterClassRange:a-b",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:b",
      "leave:Character:b",
      "leave:CharacterClassRange:a-b",
      "leave:CharacterClass:[a-b]",
      "leave:Alternative:[a-b]",
      "leave:Pattern:[a-b]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[a-b]/u"
    ],
    "/[-a-b-]/u": [
      "enter:RegExpLiteral:/[-a-b-]/u",
      "enter:Pattern:[-a-b-]",
      "enter:Alternative:[-a-b-]",
      "enter:CharacterClass:[-a-b-]",
      "enter:Character:-",
      "leave:Character:-",
      "enter:CharacterClassRange:a-b",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:b",
      "leave:Character:b",
      "leave:CharacterClassRange:a-b",
      "enter:Character:-",
      "leave:Character:-",
      "leave:CharacterClass:[-a-b-]",
      "leave:Alternative:[-a-b-]",
      "leave:Pattern:[-a-b-]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[-a-b-]/u"
    ],
    "/[---]/u": [
      "enter:RegExpLiteral:/[---]/u",
      "enter:Pattern:[---]",
      "enter:Alternative:[---]",
      "enter:CharacterClass:[---]",
      "enter:CharacterClassRange:---",
      "enter:Character:-",
      "leave:Character:-",
      "enter:Character:-",
      "leave:Character:-",
      "leave:CharacterClassRange:---",
      "leave:CharacterClass:[---]",
      "leave:Alternative:[---]",
      "leave:Pattern:[---]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[---]/u"
    ],
    "/[a-b--/]/u": [
      "enter:RegExpLiteral:/[a-b--/]/u",
      "enter:Pattern:[a-b--/]",
      "enter:Alternative:[a-b--/]",
      "enter:CharacterClass:[a-b--/]",
      "enter:CharacterClassRange:a-b",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:b",
      "leave:Character:b",
      "leave:CharacterClassRange:a-b",
      "enter:CharacterClassRange:--/",
      "enter:Character:-",
      "leave:Character:-",
      "enter:Character:/",
      "leave:Character:/",
      "leave:CharacterClassRange:--/",
      "leave:CharacterClass:[a-b--/]",
      "leave:Alternative:[a-b--/]",
      "leave:Pattern:[a-b--/]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[a-b--/]/u"
    ],
    "/[\\b-\\n]/u": [
      "enter:RegExpLiteral:/[\\b-\\n]/u",
      "enter:Pattern:[\\b-\\n]",
      "enter:Alternative:[\\b-\\n]",
      "enter:CharacterClass:[\\b-\\n]",
      "enter:CharacterClassRange:\\b-\\n",
      "enter:Character:\\b",
      "leave:Character:\\b",
      "enter:Character:\\n",
      "leave:Character:\\n",
      "leave:CharacterClassRange:\\b-\\n",
      "leave:CharacterClass:[\\b-\\n]",
      "leave:Alternative:[\\b-\\n]",
      "leave:Pattern:[\\b-\\n]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\b-\\n]/u"
    ],
    "/[b\\-a]/u": [
      "enter:RegExpLiteral:/[b\\-a]/u",
      "enter:Pattern:[b\\-a]",
      "enter:Alternative:[b\\-a]",
      "enter:CharacterClass:[b\\-a]",
      "enter:Character:b",
      "leave:Character:b",
      "enter:Character:\\-",
      "leave:Character:\\-",
      "enter:Character:a",
      "leave:Character:a",
      "leave:CharacterClass:[b\\-a]",
      "leave:Alternative:[b\\-a]",
      "leave:Pattern:[b\\-a]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[b\\-a]/u"
    ],
    "/[\\d]/u": [
      "enter:RegExpLiteral:/[\\d]/u",
      "enter:Pattern:[\\d]",
      "enter:Alternative:[\\d]",
      "enter:CharacterClass:[\\d]",
      "enter:CharacterSet:\\d",
      "leave:CharacterSet:\\d",
      "leave:CharacterClass:[\\d]",
      "leave:Alternative:[\\d]",
      "leave:Pattern:[\\d]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\d]/u"
    ],
    "/[\\D]/u": [
      "enter:RegExpLiteral:/[\\D]/u",
      "enter:Pattern:[\\D]",
      "enter:Alternative:[\\D]",
      "enter:CharacterClass:[\\D]",
      "enter:CharacterSet:\\D",
      "leave:CharacterSet:\\D",
      "leave:CharacterClass:[\\D]",
      "leave:Alternative:[\\D]",
      "leave:Pattern:[\\D]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\D]/u"
    ],
    "/[\\s]/u": [
      "enter:RegExpLiteral:/[\\s]/u",
      "enter:Pattern:[\\s]",
      "enter:Alternative:[\\s]",
      "enter:CharacterClass:[\\s]",
      "enter:CharacterSet:\\s",
      "leave:CharacterSet:\\s",
      "leave:CharacterClass:[\\s]",
      "leave:Alternative:[\\s]",
      "leave:Pattern:[\\s]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\s]/u"
    ],
    "/[\\S]/u": [
      "enter:RegExpLiteral:/[\\S]/u",
      "enter:Pattern:[\\S]",
      "enter:Alternative:[\\S]",
      "enter:CharacterClass:[\\S]",
      "enter:CharacterSet:\\S",
      "leave:CharacterSet:\\S",
      "leave:CharacterClass:[\\S]",
      "leave:Alternative:[\\S]",
      "leave:Pattern:[\\S]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\S]/u"
    ],
    "/[\\w]/u": [
      "enter:RegExpLiteral:/[\\w]/u",
      "enter:Pattern:[\\w]",
      "enter:Alternative:[\\w]",
      "enter:CharacterClass:[\\w]",
      "enter:CharacterSet:\\w",
      "leave:CharacterSet:\\w",
      "leave:CharacterClass:[\\w]",
      "leave:Alternative:[\\w]",
      "leave:Pattern:[\\w]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\w]/u"
    ],
    "/[\\W]/u": [
      "enter:RegExpLiteral:/[\\W]/u",
      "enter:Pattern:[\\W]",
      "enter:Alternative:[\\W]",
      "enter:CharacterClass:[\\W]",
      "enter:CharacterSet:\\W",
      "leave:CharacterSet:\\W",
      "leave:CharacterClass:[\\W]",
      "leave:Alternative:[\\W]",
      "leave:Pattern:[\\W]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\W]/u"
    ],
    "/[\\f]/u": [
      "enter:RegExpLiteral:/[\\f]/u",
      "enter:Pattern:[\\f]",
      "enter:Alternative:[\\f]",
      "enter:CharacterClass:[\\f]",
      "enter:Character:\\f",
      "leave:Character:\\f",
      "leave:CharacterClass:[\\f]",
      "leave:Alternative:[\\f]",
      "leave:Pattern:[\\f]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\f]/u"
    ],
    "/[\\n]/u": [
      "enter:RegExpLiteral:/[\\n]/u",
      "enter:Pattern:[\\n]",
      "enter:Alternative:[\\n]",
      "enter:CharacterClass:[\\n]",
      "enter:Character:\\n",
      "leave:Character:\\n",
      "leave:CharacterClass:[\\n]",
      "leave:Alternative:[\\n]",
      "leave:Pattern:[\\n]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\n]/u"
    ],
    "/[\\r]/u": [
      "enter:RegExpLiteral:/[\\r]/u",
      "enter:Pattern:[\\r]",
      "enter:Alternative:[\\r]",
      "enter:CharacterClass:[\\r]",
      "enter:Character:\\r",
      "leave:Character:\\r",
      "leave:CharacterClass:[\\r]",
      "leave:Alternative:[\\r]",
      "leave:Pattern:[\\r]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\r]/u"
    ],
    "/[\\t]/u": [
      "enter:RegExpLiteral:/[\\t]/u",
      "enter:Pattern:[\\t]",
      "enter:Alternative:[\\t]",
      "enter:CharacterClass:[\\t]",
      "enter:Character:\\t",
      "leave:Character:\\t",
      "leave:CharacterClass:[\\t]",
      "leave:Alternative:[\\t]",
      "leave:Pattern:[\\t]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\t]/u"
    ],
    "/[\\v]/u": [
      "enter:RegExpLiteral:/[\\v]/u",
      "enter:Pattern:[\\v]",
      "enter:Alternative:[\\v]",
      "enter:CharacterClass:[\\v]",
      "enter:Character:\\v",
      "leave:Character:\\v",
      "leave:CharacterClass:[\\v]",
      "leave:Alternative:[\\v]",
      "leave:Pattern:[\\v]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\v]/u"
    ],
    "/[\\cA]/u": [
      "enter:RegExpLiteral:/[\\cA]/u",
      "enter:Pattern:[\\cA]",
      "enter:Alternative:[\\cA]",
      "enter:CharacterClass:[\\cA]",
      "enter:Character:\\cA",
      "leave:Character:\\cA",
      "leave:CharacterClass:[\\cA]",
      "leave:Alternative:[\\cA]",
      "leave:Pattern:[\\cA]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\cA]/u"
    ],
    "/[\\cz]/u": [
      "enter:RegExpLiteral:/[\\cz]/u",
      "enter:Pattern:[\\cz]",
      "enter:Alternative:[\\cz]",
      "enter:CharacterClass:[\\cz]",
      "enter:Character:\\cz",
      "leave:Character:\\cz",
      "leave:CharacterClass:[\\cz]",
      "leave:Alternative:[\\cz]",
      "leave:Pattern:[\\cz]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\cz]/u"
    ],
    "/[\\0]/u": [
      "enter:RegExpLiteral:/[\\0]/u",
      "enter:Pattern:[\\0]",
      "enter:Alternative:[\\0]",
      "enter:CharacterClass:[\\0]",
      "enter:Character:\\0",
      "leave:Character:\\0",
      "leave:CharacterClass:[\\0]",
      "leave:Alternative:[\\0]",
      "leave:Pattern:[\\0]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\0]/u"
    ],
    "/[\\x12]/u": [
      "enter:RegExpLiteral:/[\\x12]/u",
      "enter:Pattern:[\\x12]",
      "enter:Alternative:[\\x12]",
      "enter:CharacterClass:[\\x12]",
      "enter:Character:\\x12",
      "leave:Character:\\x12",
      "leave:CharacterClass:[\\x12]",
      "leave:Alternative:[\\x12]",
      "leave:Pattern:[\\x12]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\x12]/u"
    ],
    "/[\\x123]/u": [
      "enter:RegExpLiteral:/[\\x123]/u",
      "enter:Pattern:[\\x123]",
      "enter:Alternative:[\\x123]",
      "enter:CharacterClass:[\\x123]",
      "enter:Character:\\x12",
      "leave:Character:\\x12",
      "enter:Character:3",
      "leave:Character:3",
      "leave:CharacterClass:[\\x123]",
      "leave:Alternative:[\\x123]",
      "leave:Pattern:[\\x123]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\x123]/u"
    ],
    "/[\\u1234]/u": [
      "enter:RegExpLiteral:/[\\u1234]/u",
      "enter:Pattern:[\\u1234]",
      "enter:Alternative:[\\u1234]",
      "enter:CharacterClass:[\\u1234]",
      "enter:Character:\\u1234",
      "leave:Character:\\u1234",
      "leave:CharacterClass:[\\u1234]",
      "leave:Alternative:[\\u1234]",
      "leave:Pattern:[\\u1234]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\u1234]/u"
    ],
    "/[\\u12345]/u": [
      "enter:RegExpLiteral:/[\\u12345]/u",
      "enter:Pattern:[\\u12345]",
      "enter:Alternative:[\\u12345]",
      "enter:CharacterClass:[\\u12345]",
      "enter:Character:\\u1234",
      "leave:Character:\\u1234",
      "enter:Character:5",
      "leave:Character:5",
      "leave:CharacterClass:[\\u12345]",
      "leave:Alternative:[\\u12345]",
      "leave:Pattern:[\\u12345]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\u12345]/u"
    ],
    "/[\\u{a}]/u": [
      "enter:RegExpLiteral:/[\\u{a}]/u",
      "enter:Pattern:[\\u{a}]",
      "enter:Alternative:[\\u{a}]",
      "enter:CharacterClass:[\\u{a}]",
      "enter:Character:\\u{a}",
      "leave:Character:\\u{a}",
      "leave:CharacterClass:[\\u{a}]",
      "leave:Alternative:[\\u{a}]",
      "leave:Pattern:[\\u{a}]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\u{a}]/u"
    ],
    "/[\\u{20}]/u": [
      "enter:RegExpLiteral:/[\\u{20}]/u",
      "enter:Pattern:[\\u{20}]",
      "enter:Alternative:[\\u{20}]",
      "enter:CharacterClass:[\\u{20}]",
      "enter:Character:\\u{20}",
      "leave:Character:\\u{20}",
      "leave:CharacterClass:[\\u{20}]",
      "leave:Alternative:[\\u{20}]",
      "leave:Pattern:[\\u{20}]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\u{20}]/u"
    ],
    "/[\\u{10FFFF}]/u": [
      "enter:RegExpLiteral:/[\\u{10FFFF}]/u",
      "enter:Pattern:[\\u{10FFFF}]",
      "enter:Alternative:[\\u{10FFFF}]",
      "enter:CharacterClass:[\\u{10FFFF}]",
      "enter:Character:\\u{10FFFF}",
      "leave:Character:\\u{10FFFF}",
      "leave:CharacterClass:[\\u{10FFFF}]",
      "leave:Alternative:[\\u{10FFFF}]",
      "leave:Pattern:[\\u{10FFFF}]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\u{10FFFF}]/u"
    ],
    "/[\\u{00000001}]/u": [
      "enter:RegExpLiteral:/[\\u{00000001}]/u",
      "enter:Pattern:[\\u{00000001}]",
      "enter:Alternative:[\\u{00000001}]",
      "enter:CharacterClass:[\\u{00000001}]",
      "enter:Character:\\u{00000001}",
      "leave:Character:\\u{00000001}",
      "leave:CharacterClass:[\\u{00000001}]",
      "leave:Alternative:[\\u{00000001}]",
      "leave:Pattern:[\\u{00000001}]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\u{00000001}]/u"
    ],
    "/[\\^]/u": [
      "enter:RegExpLiteral:/[\\^]/u",
      "enter:Pattern:[\\^]",
      "enter:Alternative:[\\^]",
      "enter:CharacterClass:[\\^]",
      "enter:Character:\\^",
      "leave:Character:\\^",
      "leave:CharacterClass:[\\^]",
      "leave:Alternative:[\\^]",
      "leave:Pattern:[\\^]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\^]/u"
    ],
    "/[\\$]/u": [
      "enter:RegExpLiteral:/[\\$]/u",
      "enter:Pattern:[\\$]",
      "enter:Alternative:[\\$]",
      "enter:CharacterClass:[\\$]",
      "enter:Character:\\$",
      "leave:Character:\\$",
      "leave:CharacterClass:[\\$]",
      "leave:Alternative:[\\$]",
      "leave:Pattern:[\\$]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\$]/u"
    ],
    "/[\\.]/u": [
      "enter:RegExpLiteral:/[\\.]/u",
      "enter:Pattern:[\\.]",
      "enter:Alternative:[\\.]",
      "enter:CharacterClass:[\\.]",
      "enter:Character:\\.",
      "leave:Character:\\.",
      "leave:CharacterClass:[\\.]",
      "leave:Alternative:[\\.]",
      "leave:Pattern:[\\.]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\.]/u"
    ],
    "/[\\+]/u": [
      "enter:RegExpLiteral:/[\\+]/u",
      "enter:Pattern:[\\+]",
      "enter:Alternative:[\\+]",
      "enter:CharacterClass:[\\+]",
      "enter:Character:\\+",
      "leave:Character:\\+",
      "leave:CharacterClass:[\\+]",
      "leave:Alternative:[\\+]",
      "leave:Pattern:[\\+]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\+]/u"
    ],
    "/[\\?]/u": [
      "enter:RegExpLiteral:/[\\?]/u",
      "enter:Pattern:[\\?]",
      "enter:Alternative:[\\?]",
      "enter:CharacterClass:[\\?]",
      "enter:Character:\\?",
      "leave:Character:\\?",
      "leave:CharacterClass:[\\?]",
      "leave:Alternative:[\\?]",
      "leave:Pattern:[\\?]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\?]/u"
    ],
    "/[\\(]/u": [
      "enter:RegExpLiteral:/[\\(]/u",
      "enter:Pattern:[\\(]",
      "enter:Alternative:[\\(]",
      "enter:CharacterClass:[\\(]",
      "enter:Character:\\(",
      "leave:Character:\\(",
      "leave:CharacterClass:[\\(]",
      "leave:Alternative:[\\(]",
      "leave:Pattern:[\\(]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\(]/u"
    ],
    "/[\\)]/u": [
      "enter:RegExpLiteral:/[\\)]/u",
      "enter:Pattern:[\\)]",
      "enter:Alternative:[\\)]",
      "enter:CharacterClass:[\\)]",
      "enter:Character:\\)",
      "leave:Character:\\)",
      "leave:CharacterClass:[\\)]",
      "leave:Alternative:[\\)]",
      "leave:Pattern:[\\)]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\)]/u"
    ],
    "/[\\[]/u": [
      "enter:RegExpLiteral:/[\\[]/u",
      "enter:Pattern:[\\[]",
      "enter:Alternative:[\\[]",
      "enter:CharacterClass:[\\[]",
      "enter:Character:\\[",
      "leave:Character:\\[",
      "leave:CharacterClass:[\\[]",
      "leave:Alternative:[\\[]",
      "leave:Pattern:[\\[]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\[]/u"
    ],
    "/[\\]]/u": [
      "enter:RegExpLiteral:/[\\]]/u",
      "enter:Pattern:[\\]]",
      "enter:Alternative:[\\]]",
      "enter:CharacterClass:[\\]]",
      "enter:Character:\\]",
      "leave:Character:\\]",
      "leave:CharacterClass:[\\]]",
      "leave:Alternative:[\\]]",
      "leave:Pattern:[\\]]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\]]/u"
    ],
    "/[\\{]/u": [
      "enter:RegExpLiteral:/[\\{]/u",
      "enter:Pattern:[\\{]",
      "enter:Alternative:[\\{]",
      "enter:CharacterClass:[\\{]",
      "enter:Character:\\{",
      "leave:Character:\\{",
      "leave:CharacterClass:[\\{]",
      "leave:Alternative:[\\{]",
      "leave:Pattern:[\\{]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\{]/u"
    ],
    "/[\\}]/u": [
      "enter:RegExpLiteral:/[\\}]/u",
      "enter:Pattern:[\\}]",
      "enter:Alternative:[\\}]",
      "enter:CharacterClass:[\\}]",
      "enter:Character:\\}",
      "leave:Character:\\}",
      "leave:CharacterClass:[\\}]",
      "leave:Alternative:[\\}]",
      "leave:Pattern:[\\}]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\}]/u"
    ],
    "/[\\|]/u": [
      "enter:RegExpLiteral:/[\\|]/u",
      "enter:Pattern:[\\|]",
      "enter:Alternative:[\\|]",
      "enter:CharacterClass:[\\|]",
      "enter:Character:\\|",
      "leave:Character:\\|",
      "leave:CharacterClass:[\\|]",
      "leave:Alternative:[\\|]",
      "leave:Pattern:[\\|]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\|]/u"
    ],
    "/[\\/]/u": [
      "enter:RegExpLiteral:/[\\/]/u",
      "enter:Pattern:[\\/]",
      "enter:Alternative:[\\/]",
      "enter:CharacterClass:[\\/]",
      "enter:Character:\\/",
      "leave:Character:\\/",
      "leave:CharacterClass:[\\/]",
      "leave:Alternative:[\\/]",
      "leave:Pattern:[\\/]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\/]/u"
    ],
    "/[\\u0000-\\u0001]/u": [
      "enter:RegExpLiteral:/[\\u0000-\\u0001]/u",
      "enter:Pattern:[\\u0000-\\u0001]",
      "enter:Alternative:[\\u0000-\\u0001]",
      "enter:CharacterClass:[\\u0000-\\u0001]",
      "enter:CharacterClassRange:\\u0000-\\u0001",
      "enter:Character:\\u0000",
      "leave:Character:\\u0000",
      "enter:Character:\\u0001",
      "leave:Character:\\u0001",
      "leave:CharacterClassRange:\\u0000-\\u0001",
      "leave:CharacterClass:[\\u0000-\\u0001]",
      "leave:Alternative:[\\u0000-\\u0001]",
      "leave:Pattern:[\\u0000-\\u0001]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\u0000-\\u0001]/u"
    ],
    "/[\\u{1}-\\u{2}]/u": [
      "enter:RegExpLiteral:/[\\u{1}-\\u{2}]/u",
      "enter:Pattern:[\\u{1}-\\u{2}]",
      "enter:Alternative:[\\u{1}-\\u{2}]",
      "enter:CharacterClass:[\\u{1}-\\u{2}]",
      "enter:CharacterClassRange:\\u{1}-\\u{2}",
      "enter:Character:\\u{1}",
      "leave:Character:\\u{1}",
      "enter:Character:\\u{2}",
      "leave:Character:\\u{2}",
      "leave:CharacterClassRange:\\u{1}-\\u{2}",
      "leave:CharacterClass:[\\u{1}-\\u{2}]",
      "leave:Alternative:[\\u{1}-\\u{2}]",
      "leave:Pattern:[\\u{1}-\\u{2}]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\u{1}-\\u{2}]/u"
    ],
    "/[0-9--/]/u": [
      "enter:RegExpLiteral:/[0-9--/]/u",
      "enter:Pattern:[0-9--/]",
      "enter:Alternative:[0-9--/]",
      "enter:CharacterClass:[0-9--/]",
      "enter:CharacterClassRange:0-9",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:0-9",
      "enter:CharacterClassRange:--/",
      "enter:Character:-",
      "leave:Character:-",
      "enter:Character:/",
      "leave:Character:/",
      "leave:CharacterClassRange:--/",
      "leave:CharacterClass:[0-9--/]",
      "leave:Alternative:[0-9--/]",
      "leave:Pattern:[0-9--/]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[0-9--/]/u"
    ],
    "/[🌷-🌸]/u": [
      "enter:RegExpLiteral:/[🌷-🌸]/u",
      "enter:Pattern:[🌷-🌸]",
      "enter:Alternative:[🌷-🌸]",
      "enter:CharacterClass:[🌷-🌸]",
      "enter:CharacterClassRange:🌷-🌸",
      "enter:Character:🌷",
      "leave:Character:🌷",
      "enter:Character:🌸",
      "leave:Character:🌸",
      "leave:CharacterClassRange:🌷-🌸",
      "leave:CharacterClass:[🌷-🌸]",
      "leave:Alternative:[🌷-🌸]",
      "leave:Pattern:[🌷-🌸]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[🌷-🌸]/u"
    ],
    "/[\\u0000-🌸-\\u0000]/u": [
      "enter:RegExpLiteral:/[\\u0000-🌸-\\u0000]/u",
      "enter:Pattern:[\\u0000-🌸-\\u0000]",
      "enter:Alternative:[\\u0000-🌸-\\u0000]",
      "enter:CharacterClass:[\\u0000-🌸-\\u0000]",
      "enter:CharacterClassRange:\\u0000-🌸",
      "enter:Character:\\u0000",
      "leave:Character:\\u0000",
      "enter:Character:🌸",
      "leave:Character:🌸",
      "leave:CharacterClassRange:\\u0000-🌸",
      "enter:Character:-",
      "leave:Character:-",
      "enter:Character:\\u0000",
      "leave:Character:\\u0000",
      "leave:CharacterClass:[\\u0000-🌸-\\u0000]",
      "leave:Alternative:[\\u0000-🌸-\\u0000]",
      "leave:Pattern:[\\u0000-🌸-\\u0000]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\u0000-🌸-\\u0000]/u"
    ],
    "/[\\u0000-\\u{1f338}-\\u0000]/u": [
      "enter:RegExpLiteral:/[\\u0000-\\u{1f338}-\\u0000]/u",
      "enter:Pattern:[\\u0000-\\u{1f338}-\\u0000]",
      "enter:Alternative:[\\u0000-\\u{1f338}-\\u0000]",
      "enter:CharacterClass:[\\u0000-\\u{1f338}-\\u0000]",
      "enter:CharacterClassRange:\\u0000-\\u{1f338}",
      "enter:Character:\\u0000",
      "leave:Character:\\u0000",
      "enter:Character:\\u{1f338}",
      "leave:Character:\\u{1f338}",
      "leave:CharacterClassRange:\\u0000-\\u{1f338}",
      "enter:Character:-",
      "leave:Character:-",
      "enter:Character:\\u0000",
      "leave:Character:\\u0000",
      "leave:CharacterClass:[\\u0000-\\u{1f338}-\\u0000]",
      "leave:Alternative:[\\u0000-\\u{1f338}-\\u0000]",
      "leave:Pattern:[\\u0000-\\u{1f338}-\\u0000]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\u0000-\\u{1f338}-\\u0000]/u"
    ],
    "/[\\u0000-\\ud83c\\udf38-\\u0000]/u": [
      "enter:RegExpLiteral:/[\\u0000-\\ud83c\\udf38-\\u0000]/u",
      "enter:Pattern:[\\u0000-\\ud83c\\udf38-\\u0000]",
      "enter:Alternative:[\\u0000-\\ud83c\\udf38-\\u0000]",
      "enter:CharacterClass:[\\u0000-\\ud83c\\udf38-\\u0000]",
      "enter:CharacterClassRange:\\u0000-\\ud83c\\udf38",
      "enter:Character:\\u0000",
      "leave:Character:\\u0000",
      "enter:Character:\\ud83c\\udf38",
      "leave:Character:\\ud83c\\udf38",
      "leave:CharacterClassRange:\\u0000-\\ud83c\\udf38",
      "enter:Character:-",
      "leave:Character:-",
      "enter:Character:\\u0000",
      "leave:Character:\\u0000",
      "leave:CharacterClass:[\\u0000-\\ud83c\\udf38-\\u0000]",
      "leave:Alternative:[\\u0000-\\ud83c\\udf38-\\u0000]",
      "leave:Pattern:[\\u0000-\\ud83c\\udf38-\\u0000]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\u0000-\\ud83c\\udf38-\\u0000]/u"
    ],
    "/[\\uD834\\uDF06-\\uD834\\uDF08a-z]/u": [
      "enter:RegExpLiteral:/[\\uD834\\uDF06-\\uD834\\uDF08a-z]/u",
      "enter:Pattern:[\\uD834\\uDF06-\\uD834\\uDF08a-z]",
      "enter:Alternative:[\\uD834\\uDF06-\\uD834\\uDF08a-z]",
      "enter:CharacterClass:[\\uD834\\uDF06-\\uD834\\uDF08a-z]",
      "enter:CharacterClassRange:\\uD834\\uDF06-\\uD834\\uDF08",
      "enter:Character:\\uD834\\uDF06",
      "leave:Character:\\uD834\\uDF06",
      "enter:Character:\\uD834\\uDF08",
      "leave:Character:\\uD834\\uDF08",
      "leave:CharacterClassRange:\\uD834\\uDF06-\\uD834\\uDF08",
      "enter:CharacterClassRange:a-z",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:z",
      "leave:Character:z",
      "leave:CharacterClassRange:a-z",
      "leave:CharacterClass:[\\uD834\\uDF06-\\uD834\\uDF08a-z]",
      "leave:Alternative:[\\uD834\\uDF06-\\uD834\\uDF08a-z]",
      "leave:Pattern:[\\uD834\\uDF06-\\uD834\\uDF08a-z]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\uD834\\uDF06-\\uD834\\uDF08a-z]/u"
    ],
    "/^[0-9]*$/u": [
      "enter:RegExpLiteral:/^[0-9]*$/u",
      "enter:Pattern:^[0-9]*$",
      "enter:Alternative:^[0-9]*$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:Quantifier:[0-9]*",
      "enter:CharacterClass:[0-9]",
      "enter:CharacterClassRange:0-9",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:0-9",
      "leave:CharacterClass:[0-9]",
      "leave:Quantifier:[0-9]*",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^[0-9]*$",
      "leave:Pattern:^[0-9]*$",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/^[0-9]*$/u"
    ],
    "/^[0-9]+$/u": [
      "enter:RegExpLiteral:/^[0-9]+$/u",
      "enter:Pattern:^[0-9]+$",
      "enter:Alternative:^[0-9]+$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:Quantifier:[0-9]+",
      "enter:CharacterClass:[0-9]",
      "enter:CharacterClassRange:0-9",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:0-9",
      "leave:CharacterClass:[0-9]",
      "leave:Quantifier:[0-9]+",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^[0-9]+$",
      "leave:Pattern:^[0-9]+$",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/^[0-9]+$/u"
    ],
    "/^[a-zA-Z]*$/u": [
      "enter:RegExpLiteral:/^[a-zA-Z]*$/u",
      "enter:Pattern:^[a-zA-Z]*$",
      "enter:Alternative:^[a-zA-Z]*$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:Quantifier:[a-zA-Z]*",
      "enter:CharacterClass:[a-zA-Z]",
      "enter:CharacterClassRange:a-z",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:z",
      "leave:Character:z",
      "leave:CharacterClassRange:a-z",
      "enter:CharacterClassRange:A-Z",
      "enter:Character:A",
      "leave:Character:A",
      "enter:Character:Z",
      "leave:Character:Z",
      "leave:CharacterClassRange:A-Z",
      "leave:CharacterClass:[a-zA-Z]",
      "leave:Quantifier:[a-zA-Z]*",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^[a-zA-Z]*$",
      "leave:Pattern:^[a-zA-Z]*$",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/^[a-zA-Z]*$/u"
    ],
    "/^[a-zA-Z]+$/u": [
      "enter:RegExpLiteral:/^[a-zA-Z]+$/u",
      "enter:Pattern:^[a-zA-Z]+$",
      "enter:Alternative:^[a-zA-Z]+$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:Quantifier:[a-zA-Z]+",
      "enter:CharacterClass:[a-zA-Z]",
      "enter:CharacterClassRange:a-z",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:z",
      "leave:Character:z",
      "leave:CharacterClassRange:a-z",
      "enter:CharacterClassRange:A-Z",
      "enter:Character:A",
      "leave:Character:A",
      "enter:Character:Z",
      "leave:Character:Z",
      "leave:CharacterClassRange:A-Z",
      "leave:CharacterClass:[a-zA-Z]",
      "leave:Quantifier:[a-zA-Z]+",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^[a-zA-Z]+$",
      "leave:Pattern:^[a-zA-Z]+$",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/^[a-zA-Z]+$/u"
    ],
    "/^[0-9a-zA-Z]*$/u": [
      "enter:RegExpLiteral:/^[0-9a-zA-Z]*$/u",
      "enter:Pattern:^[0-9a-zA-Z]*$",
      "enter:Alternative:^[0-9a-zA-Z]*$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:Quantifier:[0-9a-zA-Z]*",
      "enter:CharacterClass:[0-9a-zA-Z]",
      "enter:CharacterClassRange:0-9",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:0-9",
      "enter:CharacterClassRange:a-z",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:z",
      "leave:Character:z",
      "leave:CharacterClassRange:a-z",
      "enter:CharacterClassRange:A-Z",
      "enter:Character:A",
      "leave:Character:A",
      "enter:Character:Z",
      "leave:Character:Z",
      "leave:CharacterClassRange:A-Z",
      "leave:CharacterClass:[0-9a-zA-Z]",
      "leave:Quantifier:[0-9a-zA-Z]*",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^[0-9a-zA-Z]*$",
      "leave:Pattern:^[0-9a-zA-Z]*$",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/^[0-9a-zA-Z]*$/u"
    ],
    "/^[a-zA-Z0-9!-/:-@\\[-`{-~]*$/u": [
      "enter:RegExpLiteral:/^[a-zA-Z0-9!-/:-@\\[-`{-~]*$/u",
      "enter:Pattern:^[a-zA-Z0-9!-/:-@\\[-`{-~]*$",
      "enter:Alternative:^[a-zA-Z0-9!-/:-@\\[-`{-~]*$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:Quantifier:[a-zA-Z0-9!-/:-@\\[-`{-~]*",
      "enter:CharacterClass:[a-zA-Z0-9!-/:-@\\[-`{-~]",
      "enter:CharacterClassRange:a-z",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:z",
      "leave:Character:z",
      "leave:CharacterClassRange:a-z",
      "enter:CharacterClassRange:A-Z",
      "enter:Character:A",
      "leave:Character:A",
      "enter:Character:Z",
      "leave:Character:Z",
      "leave:CharacterClassRange:A-Z",
      "enter:CharacterClassRange:0-9",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:0-9",
      "enter:CharacterClassRange:!-/",
      "enter:Character:!",
      "leave:Character:!",
      "enter:Character:/",
      "leave:Character:/",
      "leave:CharacterClassRange:!-/",
      "enter:CharacterClassRange::-@",
      "enter:Character::",
      "leave:Character::",
      "enter:Character:@",
      "leave:Character:@",
      "leave:CharacterClassRange::-@",
      "enter:CharacterClassRange:\\[-`",
      "enter:Character:\\[",
      "leave:Character:\\[",
      "enter:Character:`",
      "leave:Character:`",
      "leave:CharacterClassRange:\\[-`",
      "enter:CharacterClassRange:{-~",
      "enter:Character:{",
      "leave:Character:{",
      "enter:Character:~",
      "leave:Character:~",
      "leave:CharacterClassRange:{-~",
      "leave:CharacterClass:[a-zA-Z0-9!-/:-@\\[-`{-~]",
      "leave:Quantifier:[a-zA-Z0-9!-/:-@\\[-`{-~]*",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^[a-zA-Z0-9!-/:-@\\[-`{-~]*$",
      "leave:Pattern:^[a-zA-Z0-9!-/:-@\\[-`{-~]*$",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/^[a-zA-Z0-9!-/:-@\\[-`{-~]*$/u"
    ],
    "/^([a-zA-Z0-9]{8,})$/u": [
      "enter:RegExpLiteral:/^([a-zA-Z0-9]{8,})$/u",
      "enter:Pattern:^([a-zA-Z0-9]{8,})$",
      "enter:Alternative:^([a-zA-Z0-9]{8,})$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:CapturingGroup:([a-zA-Z0-9]{8,})",
      "enter:Alternative:[a-zA-Z0-9]{8,}",
      "enter:Quantifier:[a-zA-Z0-9]{8,}",
      "enter:CharacterClass:[a-zA-Z0-9]",
      "enter:CharacterClassRange:a-z",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:z",
      "leave:Character:z",
      "leave:CharacterClassRange:a-z",
      "enter:CharacterClassRange:A-Z",
      "enter:Character:A",
      "leave:Character:A",
      "enter:Character:Z",
      "leave:Character:Z",
      "leave:CharacterClassRange:A-Z",
      "enter:CharacterClassRange:0-9",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:0-9",
      "leave:CharacterClass:[a-zA-Z0-9]",
      "leave:Quantifier:[a-zA-Z0-9]{8,}",
      "leave:Alternative:[a-zA-Z0-9]{8,}",
      "leave:CapturingGroup:([a-zA-Z0-9]{8,})",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^([a-zA-Z0-9]{8,})$",
      "leave:Pattern:^([a-zA-Z0-9]{8,})$",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/^([a-zA-Z0-9]{8,})$/u"
    ],
    "/^([a-zA-Z0-9]{6,8})$/u": [
      "enter:RegExpLiteral:/^([a-zA-Z0-9]{6,8})$/u",
      "enter:Pattern:^([a-zA-Z0-9]{6,8})$",
      "enter:Alternative:^([a-zA-Z0-9]{6,8})$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:CapturingGroup:([a-zA-Z0-9]{6,8})",
      "enter:Alternative:[a-zA-Z0-9]{6,8}",
      "enter:Quantifier:[a-zA-Z0-9]{6,8}",
      "enter:CharacterClass:[a-zA-Z0-9]",
      "enter:CharacterClassRange:a-z",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:z",
      "leave:Character:z",
      "leave:CharacterClassRange:a-z",
      "enter:CharacterClassRange:A-Z",
      "enter:Character:A",
      "leave:Character:A",
      "enter:Character:Z",
      "leave:Character:Z",
      "leave:CharacterClassRange:A-Z",
      "enter:CharacterClassRange:0-9",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:0-9",
      "leave:CharacterClass:[a-zA-Z0-9]",
      "leave:Quantifier:[a-zA-Z0-9]{6,8}",
      "leave:Alternative:[a-zA-Z0-9]{6,8}",
      "leave:CapturingGroup:([a-zA-Z0-9]{6,8})",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^([a-zA-Z0-9]{6,8})$",
      "leave:Pattern:^([a-zA-Z0-9]{6,8})$",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/^([a-zA-Z0-9]{6,8})$/u"
    ],
    "/^([0-9]{0,8})$/u": [
      "enter:RegExpLiteral:/^([0-9]{0,8})$/u",
      "enter:Pattern:^([0-9]{0,8})$",
      "enter:Alternative:^([0-9]{0,8})$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:CapturingGroup:([0-9]{0,8})",
      "enter:Alternative:[0-9]{0,8}",
      "enter:Quantifier:[0-9]{0,8}",
      "enter:CharacterClass:[0-9]",
      "enter:CharacterClassRange:0-9",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:0-9",
      "leave:CharacterClass:[0-9]",
      "leave:Quantifier:[0-9]{0,8}",
      "leave:Alternative:[0-9]{0,8}",
      "leave:CapturingGroup:([0-9]{0,8})",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^([0-9]{0,8})$",
      "leave:Pattern:^([0-9]{0,8})$",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/^([0-9]{0,8})$/u"
    ],
    "/^[0-9]{8}$/u": [
      "enter:RegExpLiteral:/^[0-9]{8}$/u",
      "enter:Pattern:^[0-9]{8}$",
      "enter:Alternative:^[0-9]{8}$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:Quantifier:[0-9]{8}",
      "enter:CharacterClass:[0-9]",
      "enter:CharacterClassRange:0-9",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:0-9",
      "leave:CharacterClass:[0-9]",
      "leave:Quantifier:[0-9]{8}",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^[0-9]{8}$",
      "leave:Pattern:^[0-9]{8}$",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/^[0-9]{8}$/u"
    ],
    "/^https?:\\/\\//u": [
      "enter:RegExpLiteral:/^https?:\\/\\//u",
      "enter:Pattern:^https?:\\/\\/",
      "enter:Alternative:^https?:\\/\\/",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:Character:h",
      "leave:Character:h",
      "enter:Character:t",
      "leave:Character:t",
      "enter:Character:t",
      "leave:Character:t",
      "enter:Character:p",
      "leave:Character:p",
      "enter:Quantifier:s?",
      "enter:Character:s",
      "leave:Character:s",
      "leave:Quantifier:s?",
      "enter:Character::",
      "leave:Character::",
      "enter:Character:\\/",
      "leave:Character:\\/",
      "enter:Character:\\/",
      "leave:Character:\\/",
      "leave:Alternative:^https?:\\/\\/",
      "leave:Pattern:^https?:\\/\\/",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/^https?:\\/\\//u"
    ],
    "/^\\d{3}-\\d{4}$/u": [
      "enter:RegExpLiteral:/^\\d{3}-\\d{4}$/u",
      "enter:Pattern:^\\d{3}-\\d{4}$",
      "enter:Alternative:^\\d{3}-\\d{4}$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:Quantifier:\\d{3}",
      "enter:CharacterSet:\\d",
      "leave:CharacterSet:\\d",
      "leave:Quantifier:\\d{3}",
      "enter:Character:-",
      "leave:Character:-",
      "enter:Quantifier:\\d{4}",
      "enter:CharacterSet:\\d",
      "leave:CharacterSet:\\d",
      "leave:Quantifier:\\d{4}",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^\\d{3}-\\d{4}$",
      "leave:Pattern:^\\d{3}-\\d{4}$",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/^\\d{3}-\\d{4}$/u"
    ],
    "/^\\d{1,3}(.\\d{1,3}){3}$/u": [
      "enter:RegExpLiteral:/^\\d{1,3}(.\\d{1,3}){3}$/u",
      "enter:Pattern:^\\d{1,3}(.\\d{1,3}){3}$",
      "enter:Alternative:^\\d{1,3}(.\\d{1,3}){3}$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:Quantifier:\\d{1,3}",
      "enter:CharacterSet:\\d",
      "leave:CharacterSet:\\d",
      "leave:Quantifier:\\d{1,3}",
      "enter:Quantifier:(.\\d{1,3}){3}",
      "enter:CapturingGroup:(.\\d{1,3})",
      "enter:Alternative:.\\d{1,3}",
      "enter:CharacterSet:.",
      "leave:CharacterSet:.",
      "enter:Quantifier:\\d{1,3}",
      "enter:CharacterSet:\\d",
      "leave:CharacterSet:\\d",
      "leave:Quantifier:\\d{1,3}",
      "leave:Alternative:.\\d{1,3}",
      "leave:CapturingGroup:(.\\d{1,3})",
      "leave:Quantifier:(.\\d{1,3}){3}",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^\\d{1,3}(.\\d{1,3}){3}$",
      "leave:Pattern:^\\d{1,3}(.\\d{1,3}){3}$",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/^\\d{1,3}(.\\d{1,3}){3}$/u"
    ],
    "/^([1-9][0-9]*|0)(\\.[0-9]+)?$/u": [
      "enter:RegExpLiteral:/^([1-9][0-9]*|0)(\\.[0-9]+)?$/u",
      "enter:Pattern:^([1-9][0-9]*|0)(\\.[0-9]+)?$",
      "enter:Alternative:^([1-9][0-9]*|0)(\\.[0-9]+)?$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:CapturingGroup:([1-9][0-9]*|0)",
      "enter:Alternative:[1-9][0-9]*",
      "enter:CharacterClass:[1-9]",
      "enter:CharacterClassRange:1-9",
      "enter:Character:1",
      "leave:Character:1",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:1-9",
      "leave:CharacterClass:[1-9]",
      "enter:Quantifier:[0-9]*",
      "enter:CharacterClass:[0-9]",
      "enter:CharacterClassRange:0-9",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:0-9",
      "leave:CharacterClass:[0-9]",
      "leave:Quantifier:[0-9]*",
      "leave:Alternative:[1-9][0-9]*",
      "enter:Alternative:0",
      "enter:Character:0",
      "leave:Character:0",
      "leave:Alternative:0",
      "leave:CapturingGroup:([1-9][0-9]*|0)",
      "enter:Quantifier:(\\.[0-9]+)?",
      "enter:CapturingGroup:(\\.[0-9]+)",
      "enter:Alternative:\\.[0-9]+",
      "enter:Character:\\.",
      "leave:Character:\\.",
      "enter:Quantifier:[0-9]+",
      "enter:CharacterClass:[0-9]",
      "enter:CharacterClassRange:0-9",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:0-9",
      "leave:CharacterClass:[0-9]",
      "leave:Quantifier:[0-9]+",
      "leave:Alternative:\\.[0-9]+",
      "leave:CapturingGroup:(\\.[0-9]+)",
      "leave:Quantifier:(\\.[0-9]+)?",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^([1-9][0-9]*|0)(\\.[0-9]+)?$",
      "leave:Pattern:^([1-9][0-9]*|0)(\\.[0-9]+)?$",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/^([1-9][0-9]*|0)(\\.[0-9]+)?$/u"
    ],
    "/^-?([1-9][0-9]*|0)(\\.[0-9]+)?$/u": [
      "enter:RegExpLiteral:/^-?([1-9][0-9]*|0)(\\.[0-9]+)?$/u",
      "enter:Pattern:^-?([1-9][0-9]*|0)(\\.[0-9]+)?$",
      "enter:Alternative:^-?([1-9][0-9]*|0)(\\.[0-9]+)?$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:Quantifier:-?",
      "enter:Character:-",
      "leave:Character:-",
      "leave:Quantifier:-?",
      "enter:CapturingGroup:([1-9][0-9]*|0)",
      "enter:Alternative:[1-9][0-9]*",
      "enter:CharacterClass:[1-9]",
      "enter:CharacterClassRange:1-9",
      "enter:Character:1",
      "leave:Character:1",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:1-9",
      "leave:CharacterClass:[1-9]",
      "enter:Quantifier:[0-9]*",
      "enter:CharacterClass:[0-9]",
      "enter:CharacterClassRange:0-9",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:0-9",
      "leave:CharacterClass:[0-9]",
      "leave:Quantifier:[0-9]*",
      "leave:Alternative:[1-9][0-9]*",
      "enter:Alternative:0",
      "enter:Character:0",
      "leave:Character:0",
      "leave:Alternative:0",
      "leave:CapturingGroup:([1-9][0-9]*|0)",
      "enter:Quantifier:(\\.[0-9]+)?",
      "enter:CapturingGroup:(\\.[0-9]+)",
      "enter:Alternative:\\.[0-9]+",
      "enter:Character:\\.",
      "leave:Character:\\.",
      "enter:Quantifier:[0-9]+",
      "enter:CharacterClass:[0-9]",
      "enter:CharacterClassRange:0-9",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:0-9",
      "leave:CharacterClass:[0-9]",
      "leave:Quantifier:[0-9]+",
      "leave:Alternative:\\.[0-9]+",
      "leave:CapturingGroup:(\\.[0-9]+)",
      "leave:Quantifier:(\\.[0-9]+)?",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^-?([1-9][0-9]*|0)(\\.[0-9]+)?$",
      "leave:Pattern:^-?([1-9][0-9]*|0)(\\.[0-9]+)?$",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/^-?([1-9][0-9]*|0)(\\.[0-9]+)?$/u"
    ],
    "/^[ぁ-んー]*$/u": [
      "enter:RegExpLiteral:/^[ぁ-んー]*$/u",
      "enter:Pattern:^[ぁ-んー]*$",
      "enter:Alternative:^[ぁ-んー]*$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:Quantifier:[ぁ-んー]*",
      "enter:CharacterClass:[ぁ-んー]",
      "enter:CharacterClassRange:ぁ-ん",
      "enter:Character:ぁ",
      "leave:Character:ぁ",
      "enter:Character:ん",
      "leave:Character:ん",
      "leave:CharacterClassRange:ぁ-ん",
      "enter:Character:ー",
      "leave:Character:ー",
      "leave:CharacterClass:[ぁ-んー]",
      "leave:Quantifier:[ぁ-んー]*",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^[ぁ-んー]*$",
      "leave:Pattern:^[ぁ-んー]*$",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/^[ぁ-んー]*$/u"
    ],
    "/^[ァ-ンヴー]*$/u": [
      "enter:RegExpLiteral:/^[ァ-ンヴー]*$/u",
      "enter:Pattern:^[ァ-ンヴー]*$",
      "enter:Alternative:^[ァ-ンヴー]*$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:Quantifier:[ァ-ンヴー]*",
      "enter:CharacterClass:[ァ-ンヴー]",
      "enter:CharacterClassRange:ァ-ン",
      "enter:Character:ァ",
      "leave:Character:ァ",
      "enter:Character:ン",
      "leave:Character:ン",
      "leave:CharacterClassRange:ァ-ン",
      "enter:Character:ヴ",
      "leave:Character:ヴ",
      "enter:Character:ー",
      "leave:Character:ー",
      "leave:CharacterClass:[ァ-ンヴー]",
      "leave:Quantifier:[ァ-ンヴー]*",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^[ァ-ンヴー]*$",
      "leave:Pattern:^[ァ-ンヴー]*$",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/^[ァ-ンヴー]*$/u"
    ],
    "/^[ｧ-ﾝﾞﾟ\\-]*$/u": [
      "enter:RegExpLiteral:/^[ｧ-ﾝﾞﾟ\\-]*$/u",
      "enter:Pattern:^[ｧ-ﾝﾞﾟ\\-]*$",
      "enter:Alternative:^[ｧ-ﾝﾞﾟ\\-]*$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:Quantifier:[ｧ-ﾝﾞﾟ\\-]*",
      "enter:CharacterClass:[ｧ-ﾝﾞﾟ\\-]",
      "enter:CharacterClassRange:ｧ-ﾝ",
      "enter:Character:ｧ",
      "leave:Character:ｧ",
      "enter:Character:ﾝ",
      "leave:Character:ﾝ",
      "leave:CharacterClassRange:ｧ-ﾝ",
      "enter:Character:ﾞ",
      "leave:Character:ﾞ",
      "enter:Character:ﾟ",
      "leave:Character:ﾟ",
      "enter:Character:\\-",
      "leave:Character:\\-",
      "leave:CharacterClass:[ｧ-ﾝﾞﾟ\\-]",
      "leave:Quantifier:[ｧ-ﾝﾞﾟ\\-]*",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^[ｧ-ﾝﾞﾟ\\-]*$",
      "leave:Pattern:^[ｧ-ﾝﾞﾟ\\-]*$",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/^[ｧ-ﾝﾞﾟ\\-]*$/u"
    ],
    "/^[^\\x20-\\x7e]*$/u": [
      "enter:RegExpLiteral:/^[^\\x20-\\x7e]*$/u",
      "enter:Pattern:^[^\\x20-\\x7e]*$",
      "enter:Alternative:^[^\\x20-\\x7e]*$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:Quantifier:[^\\x20-\\x7e]*",
      "enter:CharacterClass:[^\\x20-\\x7e]",
      "enter:CharacterClassRange:\\x20-\\x7e",
      "enter:Character:\\x20",
      "leave:Character:\\x20",
      "enter:Character:\\x7e",
      "leave:Character:\\x7e",
      "leave:CharacterClassRange:\\x20-\\x7e",
      "leave:CharacterClass:[^\\x20-\\x7e]",
      "leave:Quantifier:[^\\x20-\\x7e]*",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^[^\\x20-\\x7e]*$",
      "leave:Pattern:^[^\\x20-\\x7e]*$",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/^[^\\x20-\\x7e]*$/u"
    ],
    "/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/u": [
      "enter:RegExpLiteral:/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/u",
      "enter:Pattern:^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$",
      "enter:Alternative:^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:Quantifier:[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+",
      "enter:CharacterClass:[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]",
      "enter:CharacterClassRange:a-z",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:z",
      "leave:Character:z",
      "leave:CharacterClassRange:a-z",
      "enter:CharacterClassRange:A-Z",
      "enter:Character:A",
      "leave:Character:A",
      "enter:Character:Z",
      "leave:Character:Z",
      "leave:CharacterClassRange:A-Z",
      "enter:CharacterClassRange:0-9",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:0-9",
      "enter:Character:.",
      "leave:Character:.",
      "enter:Character:!",
      "leave:Character:!",
      "enter:Character:#",
      "leave:Character:#",
      "enter:Character:$",
      "leave:Character:$",
      "enter:Character:%",
      "leave:Character:%",
      "enter:Character:&",
      "leave:Character:&",
      "enter:Character:'",
      "leave:Character:'",
      "enter:Character:*",
      "leave:Character:*",
      "enter:Character:+",
      "leave:Character:+",
      "enter:Character:/",
      "leave:Character:/",
      "enter:Character:=",
      "leave:Character:=",
      "enter:Character:?",
      "leave:Character:?",
      "enter:Character:^",
      "leave:Character:^",
      "enter:Character:_",
      "leave:Character:_",
      "enter:Character:`",
      "leave:Character:`",
      "enter:Character:{",
      "leave:Character:{",
      "enter:Character:|",
      "leave:Character:|",
      "enter:Character:}",
      "leave:Character:}",
      "enter:Character:~",
      "leave:Character:~",
      "enter:Character:-",
      "leave:Character:-",
      "leave:CharacterClass:[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]",
      "leave:Quantifier:[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+",
      "enter:Character:@",
      "leave:Character:@",
      "enter:Quantifier:[a-zA-Z0-9-]+",
      "enter:CharacterClass:[a-zA-Z0-9-]",
      "enter:CharacterClassRange:a-z",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:z",
      "leave:Character:z",
      "leave:CharacterClassRange:a-z",
      "enter:CharacterClassRange:A-Z",
      "enter:Character:A",
      "leave:Character:A",
      "enter:Character:Z",
      "leave:Character:Z",
      "leave:CharacterClassRange:A-Z",
      "enter:CharacterClassRange:0-9",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:0-9",
      "enter:Character:-",
      "leave:Character:-",
      "leave:CharacterClass:[a-zA-Z0-9-]",
      "leave:Quantifier:[a-zA-Z0-9-]+",
      "enter:Quantifier:(?:\\.[a-zA-Z0-9-]+)*",
      "enter:Group:(?:\\.[a-zA-Z0-9-]+)",
      "enter:Alternative:\\.[a-zA-Z0-9-]+",
      "enter:Character:\\.",
      "leave:Character:\\.",
      "enter:Quantifier:[a-zA-Z0-9-]+",
      "enter:CharacterClass:[a-zA-Z0-9-]",
      "enter:CharacterClassRange:a-z",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:z",
      "leave:Character:z",
      "leave:CharacterClassRange:a-z",
      "enter:CharacterClassRange:A-Z",
      "enter:Character:A",
      "leave:Character:A",
      "enter:Character:Z",
      "leave:Character:Z",
      "leave:CharacterClassRange:A-Z",
      "enter:CharacterClassRange:0-9",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:9",
      "leave:Character:9",
      "leave:CharacterClassRange:0-9",
      "enter:Character:-",
      "leave:Character:-",
      "leave:CharacterClass:[a-zA-Z0-9-]",
      "leave:Quantifier:[a-zA-Z0-9-]+",
      "leave:Alternative:\\.[a-zA-Z0-9-]+",
      "leave:Group:(?:\\.[a-zA-Z0-9-]+)",
      "leave:Quantifier:(?:\\.[a-zA-Z0-9-]+)*",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$",
      "leave:Pattern:^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/u"
    ],
    "/^((4\\d{3})|(5[1-5]\\d{2})|(6011))([- ])?\\d{4}([- ])?\\d{4}([- ])?\\d{4}|3[4,7]\\d{13}$/u": [
      "enter:RegExpLiteral:/^((4\\d{3})|(5[1-5]\\d{2})|(6011))([- ])?\\d{4}([- ])?\\d{4}([- ])?\\d{4}|3[4,7]\\d{13}$/u",
      "enter:Pattern:^((4\\d{3})|(5[1-5]\\d{2})|(6011))([- ])?\\d{4}([- ])?\\d{4}([- ])?\\d{4}|3[4,7]\\d{13}$",
      "enter:Alternative:^((4\\d{3})|(5[1-5]\\d{2})|(6011))([- ])?\\d{4}([- ])?\\d{4}([- ])?\\d{4}",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:CapturingGroup:((4\\d{3})|(5[1-5]\\d{2})|(6011))",
      "enter:Alternative:(4\\d{3})",
      "enter:CapturingGroup:(4\\d{3})",
      "enter:Alternative:4\\d{3}",
      "enter:Character:4",
      "leave:Character:4",
      "enter:Quantifier:\\d{3}",
      "enter:CharacterSet:\\d",
      "leave:CharacterSet:\\d",
      "leave:Quantifier:\\d{3}",
      "leave:Alternative:4\\d{3}",
      "leave:CapturingGroup:(4\\d{3})",
      "leave:Alternative:(4\\d{3})",
      "enter:Alternative:(5[1-5]\\d{2})",
      "enter:CapturingGroup:(5[1-5]\\d{2})",
      "enter:Alternative:5[1-5]\\d{2}",
      "enter:Character:5",
      "leave:Character:5",
      "enter:CharacterClass:[1-5]",
      "enter:CharacterClassRange:1-5",
      "enter:Character:1",
      "leave:Character:1",
      "enter:Character:5",
      "leave:Character:5",
      "leave:CharacterClassRange:1-5",
      "leave:CharacterClass:[1-5]",
      "enter:Quantifier:\\d{2}",
      "enter:CharacterSet:\\d",
      "leave:CharacterSet:\\d",
      "leave:Quantifier:\\d{2}",
      "leave:Alternative:5[1-5]\\d{2}",
      "leave:CapturingGroup:(5[1-5]\\d{2})",
      "leave:Alternative:(5[1-5]\\d{2})",
      "enter:Alternative:(6011)",
      "enter:CapturingGroup:(6011)",
      "enter:Alternative:6011",
      "enter:Character:6",
      "leave:Character:6",
      "enter:Character:0",
      "leave:Character:0",
      "enter:Character:1",
      "leave:Character:1",
      "enter:Character:1",
      "leave:Character:1",
      "leave:Alternative:6011",
      "leave:CapturingGroup:(6011)",
      "leave:Alternative:(6011)",
      "leave:CapturingGroup:((4\\d{3})|(5[1-5]\\d{2})|(6011))",
      "enter:Quantifier:([- ])?",
      "enter:CapturingGroup:([- ])",
      "enter:Alternative:[- ]",
      "enter:CharacterClass:[- ]",
      "enter:Character:-",
      "leave:Character:-",
      "enter:Character: ",
      "leave:Character: ",
      "leave:CharacterClass:[- ]",
      "leave:Alternative:[- ]",
      "leave:CapturingGroup:([- ])",
      "leave:Quantifier:([- ])?",
      "enter:Quantifier:\\d{4}",
      "enter:CharacterSet:\\d",
      "leave:CharacterSet:\\d",
      "leave:Quantifier:\\d{4}",
      "enter:Quantifier:([- ])?",
      "enter:CapturingGroup:([- ])",
      "enter:Alternative:[- ]",
      "enter:CharacterClass:[- ]",
      "enter:Character:-",
      "leave:Character:-",
      "enter:Character: ",
      "leave:Character: ",
      "leave:CharacterClass:[- ]",
      "leave:Alternative:[- ]",
      "leave:CapturingGroup:([- ])",
      "leave:Quantifier:([- ])?",
      "enter:Quantifier:\\d{4}",
      "enter:CharacterSet:\\d",
      "leave:CharacterSet:\\d",
      "leave:Quantifier:\\d{4}",
      "enter:Quantifier:([- ])?",
      "enter:CapturingGroup:([- ])",
      "enter:Alternative:[- ]",
      "enter:CharacterClass:[- ]",
      "enter:Character:-",
      "leave:Character:-",
      "enter:Character: ",
      "leave:Character: ",
      "leave:CharacterClass:[- ]",
      "leave:Alternative:[- ]",
      "leave:CapturingGroup:([- ])",
      "leave:Quantifier:([- ])?",
      "enter:Quantifier:\\d{4}",
      "enter:CharacterSet:\\d",
      "leave:CharacterSet:\\d",
      "leave:Quantifier:\\d{4}",
      "leave:Alternative:^((4\\d{3})|(5[1-5]\\d{2})|(6011))([- ])?\\d{4}([- ])?\\d{4}([- ])?\\d{4}",
      "enter:Alternative:3[4,7]\\d{13}$",
      "enter:Character:3",
      "leave:Character:3",
      "enter:CharacterClass:[4,7]",
      "enter:Character:4",
      "leave:Character:4",
      "enter:Character:,",
      "leave:Character:,",
      "enter:Character:7",
      "leave:Character:7",
      "leave:CharacterClass:[4,7]",
      "enter:Quantifier:\\d{13}",
      "enter:CharacterSet:\\d",
      "leave:CharacterSet:\\d",
      "leave:Quantifier:\\d{13}",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:3[4,7]\\d{13}$",
      "leave:Pattern:^((4\\d{3})|(5[1-5]\\d{2})|(6011))([- ])?\\d{4}([- ])?\\d{4}([- ])?\\d{4}|3[4,7]\\d{13}$",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/^((4\\d{3})|(5[1-5]\\d{2})|(6011))([- ])?\\d{4}([- ])?\\d{4}([- ])?\\d{4}|3[4,7]\\d{13}$/u"
    ],
    "/^\\s*|\\s*$/u": [
      "enter:RegExpLiteral:/^\\s*|\\s*$/u",
      "enter:Pattern:^\\s*|\\s*$",
      "enter:Alternative:^\\s*",
      "enter:Assertion:^",
      "leave:Assertion:^",
      "enter:Quantifier:\\s*",
      "enter:CharacterSet:\\s",
      "leave:CharacterSet:\\s",
      "leave:Quantifier:\\s*",
      "leave:Alternative:^\\s*",
      "enter:Alternative:\\s*$",
      "enter:Quantifier:\\s*",
      "enter:CharacterSet:\\s",
      "leave:CharacterSet:\\s",
      "leave:Quantifier:\\s*",
      "enter:Assertion:$",
      "leave:Assertion:$",
      "leave:Alternative:\\s*$",
      "leave:Pattern:^\\s*|\\s*$",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/^\\s*|\\s*$/u"
    ],
    "/(?<=a)/": [
      "enter:RegExpLiteral:/(?<=a)/",
      "enter:Pattern:(?<=a)",
      "enter:Alternative:(?<=a)",
      "enter:Assertion:(?<=a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:Assertion:(?<=a)",
      "leave:Alternative:(?<=a)",
      "leave:Pattern:(?<=a)",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/(?<=a)/"
    ],
    "/(?<=a)/u": [
      "enter:RegExpLiteral:/(?<=a)/u",
      "enter:Pattern:(?<=a)",
      "enter:Alternative:(?<=a)",
      "enter:Assertion:(?<=a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:Assertion:(?<=a)",
      "leave:Alternative:(?<=a)",
      "leave:Pattern:(?<=a)",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/(?<=a)/u"
    ],
    "/(?<!a)/": [
      "enter:RegExpLiteral:/(?<!a)/",
      "enter:Pattern:(?<!a)",
      "enter:Alternative:(?<!a)",
      "enter:Assertion:(?<!a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:Assertion:(?<!a)",
      "leave:Alternative:(?<!a)",
      "leave:Pattern:(?<!a)",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/(?<!a)/"
    ],
    "/(?<!a)/u": [
      "enter:RegExpLiteral:/(?<!a)/u",
      "enter:Pattern:(?<!a)",
      "enter:Alternative:(?<!a)",
      "enter:Assertion:(?<!a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:Assertion:(?<!a)",
      "leave:Alternative:(?<!a)",
      "leave:Pattern:(?<!a)",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/(?<!a)/u"
    ],
    "/(?<=(?<a>\\w){3})f/u": [
      "enter:RegExpLiteral:/(?<=(?<a>\\w){3})f/u",
      "enter:Pattern:(?<=(?<a>\\w){3})f",
      "enter:Alternative:(?<=(?<a>\\w){3})f",
      "enter:Assertion:(?<=(?<a>\\w){3})",
      "enter:Alternative:(?<a>\\w){3}",
      "enter:Quantifier:(?<a>\\w){3}",
      "enter:CapturingGroup:(?<a>\\w)",
      "enter:Alternative:\\w",
      "enter:CharacterSet:\\w",
      "leave:CharacterSet:\\w",
      "leave:Alternative:\\w",
      "leave:CapturingGroup:(?<a>\\w)",
      "leave:Quantifier:(?<a>\\w){3}",
      "leave:Alternative:(?<a>\\w){3}",
      "leave:Assertion:(?<=(?<a>\\w){3})",
      "enter:Character:f",
      "leave:Character:f",
      "leave:Alternative:(?<=(?<a>\\w){3})f",
      "leave:Pattern:(?<=(?<a>\\w){3})f",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/(?<=(?<a>\\w){3})f/u"
    ],
    "/((?<=\\w{3}))f/u": [
      "enter:RegExpLiteral:/((?<=\\w{3}))f/u",
      "enter:Pattern:((?<=\\w{3}))f",
      "enter:Alternative:((?<=\\w{3}))f",
      "enter:CapturingGroup:((?<=\\w{3}))",
      "enter:Alternative:(?<=\\w{3})",
      "enter:Assertion:(?<=\\w{3})",
      "enter:Alternative:\\w{3}",
      "enter:Quantifier:\\w{3}",
      "enter:CharacterSet:\\w",
      "leave:CharacterSet:\\w",
      "leave:Quantifier:\\w{3}",
      "leave:Alternative:\\w{3}",
      "leave:Assertion:(?<=\\w{3})",
      "leave:Alternative:(?<=\\w{3})",
      "leave:CapturingGroup:((?<=\\w{3}))",
      "enter:Character:f",
      "leave:Character:f",
      "leave:Alternative:((?<=\\w{3}))f",
      "leave:Pattern:((?<=\\w{3}))f",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/((?<=\\w{3}))f/u"
    ],
    "/(?<a>(?<=\\w{3}))f/u": [
      "enter:RegExpLiteral:/(?<a>(?<=\\w{3}))f/u",
      "enter:Pattern:(?<a>(?<=\\w{3}))f",
      "enter:Alternative:(?<a>(?<=\\w{3}))f",
      "enter:CapturingGroup:(?<a>(?<=\\w{3}))",
      "enter:Alternative:(?<=\\w{3})",
      "enter:Assertion:(?<=\\w{3})",
      "enter:Alternative:\\w{3}",
      "enter:Quantifier:\\w{3}",
      "enter:CharacterSet:\\w",
      "leave:CharacterSet:\\w",
      "leave:Quantifier:\\w{3}",
      "leave:Alternative:\\w{3}",
      "leave:Assertion:(?<=\\w{3})",
      "leave:Alternative:(?<=\\w{3})",
      "leave:CapturingGroup:(?<a>(?<=\\w{3}))",
      "enter:Character:f",
      "leave:Character:f",
      "leave:Alternative:(?<a>(?<=\\w{3}))f",
      "leave:Pattern:(?<a>(?<=\\w{3}))f",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/(?<a>(?<=\\w{3}))f/u"
    ],
    "/(?<!(?<a>\\d){3})f/u": [
      "enter:RegExpLiteral:/(?<!(?<a>\\d){3})f/u",
      "enter:Pattern:(?<!(?<a>\\d){3})f",
      "enter:Alternative:(?<!(?<a>\\d){3})f",
      "enter:Assertion:(?<!(?<a>\\d){3})",
      "enter:Alternative:(?<a>\\d){3}",
      "enter:Quantifier:(?<a>\\d){3}",
      "enter:CapturingGroup:(?<a>\\d)",
      "enter:Alternative:\\d",
      "enter:CharacterSet:\\d",
      "leave:CharacterSet:\\d",
      "leave:Alternative:\\d",
      "leave:CapturingGroup:(?<a>\\d)",
      "leave:Quantifier:(?<a>\\d){3}",
      "leave:Alternative:(?<a>\\d){3}",
      "leave:Assertion:(?<!(?<a>\\d){3})",
      "enter:Character:f",
      "leave:Character:f",
      "leave:Alternative:(?<!(?<a>\\d){3})f",
      "leave:Pattern:(?<!(?<a>\\d){3})f",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/(?<!(?<a>\\d){3})f/u"
    ],
    "/(?<!(?<a>\\D){3})f|f/u": [
      "enter:RegExpLiteral:/(?<!(?<a>\\D){3})f|f/u",
      "enter:Pattern:(?<!(?<a>\\D){3})f|f",
      "enter:Alternative:(?<!(?<a>\\D){3})f",
      "enter:Assertion:(?<!(?<a>\\D){3})",
      "enter:Alternative:(?<a>\\D){3}",
      "enter:Quantifier:(?<a>\\D){3}",
      "enter:CapturingGroup:(?<a>\\D)",
      "enter:Alternative:\\D",
      "enter:CharacterSet:\\D",
      "leave:CharacterSet:\\D",
      "leave:Alternative:\\D",
      "leave:CapturingGroup:(?<a>\\D)",
      "leave:Quantifier:(?<a>\\D){3}",
      "leave:Alternative:(?<a>\\D){3}",
      "leave:Assertion:(?<!(?<a>\\D){3})",
      "enter:Character:f",
      "leave:Character:f",
      "leave:Alternative:(?<!(?<a>\\D){3})f",
      "enter:Alternative:f",
      "enter:Character:f",
      "leave:Character:f",
      "leave:Alternative:f",
      "leave:Pattern:(?<!(?<a>\\D){3})f|f",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/(?<!(?<a>\\D){3})f|f/u"
    ],
    "/(?<a>(?<!\\D{3}))f|f/u": [
      "enter:RegExpLiteral:/(?<a>(?<!\\D{3}))f|f/u",
      "enter:Pattern:(?<a>(?<!\\D{3}))f|f",
      "enter:Alternative:(?<a>(?<!\\D{3}))f",
      "enter:CapturingGroup:(?<a>(?<!\\D{3}))",
      "enter:Alternative:(?<!\\D{3})",
      "enter:Assertion:(?<!\\D{3})",
      "enter:Alternative:\\D{3}",
      "enter:Quantifier:\\D{3}",
      "enter:CharacterSet:\\D",
      "leave:CharacterSet:\\D",
      "leave:Quantifier:\\D{3}",
      "leave:Alternative:\\D{3}",
      "leave:Assertion:(?<!\\D{3})",
      "leave:Alternative:(?<!\\D{3})",
      "leave:CapturingGroup:(?<a>(?<!\\D{3}))",
      "enter:Character:f",
      "leave:Character:f",
      "leave:Alternative:(?<a>(?<!\\D{3}))f",
      "enter:Alternative:f",
      "enter:Character:f",
      "leave:Character:f",
      "leave:Alternative:f",
      "leave:Pattern:(?<a>(?<!\\D{3}))f|f",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/(?<a>(?<!\\D{3}))f|f/u"
    ],
    "/(?<=(?<a>\\w){3})f/": [
      "enter:RegExpLiteral:/(?<=(?<a>\\w){3})f/",
      "enter:Pattern:(?<=(?<a>\\w){3})f",
      "enter:Alternative:(?<=(?<a>\\w){3})f",
      "enter:Assertion:(?<=(?<a>\\w){3})",
      "enter:Alternative:(?<a>\\w){3}",
      "enter:Quantifier:(?<a>\\w){3}",
      "enter:CapturingGroup:(?<a>\\w)",
      "enter:Alternative:\\w",
      "enter:CharacterSet:\\w",
      "leave:CharacterSet:\\w",
      "leave:Alternative:\\w",
      "leave:CapturingGroup:(?<a>\\w)",
      "leave:Quantifier:(?<a>\\w){3}",
      "leave:Alternative:(?<a>\\w){3}",
      "leave:Assertion:(?<=(?<a>\\w){3})",
      "enter:Character:f",
      "leave:Character:f",
      "leave:Alternative:(?<=(?<a>\\w){3})f",
      "leave:Pattern:(?<=(?<a>\\w){3})f",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/(?<=(?<a>\\w){3})f/"
    ],
    "/((?<=\\w{3}))f/": [
      "enter:RegExpLiteral:/((?<=\\w{3}))f/",
      "enter:Pattern:((?<=\\w{3}))f",
      "enter:Alternative:((?<=\\w{3}))f",
      "enter:CapturingGroup:((?<=\\w{3}))",
      "enter:Alternative:(?<=\\w{3})",
      "enter:Assertion:(?<=\\w{3})",
      "enter:Alternative:\\w{3}",
      "enter:Quantifier:\\w{3}",
      "enter:CharacterSet:\\w",
      "leave:CharacterSet:\\w",
      "leave:Quantifier:\\w{3}",
      "leave:Alternative:\\w{3}",
      "leave:Assertion:(?<=\\w{3})",
      "leave:Alternative:(?<=\\w{3})",
      "leave:CapturingGroup:((?<=\\w{3}))",
      "enter:Character:f",
      "leave:Character:f",
      "leave:Alternative:((?<=\\w{3}))f",
      "leave:Pattern:((?<=\\w{3}))f",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/((?<=\\w{3}))f/"
    ],
    "/(?<a>(?<=\\w{3}))f/": [
      "enter:RegExpLiteral:/(?<a>(?<=\\w{3}))f/",
      "enter:Pattern:(?<a>(?<=\\w{3}))f",
      "enter:Alternative:(?<a>(?<=\\w{3}))f",
      "enter:CapturingGroup:(?<a>(?<=\\w{3}))",
      "enter:Alternative:(?<=\\w{3})",
      "enter:Assertion:(?<=\\w{3})",
      "enter:Alternative:\\w{3}",
      "enter:Quantifier:\\w{3}",
      "enter:CharacterSet:\\w",
      "leave:CharacterSet:\\w",
      "leave:Quantifier:\\w{3}",
      "leave:Alternative:\\w{3}",
      "leave:Assertion:(?<=\\w{3})",
      "leave:Alternative:(?<=\\w{3})",
      "leave:CapturingGroup:(?<a>(?<=\\w{3}))",
      "enter:Character:f",
      "leave:Character:f",
      "leave:Alternative:(?<a>(?<=\\w{3}))f",
      "leave:Pattern:(?<a>(?<=\\w{3}))f",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/(?<a>(?<=\\w{3}))f/"
    ],
    "/(?<!(?<a>\\d){3})f/": [
      "enter:RegExpLiteral:/(?<!(?<a>\\d){3})f/",
      "enter:Pattern:(?<!(?<a>\\d){3})f",
      "enter:Alternative:(?<!(?<a>\\d){3})f",
      "enter:Assertion:(?<!(?<a>\\d){3})",
      "enter:Alternative:(?<a>\\d){3}",
      "enter:Quantifier:(?<a>\\d){3}",
      "enter:CapturingGroup:(?<a>\\d)",
      "enter:Alternative:\\d",
      "enter:CharacterSet:\\d",
      "leave:CharacterSet:\\d",
      "leave:Alternative:\\d",
      "leave:CapturingGroup:(?<a>\\d)",
      "leave:Quantifier:(?<a>\\d){3}",
      "leave:Alternative:(?<a>\\d){3}",
      "leave:Assertion:(?<!(?<a>\\d){3})",
      "enter:Character:f",
      "leave:Character:f",
      "leave:Alternative:(?<!(?<a>\\d){3})f",
      "leave:Pattern:(?<!(?<a>\\d){3})f",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/(?<!(?<a>\\d){3})f/"
    ],
    "/(?<a>(?<!\\D{3}))f|f/": [
      "enter:RegExpLiteral:/(?<a>(?<!\\D{3}))f|f/",
      "enter:Pattern:(?<a>(?<!\\D{3}))f|f",
      "enter:Alternative:(?<a>(?<!\\D{3}))f",
      "enter:CapturingGroup:(?<a>(?<!\\D{3}))",
      "enter:Alternative:(?<!\\D{3})",
      "enter:Assertion:(?<!\\D{3})",
      "enter:Alternative:\\D{3}",
      "enter:Quantifier:\\D{3}",
      "enter:CharacterSet:\\D",
      "leave:CharacterSet:\\D",
      "leave:Quantifier:\\D{3}",
      "leave:Alternative:\\D{3}",
      "leave:Assertion:(?<!\\D{3})",
      "leave:Alternative:(?<!\\D{3})",
      "leave:CapturingGroup:(?<a>(?<!\\D{3}))",
      "enter:Character:f",
      "leave:Character:f",
      "leave:Alternative:(?<a>(?<!\\D{3}))f",
      "enter:Alternative:f",
      "enter:Character:f",
      "leave:Character:f",
      "leave:Alternative:f",
      "leave:Pattern:(?<a>(?<!\\D{3}))f|f",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/(?<a>(?<!\\D{3}))f|f/"
    ],
    "/(?<=(?<fst>.)|(?<snd>.))/u": [
      "enter:RegExpLiteral:/(?<=(?<fst>.)|(?<snd>.))/u",
      "enter:Pattern:(?<=(?<fst>.)|(?<snd>.))",
      "enter:Alternative:(?<=(?<fst>.)|(?<snd>.))",
      "enter:Assertion:(?<=(?<fst>.)|(?<snd>.))",
      "enter:Alternative:(?<fst>.)",
      "enter:CapturingGroup:(?<fst>.)",
      "enter:Alternative:.",
      "enter:CharacterSet:.",
      "leave:CharacterSet:.",
      "leave:Alternative:.",
      "leave:CapturingGroup:(?<fst>.)",
      "leave:Alternative:(?<fst>.)",
      "enter:Alternative:(?<snd>.)",
      "enter:CapturingGroup:(?<snd>.)",
      "enter:Alternative:.",
      "enter:CharacterSet:.",
      "leave:CharacterSet:.",
      "leave:Alternative:.",
      "leave:CapturingGroup:(?<snd>.)",
      "leave:Alternative:(?<snd>.)",
      "leave:Assertion:(?<=(?<fst>.)|(?<snd>.))",
      "leave:Alternative:(?<=(?<fst>.)|(?<snd>.))",
      "leave:Pattern:(?<=(?<fst>.)|(?<snd>.))",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/(?<=(?<fst>.)|(?<snd>.))/u"
    ],
    "/(a)/": [
      "enter:RegExpLiteral:/(a)/",
      "enter:Pattern:(a)",
      "enter:Alternative:(a)",
      "enter:CapturingGroup:(a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(a)",
      "leave:Alternative:(a)",
      "leave:Pattern:(a)",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/(a)/"
    ],
    "/(?<a>)/": [
      "enter:RegExpLiteral:/(?<a>)/",
      "enter:Pattern:(?<a>)",
      "enter:Alternative:(?<a>)",
      "enter:CapturingGroup:(?<a>)",
      "enter:Alternative:",
      "leave:Alternative:",
      "leave:CapturingGroup:(?<a>)",
      "leave:Alternative:(?<a>)",
      "leave:Pattern:(?<a>)",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/(?<a>)/"
    ],
    "/\\k/": [
      "enter:RegExpLiteral:/\\k/",
      "enter:Pattern:\\k",
      "enter:Alternative:\\k",
      "enter:Character:\\k",
      "leave:Character:\\k",
      "leave:Alternative:\\k",
      "leave:Pattern:\\k",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\k/"
    ],
    "/\\k<a>/": [
      "enter:RegExpLiteral:/\\k<a>/",
      "enter:Pattern:\\k<a>",
      "enter:Alternative:\\k<a>",
      "enter:Character:\\k",
      "leave:Character:\\k",
      "enter:Character:<",
      "leave:Character:<",
      "enter:Character:a",
      "leave:Character:a",
      "enter:Character:>",
      "leave:Character:>",
      "leave:Alternative:\\k<a>",
      "leave:Pattern:\\k<a>",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\k<a>/"
    ],
    "/(?<a>a)\\k<a>/": [
      "enter:RegExpLiteral:/(?<a>a)\\k<a>/",
      "enter:Pattern:(?<a>a)\\k<a>",
      "enter:Alternative:(?<a>a)\\k<a>",
      "enter:CapturingGroup:(?<a>a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(?<a>a)",
      "enter:Backreference:\\k<a>",
      "leave:Backreference:\\k<a>",
      "leave:Alternative:(?<a>a)\\k<a>",
      "leave:Pattern:(?<a>a)\\k<a>",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/(?<a>a)\\k<a>/"
    ],
    "/(?<a>a)\\k<a>/u": [
      "enter:RegExpLiteral:/(?<a>a)\\k<a>/u",
      "enter:Pattern:(?<a>a)\\k<a>",
      "enter:Alternative:(?<a>a)\\k<a>",
      "enter:CapturingGroup:(?<a>a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(?<a>a)",
      "enter:Backreference:\\k<a>",
      "leave:Backreference:\\k<a>",
      "leave:Alternative:(?<a>a)\\k<a>",
      "leave:Pattern:(?<a>a)\\k<a>",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/(?<a>a)\\k<a>/u"
    ],
    "/(?<a>a)\\1/": [
      "enter:RegExpLiteral:/(?<a>a)\\1/",
      "enter:Pattern:(?<a>a)\\1",
      "enter:Alternative:(?<a>a)\\1",
      "enter:CapturingGroup:(?<a>a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(?<a>a)",
      "enter:Backreference:\\1",
      "leave:Backreference:\\1",
      "leave:Alternative:(?<a>a)\\1",
      "leave:Pattern:(?<a>a)\\1",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/(?<a>a)\\1/"
    ],
    "/(?<a>a)\\1/u": [
      "enter:RegExpLiteral:/(?<a>a)\\1/u",
      "enter:Pattern:(?<a>a)\\1",
      "enter:Alternative:(?<a>a)\\1",
      "enter:CapturingGroup:(?<a>a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(?<a>a)",
      "enter:Backreference:\\1",
      "leave:Backreference:\\1",
      "leave:Alternative:(?<a>a)\\1",
      "leave:Pattern:(?<a>a)\\1",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/(?<a>a)\\1/u"
    ],
    "/(?<a>a)\\2/": [
      "enter:RegExpLiteral:/(?<a>a)\\2/",
      "enter:Pattern:(?<a>a)\\2",
      "enter:Alternative:(?<a>a)\\2",
      "enter:CapturingGroup:(?<a>a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(?<a>a)",
      "enter:Character:\\2",
      "leave:Character:\\2",
      "leave:Alternative:(?<a>a)\\2",
      "leave:Pattern:(?<a>a)\\2",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/(?<a>a)\\2/"
    ],
    "/(?<a>a)(?<b>a)/": [
      "enter:RegExpLiteral:/(?<a>a)(?<b>a)/",
      "enter:Pattern:(?<a>a)(?<b>a)",
      "enter:Alternative:(?<a>a)(?<b>a)",
      "enter:CapturingGroup:(?<a>a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(?<a>a)",
      "enter:CapturingGroup:(?<b>a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(?<b>a)",
      "leave:Alternative:(?<a>a)(?<b>a)",
      "leave:Pattern:(?<a>a)(?<b>a)",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/(?<a>a)(?<b>a)/"
    ],
    "/(?<a>a)(?<b>a)/u": [
      "enter:RegExpLiteral:/(?<a>a)(?<b>a)/u",
      "enter:Pattern:(?<a>a)(?<b>a)",
      "enter:Alternative:(?<a>a)(?<b>a)",
      "enter:CapturingGroup:(?<a>a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(?<a>a)",
      "enter:CapturingGroup:(?<b>a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(?<b>a)",
      "leave:Alternative:(?<a>a)(?<b>a)",
      "leave:Pattern:(?<a>a)(?<b>a)",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/(?<a>a)(?<b>a)/u"
    ],
    "/\\k<a>(?<a>a)/": [
      "enter:RegExpLiteral:/\\k<a>(?<a>a)/",
      "enter:Pattern:\\k<a>(?<a>a)",
      "enter:Alternative:\\k<a>(?<a>a)",
      "enter:Backreference:\\k<a>",
      "leave:Backreference:\\k<a>",
      "enter:CapturingGroup:(?<a>a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(?<a>a)",
      "leave:Alternative:\\k<a>(?<a>a)",
      "leave:Pattern:\\k<a>(?<a>a)",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\k<a>(?<a>a)/"
    ],
    "/\\k<a>(?<a>a)/u": [
      "enter:RegExpLiteral:/\\k<a>(?<a>a)/u",
      "enter:Pattern:\\k<a>(?<a>a)",
      "enter:Alternative:\\k<a>(?<a>a)",
      "enter:Backreference:\\k<a>",
      "leave:Backreference:\\k<a>",
      "enter:CapturingGroup:(?<a>a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(?<a>a)",
      "leave:Alternative:\\k<a>(?<a>a)",
      "leave:Pattern:\\k<a>(?<a>a)",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\k<a>(?<a>a)/u"
    ],
    "/\\1(?<a>a)/": [
      "enter:RegExpLiteral:/\\1(?<a>a)/",
      "enter:Pattern:\\1(?<a>a)",
      "enter:Alternative:\\1(?<a>a)",
      "enter:Backreference:\\1",
      "leave:Backreference:\\1",
      "enter:CapturingGroup:(?<a>a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(?<a>a)",
      "leave:Alternative:\\1(?<a>a)",
      "leave:Pattern:\\1(?<a>a)",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\1(?<a>a)/"
    ],
    "/\\1(?<a>a)/u": [
      "enter:RegExpLiteral:/\\1(?<a>a)/u",
      "enter:Pattern:\\1(?<a>a)",
      "enter:Alternative:\\1(?<a>a)",
      "enter:Backreference:\\1",
      "leave:Backreference:\\1",
      "enter:CapturingGroup:(?<a>a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(?<a>a)",
      "leave:Alternative:\\1(?<a>a)",
      "leave:Pattern:\\1(?<a>a)",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\1(?<a>a)/u"
    ],
    "/(?<$abc>a)\\k<$abc>/u": [
      "enter:RegExpLiteral:/(?<$abc>a)\\k<$abc>/u",
      "enter:Pattern:(?<$abc>a)\\k<$abc>",
      "enter:Alternative:(?<$abc>a)\\k<$abc>",
      "enter:CapturingGroup:(?<$abc>a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(?<$abc>a)",
      "enter:Backreference:\\k<$abc>",
      "leave:Backreference:\\k<$abc>",
      "leave:Alternative:(?<$abc>a)\\k<$abc>",
      "leave:Pattern:(?<$abc>a)\\k<$abc>",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/(?<$abc>a)\\k<$abc>/u"
    ],
    "/(?<あ>a)\\k<あ>/u": [
      "enter:RegExpLiteral:/(?<あ>a)\\k<あ>/u",
      "enter:Pattern:(?<あ>a)\\k<あ>",
      "enter:Alternative:(?<あ>a)\\k<あ>",
      "enter:CapturingGroup:(?<あ>a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(?<あ>a)",
      "enter:Backreference:\\k<あ>",
      "leave:Backreference:\\k<あ>",
      "leave:Alternative:(?<あ>a)\\k<あ>",
      "leave:Pattern:(?<あ>a)\\k<あ>",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/(?<あ>a)\\k<あ>/u"
    ],
    "/(?<𠮷>a)\\k<\\u{20bb7}>/u": [
      "enter:RegExpLiteral:/(?<𠮷>a)\\k<\\u{20bb7}>/u",
      "enter:Pattern:(?<𠮷>a)\\k<\\u{20bb7}>",
      "enter:Alternative:(?<𠮷>a)\\k<\\u{20bb7}>",
      "enter:CapturingGroup:(?<𠮷>a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(?<𠮷>a)",
      "enter:Backreference:\\k<\\u{20bb7}>",
      "leave:Backreference:\\k<\\u{20bb7}>",
      "leave:Alternative:(?<𠮷>a)\\k<\\u{20bb7}>",
      "leave:Pattern:(?<𠮷>a)\\k<\\u{20bb7}>",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/(?<𠮷>a)\\k<\\u{20bb7}>/u"
    ],
    "/(?<\\uD842\\uDFB7>a)\\k<\\u{20bb7}>/u": [
      "enter:RegExpLiteral:/(?<\\uD842\\uDFB7>a)\\k<\\u{20bb7}>/u",
      "enter:Pattern:(?<\\uD842\\uDFB7>a)\\k<\\u{20bb7}>",
      "enter:Alternative:(?<\\uD842\\uDFB7>a)\\k<\\u{20bb7}>",
      "enter:CapturingGroup:(?<\\uD842\\uDFB7>a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(?<\\uD842\\uDFB7>a)",
      "enter:Backreference:\\k<\\u{20bb7}>",
      "leave:Backreference:\\k<\\u{20bb7}>",
      "leave:Alternative:(?<\\uD842\\uDFB7>a)\\k<\\u{20bb7}>",
      "leave:Pattern:(?<\\uD842\\uDFB7>a)\\k<\\u{20bb7}>",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/(?<\\uD842\\uDFB7>a)\\k<\\u{20bb7}>/u"
    ],
    "/(?<\\u{20bb7}>a)\\k<\\uD842\\uDFB7>/u": [
      "enter:RegExpLiteral:/(?<\\u{20bb7}>a)\\k<\\uD842\\uDFB7>/u",
      "enter:Pattern:(?<\\u{20bb7}>a)\\k<\\uD842\\uDFB7>",
      "enter:Alternative:(?<\\u{20bb7}>a)\\k<\\uD842\\uDFB7>",
      "enter:CapturingGroup:(?<\\u{20bb7}>a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(?<\\u{20bb7}>a)",
      "enter:Backreference:\\k<\\uD842\\uDFB7>",
      "leave:Backreference:\\k<\\uD842\\uDFB7>",
      "leave:Alternative:(?<\\u{20bb7}>a)\\k<\\uD842\\uDFB7>",
      "leave:Pattern:(?<\\u{20bb7}>a)\\k<\\uD842\\uDFB7>",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/(?<\\u{20bb7}>a)\\k<\\uD842\\uDFB7>/u"
    ],
    "/(?<abc>a)\\k<\\u0061\\u0062\\u0063>/u": [
      "enter:RegExpLiteral:/(?<abc>a)\\k<\\u0061\\u0062\\u0063>/u",
      "enter:Pattern:(?<abc>a)\\k<\\u0061\\u0062\\u0063>",
      "enter:Alternative:(?<abc>a)\\k<\\u0061\\u0062\\u0063>",
      "enter:CapturingGroup:(?<abc>a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(?<abc>a)",
      "enter:Backreference:\\k<\\u0061\\u0062\\u0063>",
      "leave:Backreference:\\k<\\u0061\\u0062\\u0063>",
      "leave:Alternative:(?<abc>a)\\k<\\u0061\\u0062\\u0063>",
      "leave:Pattern:(?<abc>a)\\k<\\u0061\\u0062\\u0063>",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/(?<abc>a)\\k<\\u0061\\u0062\\u0063>/u"
    ],
    "/(?<\\u0061\\u0062\\u0063>a)\\k<abc>/u": [
      "enter:RegExpLiteral:/(?<\\u0061\\u0062\\u0063>a)\\k<abc>/u",
      "enter:Pattern:(?<\\u0061\\u0062\\u0063>a)\\k<abc>",
      "enter:Alternative:(?<\\u0061\\u0062\\u0063>a)\\k<abc>",
      "enter:CapturingGroup:(?<\\u0061\\u0062\\u0063>a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(?<\\u0061\\u0062\\u0063>a)",
      "enter:Backreference:\\k<abc>",
      "leave:Backreference:\\k<abc>",
      "leave:Alternative:(?<\\u0061\\u0062\\u0063>a)\\k<abc>",
      "leave:Pattern:(?<\\u0061\\u0062\\u0063>a)\\k<abc>",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/(?<\\u0061\\u0062\\u0063>a)\\k<abc>/u"
    ],
    "/(?<\\u0061\\u0062\\u0063>a)\\k<\\u{61}\\u{62}\\u{63}>/u": [
      "enter:RegExpLiteral:/(?<\\u0061\\u0062\\u0063>a)\\k<\\u{61}\\u{62}\\u{63}>/u",
      "enter:Pattern:(?<\\u0061\\u0062\\u0063>a)\\k<\\u{61}\\u{62}\\u{63}>",
      "enter:Alternative:(?<\\u0061\\u0062\\u0063>a)\\k<\\u{61}\\u{62}\\u{63}>",
      "enter:CapturingGroup:(?<\\u0061\\u0062\\u0063>a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(?<\\u0061\\u0062\\u0063>a)",
      "enter:Backreference:\\k<\\u{61}\\u{62}\\u{63}>",
      "leave:Backreference:\\k<\\u{61}\\u{62}\\u{63}>",
      "leave:Alternative:(?<\\u0061\\u0062\\u0063>a)\\k<\\u{61}\\u{62}\\u{63}>",
      "leave:Pattern:(?<\\u0061\\u0062\\u0063>a)\\k<\\u{61}\\u{62}\\u{63}>",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/(?<\\u0061\\u0062\\u0063>a)\\k<\\u{61}\\u{62}\\u{63}>/u"
    ],
    "/(?<a1>a)\\k<a1>/u": [
      "enter:RegExpLiteral:/(?<a1>a)\\k<a1>/u",
      "enter:Pattern:(?<a1>a)\\k<a1>",
      "enter:Alternative:(?<a1>a)\\k<a1>",
      "enter:CapturingGroup:(?<a1>a)",
      "enter:Alternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:Alternative:a",
      "leave:CapturingGroup:(?<a1>a)",
      "enter:Backreference:\\k<a1>",
      "leave:Backreference:\\k<a1>",
      "leave:Alternative:(?<a1>a)\\k<a1>",
      "leave:Pattern:(?<a1>a)\\k<a1>",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/(?<a1>a)\\k<a1>/u"
    ],
    "/\\p/": [
      "enter:RegExpLiteral:/\\p/",
      "enter:Pattern:\\p",
      "enter:Alternative:\\p",
      "enter:Character:\\p",
      "leave:Character:\\p",
      "leave:Alternative:\\p",
      "leave:Pattern:\\p",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\p/"
    ],
    "/\\p{/": [
      "enter:RegExpLiteral:/\\p{/",
      "enter:Pattern:\\p{",
      "enter:Alternative:\\p{",
      "enter:Character:\\p",
      "leave:Character:\\p",
      "enter:Character:{",
      "leave:Character:{",
      "leave:Alternative:\\p{",
      "leave:Pattern:\\p{",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\p{/"
    ],
    "/\\p{ASCII/": [
      "enter:RegExpLiteral:/\\p{ASCII/",
      "enter:Pattern:\\p{ASCII",
      "enter:Alternative:\\p{ASCII",
      "enter:Character:\\p",
      "leave:Character:\\p",
      "enter:Character:{",
      "leave:Character:{",
      "enter:Character:A",
      "leave:Character:A",
      "enter:Character:S",
      "leave:Character:S",
      "enter:Character:C",
      "leave:Character:C",
      "enter:Character:I",
      "leave:Character:I",
      "enter:Character:I",
      "leave:Character:I",
      "leave:Alternative:\\p{ASCII",
      "leave:Pattern:\\p{ASCII",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\p{ASCII/"
    ],
    "/\\p{ASCII}/": [
      "enter:RegExpLiteral:/\\p{ASCII}/",
      "enter:Pattern:\\p{ASCII}",
      "enter:Alternative:\\p{ASCII}",
      "enter:Character:\\p",
      "leave:Character:\\p",
      "enter:Character:{",
      "leave:Character:{",
      "enter:Character:A",
      "leave:Character:A",
      "enter:Character:S",
      "leave:Character:S",
      "enter:Character:C",
      "leave:Character:C",
      "enter:Character:I",
      "leave:Character:I",
      "enter:Character:I",
      "leave:Character:I",
      "enter:Character:}",
      "leave:Character:}",
      "leave:Alternative:\\p{ASCII}",
      "leave:Pattern:\\p{ASCII}",
      "enter:Flags:",
      "leave:Flags:",
      "leave:RegExpLiteral:/\\p{ASCII}/"
    ],
    "/\\p{ASCII}/u": [
      "enter:RegExpLiteral:/\\p{ASCII}/u",
      "enter:Pattern:\\p{ASCII}",
      "enter:Alternative:\\p{ASCII}",
      "enter:CharacterSet:\\p{ASCII}",
      "leave:CharacterSet:\\p{ASCII}",
      "leave:Alternative:\\p{ASCII}",
      "leave:Pattern:\\p{ASCII}",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\p{ASCII}/u"
    ],
    "/\\p{Emoji}/u": [
      "enter:RegExpLiteral:/\\p{Emoji}/u",
      "enter:Pattern:\\p{Emoji}",
      "enter:Alternative:\\p{Emoji}",
      "enter:CharacterSet:\\p{Emoji}",
      "leave:CharacterSet:\\p{Emoji}",
      "leave:Alternative:\\p{Emoji}",
      "leave:Pattern:\\p{Emoji}",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\p{Emoji}/u"
    ],
    "/\\p{General_Category=Letter}/u": [
      "enter:RegExpLiteral:/\\p{General_Category=Letter}/u",
      "enter:Pattern:\\p{General_Category=Letter}",
      "enter:Alternative:\\p{General_Category=Letter}",
      "enter:CharacterSet:\\p{General_Category=Letter}",
      "leave:CharacterSet:\\p{General_Category=Letter}",
      "leave:Alternative:\\p{General_Category=Letter}",
      "leave:Pattern:\\p{General_Category=Letter}",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\p{General_Category=Letter}/u"
    ],
    "/\\p{Script=Hiragana}/u": [
      "enter:RegExpLiteral:/\\p{Script=Hiragana}/u",
      "enter:Pattern:\\p{Script=Hiragana}",
      "enter:Alternative:\\p{Script=Hiragana}",
      "enter:CharacterSet:\\p{Script=Hiragana}",
      "leave:CharacterSet:\\p{Script=Hiragana}",
      "leave:Alternative:\\p{Script=Hiragana}",
      "leave:Pattern:\\p{Script=Hiragana}",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\p{Script=Hiragana}/u"
    ],
    "/[\\p{Script=Hiragana}\\-\\p{Script=Katakana}]/u": [
      "enter:RegExpLiteral:/[\\p{Script=Hiragana}\\-\\p{Script=Katakana}]/u",
      "enter:Pattern:[\\p{Script=Hiragana}\\-\\p{Script=Katakana}]",
      "enter:Alternative:[\\p{Script=Hiragana}\\-\\p{Script=Katakana}]",
      "enter:CharacterClass:[\\p{Script=Hiragana}\\-\\p{Script=Katakana}]",
      "enter:CharacterSet:\\p{Script=Hiragana}",
      "leave:CharacterSet:\\p{Script=Hiragana}",
      "enter:Character:\\-",
      "leave:Character:\\-",
      "enter:CharacterSet:\\p{Script=Katakana}",
      "leave:CharacterSet:\\p{Script=Katakana}",
      "leave:CharacterClass:[\\p{Script=Hiragana}\\-\\p{Script=Katakana}]",
      "leave:Alternative:[\\p{Script=Hiragana}\\-\\p{Script=Katakana}]",
      "leave:Pattern:[\\p{Script=Hiragana}\\-\\p{Script=Katakana}]",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/[\\p{Script=Hiragana}\\-\\p{Script=Katakana}]/u"
    ],
    "/\\P{Letter}/u": [
      "enter:RegExpLiteral:/\\P{Letter}/u",
      "enter:Pattern:\\P{Letter}",
      "enter:Alternative:\\P{Letter}",
      "enter:CharacterSet:\\P{Letter}",
      "leave:CharacterSet:\\P{Letter}",
      "leave:Alternative:\\P{Letter}",
      "leave:Pattern:\\P{Letter}",
      "enter:Flags:u",
      "leave:Flags:u",
      "leave:RegExpLiteral:/\\P{Letter}/u"
    ],
    "/[A--B]/v": [
      "enter:RegExpLiteral:/[A--B]/v",
      "enter:Pattern:[A--B]",
      "enter:Alternative:[A--B]",
      "enter:ExpressionCharacterClass:[A--B]",
      "enter:ClassSubtraction:A--B",
      "enter:Character:A",
      "leave:Character:A",
      "enter:Character:B",
      "leave:Character:B",
      "leave:ClassSubtraction:A--B",
      "leave:ExpressionCharacterClass:[A--B]",
      "leave:Alternative:[A--B]",
      "leave:Pattern:[A--B]",
      "enter:Flags:v",
      "leave:Flags:v",
      "leave:RegExpLiteral:/[A--B]/v"
    ],
    "/[A--B--C]/v": [
      "enter:RegExpLiteral:/[A--B--C]/v",
      "enter:Pattern:[A--B--C]",
      "enter:Alternative:[A--B--C]",
      "enter:ExpressionCharacterClass:[A--B--C]",
      "enter:ClassSubtraction:A--B--C",
      "enter:ClassSubtraction:A--B",
      "enter:Character:A",
      "leave:Character:A",
      "enter:Character:B",
      "leave:Character:B",
      "leave:ClassSubtraction:A--B",
      "enter:Character:C",
      "leave:Character:C",
      "leave:ClassSubtraction:A--B--C",
      "leave:ExpressionCharacterClass:[A--B--C]",
      "leave:Alternative:[A--B--C]",
      "leave:Pattern:[A--B--C]",
      "enter:Flags:v",
      "leave:Flags:v",
      "leave:RegExpLiteral:/[A--B--C]/v"
    ],
    "/[A&&B&&C]/v": [
      "enter:RegExpLiteral:/[A&&B&&C]/v",
      "enter:Pattern:[A&&B&&C]",
      "enter:Alternative:[A&&B&&C]",
      "enter:ExpressionCharacterClass:[A&&B&&C]",
      "enter:ClassIntersection:A&&B&&C",
      "enter:ClassIntersection:A&&B",
      "enter:Character:A",
      "leave:Character:A",
      "enter:Character:B",
      "leave:Character:B",
      "leave:ClassIntersection:A&&B",
      "enter:Character:C",
      "leave:Character:C",
      "leave:ClassIntersection:A&&B&&C",
      "leave:ExpressionCharacterClass:[A&&B&&C]",
      "leave:Alternative:[A&&B&&C]",
      "leave:Pattern:[A&&B&&C]",
      "enter:Flags:v",
      "leave:Flags:v",
      "leave:RegExpLiteral:/[A&&B&&C]/v"
    ],
    "/[A--[B--C]]/v": [
      "enter:RegExpLiteral:/[A--[B--C]]/v",
      "enter:Pattern:[A--[B--C]]",
      "enter:Alternative:[A--[B--C]]",
      "enter:ExpressionCharacterClass:[A--[B--C]]",
      "enter:ClassSubtraction:A--[B--C]",
      "enter:Character:A",
      "leave:Character:A",
      "enter:ExpressionCharacterClass:[B--C]",
      "enter:ClassSubtraction:B--C",
      "enter:Character:B",
      "leave:Character:B",
      "enter:Character:C",
      "leave:Character:C",
      "leave:ClassSubtraction:B--C",
      "leave:ExpressionCharacterClass:[B--C]",
      "leave:ClassSubtraction:A--[B--C]",
      "leave:ExpressionCharacterClass:[A--[B--C]]",
      "leave:Alternative:[A--[B--C]]",
      "leave:Pattern:[A--[B--C]]",
      "enter:Flags:v",
      "leave:Flags:v",
      "leave:RegExpLiteral:/[A--[B--C]]/v"
    ],
    "/[A&&[B&&C]]/v": [
      "enter:RegExpLiteral:/[A&&[B&&C]]/v",
      "enter:Pattern:[A&&[B&&C]]",
      "enter:Alternative:[A&&[B&&C]]",
      "enter:ExpressionCharacterClass:[A&&[B&&C]]",
      "enter:ClassIntersection:A&&[B&&C]",
      "enter:Character:A",
      "leave:Character:A",
      "enter:ExpressionCharacterClass:[B&&C]",
      "enter:ClassIntersection:B&&C",
      "enter:Character:B",
      "leave:Character:B",
      "enter:Character:C",
      "leave:Character:C",
      "leave:ClassIntersection:B&&C",
      "leave:ExpressionCharacterClass:[B&&C]",
      "leave:ClassIntersection:A&&[B&&C]",
      "leave:ExpressionCharacterClass:[A&&[B&&C]]",
      "leave:Alternative:[A&&[B&&C]]",
      "leave:Pattern:[A&&[B&&C]]",
      "enter:Flags:v",
      "leave:Flags:v",
      "leave:RegExpLiteral:/[A&&[B&&C]]/v"
    ],
    "/[\\q{a|bc|def}]/v": [
      "enter:RegExpLiteral:/[\\q{a|bc|def}]/v",
      "enter:Pattern:[\\q{a|bc|def}]",
      "enter:Alternative:[\\q{a|bc|def}]",
      "enter:CharacterClass:[\\q{a|bc|def}]",
      "enter:ClassStringDisjunction:\\q{a|bc|def}",
      "enter:StringAlternative:a",
      "enter:Character:a",
      "leave:Character:a",
      "leave:StringAlternative:a",
      "enter:StringAlternative:bc",
      "enter:Character:b",
      "leave:Character:b",
      "enter:Character:c",
      "leave:Character:c",
      "leave:StringAlternative:bc",
      "enter:StringAlternative:def",
      "enter:Character:d",
      "leave:Character:d",
      "enter:Character:e",
      "leave:Character:e",
      "enter:Character:f",
      "leave:Character:f",
      "leave:StringAlternative:def",
      "leave:ClassStringDisjunction:\\q{a|bc|def}",
      "leave:CharacterClass:[\\q{a|bc|def}]",
      "leave:Alternative:[\\q{a|bc|def}]",
      "leave:Pattern:[\\q{a|bc|def}]",
      "enter:Flags:v",
      "leave:Flags:v",
      "leave:RegExpLiteral:/[\\q{a|bc|def}]/v"
    ]
  }
}